/*! For license information please see main.65b040a7.js.LICENSE.txt */
(()=>{var e={353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var a={},r={};function o(e,t){var n,s,o;return t?(o=0<=(e>>>=0)&&e<256)&&(s=r[e])?s:(n=c(e,(0|e)<0?-1:0,!0),o&&(r[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(s=a[e])?s:(n=c(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:f;if(t){if(e<0)return y;if(e>=d)return b}else{if(e<=-p)return k;if(e+1>=p)return x}return e<0?i(-e,t).neg():c(e%_|0,e/_|0,t)}function c(e,t,s){return new n(e,t,s)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return f;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return u(e.substring(1),t,n).neg();for(var a=i(l(n,8)),r=f,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),m=parseInt(e.substring(o,o+c),n);if(c<8){var _=i(l(n,c));r=r.mul(_).add(i(m))}else r=(r=r.mul(a)).add(i(m))}return r.unsigned=t,r}function m(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=m;var _=4294967296,d=_*_,p=d/2,h=o(1<<24),f=o(0);n.ZERO=f;var y=o(0,!0);n.UZERO=y;var w=o(1);n.ONE=w;var g=o(1,!0);n.UONE=g;var v=o(-1);n.NEG_ONE=v;var x=c(-1,2147483647,!1);n.MAX_VALUE=x;var b=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=b;var k=c(0,-2147483648,!1);n.MIN_VALUE=k;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*_+(this.low>>>0):this.high*_+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=i(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(l(e,6),this.unsigned),r=this,o="";;){var c=r.div(a),u=(r.sub(c.mul(a)).toInt()>>>0).toString(e);if((r=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return s(e)||(e=m(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(s(e)||(e=m(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(w)},I.neg=I.negate,I.add=function(e){s(e)||(e=m(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,r=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,_=0,d=0,p=0;return d+=(p+=r+(65535&e.low))>>>16,_+=(d+=a+l)>>>16,u+=(_+=n+i)>>>16,u+=t+o,c((d&=65535)<<16|(p&=65535),(u&=65535)<<16|(_&=65535),this.unsigned)},I.subtract=function(e){return s(e)||(e=m(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return f;if(s(e)||(e=m(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return f;if(this.eq(k))return e.isOdd()?k:f;if(e.eq(k))return this.isOdd()?k:f;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(h)&&e.lt(h))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,r=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,_=e.low>>>16,d=65535&e.low,p=0,y=0,w=0,g=0;return w+=(g+=o*d)>>>16,y+=(w+=r*d)>>>16,w&=65535,y+=(w+=o*_)>>>16,p+=(y+=a*d)>>>16,y&=65535,p+=(y+=r*_)>>>16,y&=65535,p+=(y+=o*u)>>>16,p+=n*d+a*_+r*u+o*l,c((w&=65535)<<16|(g&=65535),(p&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(s(e)||(e=m(e)),e.isZero())throw Error("division by zero");var n,a,r;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:f;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return g;r=y}else{if(this.eq(k))return e.eq(w)||e.eq(v)?k:e.eq(k)?w:(n=this.shr(1).div(e).shl(1)).eq(f)?e.isNegative()?w:v:(a=this.sub(e.mul(n)),r=n.add(a.div(e)));if(e.eq(k))return this.unsigned?y:f;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=f}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),_=i(n),d=_.mul(e);d.isNegative()||d.gt(a);)d=(_=i(n-=u,this.unsigned)).mul(e);_.isZero()&&(_=w),r=r.add(_),a=a.sub(d)}return r},I.div=I.divide,I.modulo=function(e){return s(e)||(e=m(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return c(~this.low,~this.high,this.unsigned)},I.and=function(e){return s(e)||(e=m(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return s(e)||(e=m(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return s(e)||(e=m(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return s(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var s=n(43),a=n(853);function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),m=Object.prototype.hasOwnProperty,_=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},p={};function h(e,t,n,s,a,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=s,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=o}var f={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){f[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];f[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){f[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){f[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){f[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){f[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){f[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){f[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){f[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function w(e){return e[1].toUpperCase()}function g(e,t,n,s){var a=f.hasOwnProperty(t)?f[t]:null;(null!==a?0!==a.type:s||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,s){if(null===t||"undefined"===typeof t||function(e,t,n,s){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!s&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,s))return!0;if(s)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,s)&&(n=null),s||null===a?function(e){return!!m.call(p,e)||!m.call(d,e)&&(_.test(e)?p[e]=!0:(d[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,s=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,s?e.setAttributeNS(s,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,w);f[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,w);f[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,w);f[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){f[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),f.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){f[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=Symbol.for("react.element"),b=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),I=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),C=Symbol.for("react.provider"),N=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),E=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function O(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=M&&e[M]||e["@@iterator"])?e:null}var L,B=Object.assign;function z(e){if(void 0===L)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var P=!1;function W(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var s=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){s=l}e.call(t.prototype)}else{try{throw Error()}catch(l){s=l}e()}}catch(l){if(l&&s&&"string"===typeof l.stack){for(var a=l.stack.split("\n"),r=s.stack.split("\n"),o=a.length-1,i=r.length-1;1<=o&&0<=i&&a[o]!==r[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==r[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==r[i]){var c="\n"+a[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function U(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case k:return"Fragment";case b:return"Portal";case S:return"Profiler";case I:return"StrictMode";case E:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case N:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===I?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),s=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,r=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){s=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return s},setValue:function(e){s=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),s="";return e&&(s=j(e)?e.checked?"true":"false":e.value),(e=s)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return B({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,s=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:s,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&g(e,"checked",t,!1)}function Z(e,t){J(e,t);var n=H(t.value),s=t.type;if(null!=n)"number"===s?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===s||"reset"===s)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var s=t.type;if(!("submit"!==s&&"reset"!==s||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,s){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&s&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(s&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function se(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(r(91));return B({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(r(92));if(te(n)){if(1<n.length)throw Error(r(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function re(e,t){var n=H(t.value),s=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=s&&(e.defaultValue=""+s)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,me=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,s){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function _e(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var de={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||de.hasOwnProperty(e)&&de[e]?(""+t).trim():t+"px"}function fe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var s=0===n.indexOf("--"),a=he(n,t[n],s);"float"===n&&(n="cssFloat"),s?e.setProperty(n,a):e[n]=a}}Object.keys(de).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),de[t]=de[e]}))}));var ye=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function we(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(r(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(r(62))}}function ge(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var be=null,ke=null,Ie=null;function Se(e){if(e=ga(e)){if("function"!==typeof be)throw Error(r(280));var t=e.stateNode;t&&(t=xa(t),be(e.stateNode,e.type,t))}}function Ce(e){ke?Ie?Ie.push(e):Ie=[e]:ke=e}function Ne(){if(ke){var e=ke,t=Ie;if(Ie=ke=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function Te(e,t){return e(t)}function Ee(){}var Re=!1;function Ae(e,t,n){if(Re)return e(t,n);Re=!0;try{return Te(e,t,n)}finally{Re=!1,(null!==ke||null!==Ie)&&(Ee(),Ne())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var s=xa(n);if(null===s)return null;n=s[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(s=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!s;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(r(231,t,typeof n));return n}var De=!1;if(u)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){De=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ue){De=!1}function Oe(e,t,n,s,a,r,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var Le=!1,Be=null,ze=!1,Pe=null,We={onError:function(e){Le=!0,Be=e}};function Ue(e,t,n,s,a,r,o,i,c){Le=!1,Be=null,Oe.apply(We,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ve(e)!==e)throw Error(r(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(r(188));return t!==e?null:e}for(var n=e,s=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(s=a.return)){n=s;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return He(a),e;if(o===s)return He(a),t;o=o.sibling}throw Error(r(188))}if(n.return!==s.return)n=a,s=o;else{for(var i=!1,c=a.child;c;){if(c===n){i=!0,n=a,s=o;break}if(c===s){i=!0,s=a,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,s=a;break}if(c===s){i=!0,s=o,n=a;break}c=c.sibling}if(!i)throw Error(r(189))}}if(n.alternate!==s)throw Error(r(190))}if(3!==n.tag)throw Error(r(188));return n.stateNode.current===n?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var qe=a.unstable_scheduleCallback,Xe=a.unstable_cancelCallback,Ye=a.unstable_shouldYield,Qe=a.unstable_requestPaint,Je=a.unstable_now,Ze=a.unstable_getCurrentPriorityLevel,$e=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,st=a.unstable_IdlePriority,at=null,rt=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function mt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function _t(e,t){var n=e.pendingLanes;if(0===n)return 0;var s=0,a=e.suspendedLanes,r=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~a;0!==i?s=mt(i):0!==(r&=o)&&(s=mt(r))}else 0!==(o=n&~a)?s=mt(o):0!==r&&(s=mt(r));if(0===s)return 0;if(0!==t&&t!==s&&0===(t&a)&&((a=s&-s)>=(r=t&-t)||16===a&&0!==(4194240&r)))return t;if(0!==(4&s)&&(s|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=s;0<t;)a=1<<(n=31-ot(t)),s|=e[n],t&=~a;return s}function dt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function wt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var s=31-ot(n),a=1<<s;a&t|e[s]&t&&(e[s]|=t),n&=~a}}var gt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var xt,bt,kt,It,St,Ct=!1,Nt=[],Tt=null,Et=null,Rt=null,At=new Map,Ft=new Map,Dt=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":Tt=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function Lt(e,t,n,s,a,r){return null===e||e.nativeEvent!==r?(e={blockedOn:t,domEventName:n,eventSystemFlags:s,nativeEvent:r,targetContainers:[a]},null!==t&&(null!==(t=ga(t))&&bt(t)),e):(e.eventSystemFlags|=s,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Bt(e){var t=wa(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void St(e.priority,(function(){kt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ga(n))&&bt(t),e.blockedOn=n,!1;var s=new(n=e.nativeEvent).constructor(n.type,n);ve=s,n.target.dispatchEvent(s),ve=null,t.shift()}return!0}function Pt(e,t,n){zt(e)&&n.delete(t)}function Wt(){Ct=!1,null!==Tt&&zt(Tt)&&(Tt=null),null!==Et&&zt(Et)&&(Et=null),null!==Rt&&zt(Rt)&&(Rt=null),At.forEach(Pt),Ft.forEach(Pt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Ct||(Ct=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Wt)))}function Vt(e){function t(t){return Ut(t,e)}if(0<Nt.length){Ut(Nt[0],e);for(var n=1;n<Nt.length;n++){var s=Nt[n];s.blockedOn===e&&(s.blockedOn=null)}}for(null!==Tt&&Ut(Tt,e),null!==Et&&Ut(Et,e),null!==Rt&&Ut(Rt,e),At.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(s=Dt[n]).blockedOn===e&&(s.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Bt(n),null===n.blockedOn&&Dt.shift()}var Gt=v.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,s){var a=gt,r=Gt.transition;Gt.transition=null;try{gt=1,qt(e,t,n,s)}finally{gt=a,Gt.transition=r}}function Kt(e,t,n,s){var a=gt,r=Gt.transition;Gt.transition=null;try{gt=4,qt(e,t,n,s)}finally{gt=a,Gt.transition=r}}function qt(e,t,n,s){if(Ht){var a=Yt(e,t,n,s);if(null===a)Hs(e,t,s,Xt,n),Ot(e,s);else if(function(e,t,n,s,a){switch(t){case"focusin":return Tt=Lt(Tt,e,t,n,s,a),!0;case"dragenter":return Et=Lt(Et,e,t,n,s,a),!0;case"mouseover":return Rt=Lt(Rt,e,t,n,s,a),!0;case"pointerover":var r=a.pointerId;return At.set(r,Lt(At.get(r)||null,e,t,n,s,a)),!0;case"gotpointercapture":return r=a.pointerId,Ft.set(r,Lt(Ft.get(r)||null,e,t,n,s,a)),!0}return!1}(a,e,t,n,s))s.stopPropagation();else if(Ot(e,s),4&t&&-1<Mt.indexOf(e)){for(;null!==a;){var r=ga(a);if(null!==r&&xt(r),null===(r=Yt(e,t,n,s))&&Hs(e,t,s,Xt,n),r===a)break;a=r}null!==a&&s.stopPropagation()}else Hs(e,t,s,null,n)}}var Xt=null;function Yt(e,t,n,s){if(Xt=null,null!==(e=wa(e=xe(s))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case st:return 536870912;default:return 16}default:return 16}}var Jt=null,Zt=null,$t=null;function en(){if($t)return $t;var e,t,n=Zt,s=n.length,a="value"in Jt?Jt.value:Jt.textContent,r=a.length;for(e=0;e<s&&n[e]===a[e];e++);var o=s-e;for(t=1;t<=o&&n[s-t]===a[r-t];t++);return $t=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function sn(){return!1}function an(e){function t(t,n,s,a,r){for(var o in this._reactName=t,this._targetInst=s,this.type=n,this.nativeEvent=a,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:sn,this.isPropagationStopped=sn,this}return B(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var rn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=an(ln),mn=B({},ln,{view:0,detail:0}),_n=an(mn),dn=B({},mn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(rn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=rn=0,cn=e),rn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),pn=an(dn),hn=an(B({},dn,{dataTransfer:0})),fn=an(B({},mn,{relatedTarget:0})),yn=an(B({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=B({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),gn=an(wn),vn=an(B({},ln,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},bn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function In(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kn[e])&&!!t[e]}function Sn(){return In}var Cn=B({},mn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?bn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Nn=an(Cn),Tn=an(B({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),En=an(B({},mn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),Rn=an(B({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=B({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=an(An),Dn=[9,13,27,32],Mn=u&&"CompositionEvent"in window,On=null;u&&"documentMode"in document&&(On=document.documentMode);var Ln=u&&"TextEvent"in window&&!On,Bn=u&&(!Mn||On&&8<On&&11>=On),zn=String.fromCharCode(32),Pn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,s){Ce(s),0<(t=Ks(t,"onChange")).length&&(n=new un("onChange","change",null,n,s),e.push({event:n,listeners:t}))}var Kn=null,qn=null;function Xn(e){zs(e,0)}function Yn(e){if(q(va(e)))return e}function Qn(e,t){if("change"===e)return t}var Jn=!1;if(u){var Zn;if(u){var $n="oninput"in document;if(!$n){var es=document.createElement("div");es.setAttribute("oninput","return;"),$n="function"===typeof es.oninput}Zn=$n}else Zn=!1;Jn=Zn&&(!document.documentMode||9<document.documentMode)}function ts(){Kn&&(Kn.detachEvent("onpropertychange",ns),qn=Kn=null)}function ns(e){if("value"===e.propertyName&&Yn(qn)){var t=[];jn(t,qn,e,xe(e)),Ae(Xn,t)}}function ss(e,t,n){"focusin"===e?(ts(),qn=n,(Kn=t).attachEvent("onpropertychange",ns)):"focusout"===e&&ts()}function as(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(qn)}function rs(e,t){if("click"===e)return Yn(t)}function os(e,t){if("input"===e||"change"===e)return Yn(t)}var is="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function cs(e,t){if(is(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),s=Object.keys(t);if(n.length!==s.length)return!1;for(s=0;s<n.length;s++){var a=n[s];if(!m.call(t,a)||!is(e[a],t[a]))return!1}return!0}function ls(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function us(e,t){var n,s=ls(e);for(e=0;s;){if(3===s.nodeType){if(n=e+s.textContent.length,e<=t&&n>=t)return{node:s,offset:t-e};e=n}e:{for(;s;){if(s.nextSibling){s=s.nextSibling;break e}s=s.parentNode}s=void 0}s=ls(s)}}function ms(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ms(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function _s(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(s){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function ds(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function ps(e){var t=_s(),n=e.focusedElem,s=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ms(n.ownerDocument.documentElement,n)){if(null!==s&&ds(n))if(t=s.start,void 0===(e=s.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,r=Math.min(s.start,a);s=void 0===s.end?r:Math.min(s.end,a),!e.extend&&r>s&&(a=s,s=r,r=a),a=us(n,r);var o=us(n,s);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),r>s?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hs=u&&"documentMode"in document&&11>=document.documentMode,fs=null,ys=null,ws=null,gs=!1;function vs(e,t,n){var s=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gs||null==fs||fs!==X(s)||("selectionStart"in(s=fs)&&ds(s)?s={start:s.selectionStart,end:s.selectionEnd}:s={anchorNode:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset},ws&&cs(ws,s)||(ws=s,0<(s=Ks(ys,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:s}),t.target=fs)))}function xs(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var bs={animationend:xs("Animation","AnimationEnd"),animationiteration:xs("Animation","AnimationIteration"),animationstart:xs("Animation","AnimationStart"),transitionend:xs("Transition","TransitionEnd")},ks={},Is={};function Ss(e){if(ks[e])return ks[e];if(!bs[e])return e;var t,n=bs[e];for(t in n)if(n.hasOwnProperty(t)&&t in Is)return ks[e]=n[t];return e}u&&(Is=document.createElement("div").style,"AnimationEvent"in window||(delete bs.animationend.animation,delete bs.animationiteration.animation,delete bs.animationstart.animation),"TransitionEvent"in window||delete bs.transitionend.transition);var Cs=Ss("animationend"),Ns=Ss("animationiteration"),Ts=Ss("animationstart"),Es=Ss("transitionend"),Rs=new Map,As="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fs(e,t){Rs.set(e,t),c(t,[e])}for(var Ds=0;Ds<As.length;Ds++){var Ms=As[Ds];Fs(Ms.toLowerCase(),"on"+(Ms[0].toUpperCase()+Ms.slice(1)))}Fs(Cs,"onAnimationEnd"),Fs(Ns,"onAnimationIteration"),Fs(Ts,"onAnimationStart"),Fs("dblclick","onDoubleClick"),Fs("focusin","onFocus"),Fs("focusout","onBlur"),Fs(Es,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Os="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ls=new Set("cancel close invalid load scroll toggle".split(" ").concat(Os));function Bs(e,t,n){var s=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,s,a,o,i,c,l){if(Ue.apply(this,arguments),Le){if(!Le)throw Error(r(198));var u=Be;Le=!1,Be=null,ze||(ze=!0,Pe=u)}}(s,t,void 0,e),e.currentTarget=null}function zs(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var s=e[n],a=s.event;s=s.listeners;e:{var r=void 0;if(t)for(var o=s.length-1;0<=o;o--){var i=s[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==r&&a.isPropagationStopped())break e;Bs(a,i,l),r=c}else for(o=0;o<s.length;o++){if(c=(i=s[o]).instance,l=i.currentTarget,i=i.listener,c!==r&&a.isPropagationStopped())break e;Bs(a,i,l),r=c}}}if(ze)throw e=Pe,ze=!1,Pe=null,e}function Ps(e,t){var n=t[ha];void 0===n&&(n=t[ha]=new Set);var s=e+"__bubble";n.has(s)||(Gs(t,e,2,!1),n.add(s))}function Ws(e,t,n){var s=0;t&&(s|=4),Gs(n,e,s,t)}var Us="_reactListening"+Math.random().toString(36).slice(2);function Vs(e){if(!e[Us]){e[Us]=!0,o.forEach((function(t){"selectionchange"!==t&&(Ls.has(t)||Ws(t,!1,e),Ws(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Us]||(t[Us]=!0,Ws("selectionchange",!1,t))}}function Gs(e,t,n,s){switch(Qt(t)){case 1:var a=jt;break;case 4:a=Kt;break;default:a=qt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),s?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Hs(e,t,n,s,a){var r=s;if(0===(1&t)&&0===(2&t)&&null!==s)e:for(;;){if(null===s)return;var o=s.tag;if(3===o||4===o){var i=s.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=s.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===a||8===c.nodeType&&c.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=wa(i)))return;if(5===(c=o.tag)||6===c){s=r=o;continue e}i=i.parentNode}}s=s.return}Ae((function(){var s=r,a=xe(n),o=[];e:{var i=Rs.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Nn;break;case"focusin":l="focus",c=fn;break;case"focusout":l="blur",c=fn;break;case"beforeblur":case"afterblur":c=fn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=En;break;case Cs:case Ns:case Ts:c=yn;break;case Es:c=Rn;break;case"scroll":c=_n;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=gn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=Tn}var u=0!==(4&t),m=!u&&"scroll"===e,_=u?null!==i?i+"Capture":null:i;u=[];for(var d,p=s;null!==p;){var h=(d=p).stateNode;if(5===d.tag&&null!==h&&(d=h,null!==_&&(null!=(h=Fe(p,_))&&u.push(js(p,h,d)))),m)break;p=p.return}0<u.length&&(i=new c(i,l,null,n,a),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===ve||!(l=n.relatedTarget||n.fromElement)||!wa(l)&&!l[pa])&&(c||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=s,null!==(l=(l=n.relatedTarget||n.toElement)?wa(l):null)&&(l!==(m=Ve(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=s),c!==l)){if(u=pn,h="onMouseLeave",_="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(u=Tn,h="onPointerLeave",_="onPointerEnter",p="pointer"),m=null==c?i:va(c),d=null==l?i:va(l),(i=new u(h,p+"leave",c,n,a)).target=m,i.relatedTarget=d,h=null,wa(a)===s&&((u=new u(_,p+"enter",l,n,a)).target=d,u.relatedTarget=m,h=u),m=h,c&&l)e:{for(_=l,p=0,d=u=c;d;d=qs(d))p++;for(d=0,h=_;h;h=qs(h))d++;for(;0<p-d;)u=qs(u),p--;for(;0<d-p;)_=qs(_),d--;for(;p--;){if(u===_||null!==_&&u===_.alternate)break e;u=qs(u),_=qs(_)}u=null}else u=null;null!==c&&Xs(o,i,c,u,!1),null!==l&&null!==m&&Xs(o,m,l,u,!0)}if("select"===(c=(i=s?va(s):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var f=Qn;else if(Hn(i))if(Jn)f=os;else{f=as;var y=ss}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(f=rs);switch(f&&(f=f(e,s))?jn(o,f,n,a):(y&&y(e,i,s),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=s?va(s):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(fs=y,ys=s,ws=null);break;case"focusout":ws=ys=fs=null;break;case"mousedown":gs=!0;break;case"contextmenu":case"mouseup":case"dragend":gs=!1,vs(o,n,a);break;case"selectionchange":if(hs)break;case"keydown":case"keyup":vs(o,n,a)}var w;if(Mn)e:{switch(e){case"compositionstart":var g="onCompositionStart";break e;case"compositionend":g="onCompositionEnd";break e;case"compositionupdate":g="onCompositionUpdate";break e}g=void 0}else Vn?Wn(e,n)&&(g="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(g="onCompositionStart");g&&(Bn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==g?"onCompositionEnd"===g&&Vn&&(w=en()):(Zt="value"in(Jt=a)?Jt.value:Jt.textContent,Vn=!0)),0<(y=Ks(s,g)).length&&(g=new vn(g,e,null,n,a),o.push({event:g,listeners:y}),w?g.data=w:null!==(w=Un(n))&&(g.data=w))),(w=Ln?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Pn=!0,zn);case"textInput":return(e=t.data)===zn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Mn&&Wn(e,t)?(e=en(),$t=Zt=Jt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Bn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(s=Ks(s,"onBeforeInput")).length&&(a=new vn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:s}),a.data=w))}zs(o,t)}))}function js(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ks(e,t){for(var n=t+"Capture",s=[];null!==e;){var a=e,r=a.stateNode;5===a.tag&&null!==r&&(a=r,null!=(r=Fe(e,n))&&s.unshift(js(e,r,a)),null!=(r=Fe(e,t))&&s.push(js(e,r,a))),e=e.return}return s}function qs(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xs(e,t,n,s,a){for(var r=t._reactName,o=[];null!==n&&n!==s;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===s)break;5===i.tag&&null!==l&&(i=l,a?null!=(c=Fe(n,r))&&o.unshift(js(n,c,i)):a||null!=(c=Fe(n,r))&&o.push(js(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ys=/\r\n?/g,Qs=/\u0000|\uFFFD/g;function Js(e){return("string"===typeof e?e:""+e).replace(Ys,"\n").replace(Qs,"")}function Zs(e,t,n){if(t=Js(t),Js(e)!==t&&n)throw Error(r(425))}function $s(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var sa="function"===typeof setTimeout?setTimeout:void 0,aa="function"===typeof clearTimeout?clearTimeout:void 0,ra="function"===typeof Promise?Promise:void 0,oa="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ra?function(e){return ra.resolve(null).then(e).catch(ia)}:sa;function ia(e){setTimeout((function(){throw e}))}function ca(e,t){var n=t,s=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===s)return e.removeChild(a),void Vt(t);s--}else"$"!==n&&"$?"!==n&&"$!"!==n||s++;n=a}while(n);Vt(t)}function la(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ua(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ma=Math.random().toString(36).slice(2),_a="__reactFiber$"+ma,da="__reactProps$"+ma,pa="__reactContainer$"+ma,ha="__reactEvents$"+ma,fa="__reactListeners$"+ma,ya="__reactHandles$"+ma;function wa(e){var t=e[_a];if(t)return t;for(var n=e.parentNode;n;){if(t=n[pa]||n[_a]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ua(e);null!==e;){if(n=e[_a])return n;e=ua(e)}return t}n=(e=n).parentNode}return null}function ga(e){return!(e=e[_a]||e[pa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function va(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function xa(e){return e[da]||null}var ba=[],ka=-1;function Ia(e){return{current:e}}function Sa(e){0>ka||(e.current=ba[ka],ba[ka]=null,ka--)}function Ca(e,t){ka++,ba[ka]=e.current,e.current=t}var Na={},Ta=Ia(Na),Ea=Ia(!1),Ra=Na;function Aa(e,t){var n=e.type.contextTypes;if(!n)return Na;var s=e.stateNode;if(s&&s.__reactInternalMemoizedUnmaskedChildContext===t)return s.__reactInternalMemoizedMaskedChildContext;var a,r={};for(a in n)r[a]=t[a];return s&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function Fa(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Da(){Sa(Ea),Sa(Ta)}function Ma(e,t,n){if(Ta.current!==Na)throw Error(r(168));Ca(Ta,t),Ca(Ea,n)}function Oa(e,t,n){var s=e.stateNode;if(t=t.childContextTypes,"function"!==typeof s.getChildContext)return n;for(var a in s=s.getChildContext())if(!(a in t))throw Error(r(108,G(e)||"Unknown",a));return B({},n,s)}function La(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Na,Ra=Ta.current,Ca(Ta,e),Ca(Ea,Ea.current),!0}function Ba(e,t,n){var s=e.stateNode;if(!s)throw Error(r(169));n?(e=Oa(e,t,Ra),s.__reactInternalMemoizedMergedChildContext=e,Sa(Ea),Sa(Ta),Ca(Ta,e)):Sa(Ea),Ca(Ea,n)}var za=null,Pa=!1,Wa=!1;function Ua(e){null===za?za=[e]:za.push(e)}function Va(){if(!Wa&&null!==za){Wa=!0;var e=0,t=gt;try{var n=za;for(gt=1;e<n.length;e++){var s=n[e];do{s=s(!0)}while(null!==s)}za=null,Pa=!1}catch(a){throw null!==za&&(za=za.slice(e+1)),qe($e,Va),a}finally{gt=t,Wa=!1}}return null}var Ga=[],Ha=0,ja=null,Ka=0,qa=[],Xa=0,Ya=null,Qa=1,Ja="";function Za(e,t){Ga[Ha++]=Ka,Ga[Ha++]=ja,ja=e,Ka=t}function $a(e,t,n){qa[Xa++]=Qa,qa[Xa++]=Ja,qa[Xa++]=Ya,Ya=e;var s=Qa;e=Ja;var a=32-ot(s)-1;s&=~(1<<a),n+=1;var r=32-ot(t)+a;if(30<r){var o=a-a%5;r=(s&(1<<o)-1).toString(32),s>>=o,a-=o,Qa=1<<32-ot(t)+a|n<<a|s,Ja=r+e}else Qa=1<<r|n<<a|s,Ja=e}function er(e){null!==e.return&&(Za(e,1),$a(e,1,0))}function tr(e){for(;e===ja;)ja=Ga[--Ha],Ga[Ha]=null,Ka=Ga[--Ha],Ga[Ha]=null;for(;e===Ya;)Ya=qa[--Xa],qa[Xa]=null,Ja=qa[--Xa],qa[Xa]=null,Qa=qa[--Xa],qa[Xa]=null}var nr=null,sr=null,ar=!1,rr=null;function or(e,t){var n=Al(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ir(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nr=e,sr=la(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nr=e,sr=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ya?{id:Qa,overflow:Ja}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Al(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nr=e,sr=null,!0);default:return!1}}function cr(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function lr(e){if(ar){var t=sr;if(t){var n=t;if(!ir(e,t)){if(cr(e))throw Error(r(418));t=la(n.nextSibling);var s=nr;t&&ir(e,t)?or(s,n):(e.flags=-4097&e.flags|2,ar=!1,nr=e)}}else{if(cr(e))throw Error(r(418));e.flags=-4097&e.flags|2,ar=!1,nr=e}}}function ur(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nr=e}function mr(e){if(e!==nr)return!1;if(!ar)return ur(e),ar=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=sr)){if(cr(e))throw _r(),Error(r(418));for(;t;)or(e,t),t=la(t.nextSibling)}if(ur(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){sr=la(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}sr=null}}else sr=nr?la(e.stateNode.nextSibling):null;return!0}function _r(){for(var e=sr;e;)e=la(e.nextSibling)}function dr(){sr=nr=null,ar=!1}function pr(e){null===rr?rr=[e]:rr.push(e)}var hr=v.ReactCurrentBatchConfig;function fr(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(r(309));var s=n.stateNode}if(!s)throw Error(r(147,e));var a=s,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(r(284));if(!n._owner)throw Error(r(290,e))}return e}function yr(e,t){throw e=Object.prototype.toString.call(t),Error(r(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function wr(e){return(0,e._init)(e._payload)}function gr(e){function t(t,n){if(e){var s=t.deletions;null===s?(t.deletions=[n],t.flags|=16):s.push(n)}}function n(n,s){if(!e)return null;for(;null!==s;)t(n,s),s=s.sibling;return null}function s(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Dl(e,t)).index=0,e.sibling=null,e}function o(t,n,s){return t.index=s,e?null!==(s=t.alternate)?(s=s.index)<n?(t.flags|=2,n):s:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,s){return null===t||6!==t.tag?((t=Bl(n,e.mode,s)).return=e,t):((t=a(t,n)).return=e,t)}function l(e,t,n,s){var r=n.type;return r===k?m(e,t,n.props.children,s,n.key):null!==t&&(t.elementType===r||"object"===typeof r&&null!==r&&r.$$typeof===F&&wr(r)===t.type)?((s=a(t,n.props)).ref=fr(e,t,n),s.return=e,s):((s=Ml(n.type,n.key,n.props,null,e.mode,s)).ref=fr(e,t,n),s.return=e,s)}function u(e,t,n,s){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zl(n,e.mode,s)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function m(e,t,n,s,r){return null===t||7!==t.tag?((t=Ol(n,e.mode,s,r)).return=e,t):((t=a(t,n)).return=e,t)}function _(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Bl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Ml(t.type,t.key,t.props,null,e.mode,n)).ref=fr(e,null,t),n.return=e,n;case b:return(t=zl(t,e.mode,n)).return=e,t;case F:return _(e,(0,t._init)(t._payload),n)}if(te(t)||O(t))return(t=Ol(t,e.mode,n,null)).return=e,t;yr(e,t)}return null}function d(e,t,n,s){var a=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==a?null:c(e,t,""+n,s);if("object"===typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===a?l(e,t,n,s):null;case b:return n.key===a?u(e,t,n,s):null;case F:return d(e,t,(a=n._init)(n._payload),s)}if(te(n)||O(n))return null!==a?null:m(e,t,n,s,null);yr(e,n)}return null}function p(e,t,n,s,a){if("string"===typeof s&&""!==s||"number"===typeof s)return c(t,e=e.get(n)||null,""+s,a);if("object"===typeof s&&null!==s){switch(s.$$typeof){case x:return l(t,e=e.get(null===s.key?n:s.key)||null,s,a);case b:return u(t,e=e.get(null===s.key?n:s.key)||null,s,a);case F:return p(e,t,n,(0,s._init)(s._payload),a)}if(te(s)||O(s))return m(t,e=e.get(n)||null,s,a,null);yr(t,s)}return null}function h(a,r,i,c){for(var l=null,u=null,m=r,h=r=0,f=null;null!==m&&h<i.length;h++){m.index>h?(f=m,m=null):f=m.sibling;var y=d(a,m,i[h],c);if(null===y){null===m&&(m=f);break}e&&m&&null===y.alternate&&t(a,m),r=o(y,r,h),null===u?l=y:u.sibling=y,u=y,m=f}if(h===i.length)return n(a,m),ar&&Za(a,h),l;if(null===m){for(;h<i.length;h++)null!==(m=_(a,i[h],c))&&(r=o(m,r,h),null===u?l=m:u.sibling=m,u=m);return ar&&Za(a,h),l}for(m=s(a,m);h<i.length;h++)null!==(f=p(m,a,h,i[h],c))&&(e&&null!==f.alternate&&m.delete(null===f.key?h:f.key),r=o(f,r,h),null===u?l=f:u.sibling=f,u=f);return e&&m.forEach((function(e){return t(a,e)})),ar&&Za(a,h),l}function f(a,i,c,l){var u=O(c);if("function"!==typeof u)throw Error(r(150));if(null==(c=u.call(c)))throw Error(r(151));for(var m=u=null,h=i,f=i=0,y=null,w=c.next();null!==h&&!w.done;f++,w=c.next()){h.index>f?(y=h,h=null):y=h.sibling;var g=d(a,h,w.value,l);if(null===g){null===h&&(h=y);break}e&&h&&null===g.alternate&&t(a,h),i=o(g,i,f),null===m?u=g:m.sibling=g,m=g,h=y}if(w.done)return n(a,h),ar&&Za(a,f),u;if(null===h){for(;!w.done;f++,w=c.next())null!==(w=_(a,w.value,l))&&(i=o(w,i,f),null===m?u=w:m.sibling=w,m=w);return ar&&Za(a,f),u}for(h=s(a,h);!w.done;f++,w=c.next())null!==(w=p(h,a,f,w.value,l))&&(e&&null!==w.alternate&&h.delete(null===w.key?f:w.key),i=o(w,i,f),null===m?u=w:m.sibling=w,m=w);return e&&h.forEach((function(e){return t(a,e)})),ar&&Za(a,f),u}return function e(s,r,o,c){if("object"===typeof o&&null!==o&&o.type===k&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case x:e:{for(var l=o.key,u=r;null!==u;){if(u.key===l){if((l=o.type)===k){if(7===u.tag){n(s,u.sibling),(r=a(u,o.props.children)).return=s,s=r;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&wr(l)===u.type){n(s,u.sibling),(r=a(u,o.props)).ref=fr(s,u,o),r.return=s,s=r;break e}n(s,u);break}t(s,u),u=u.sibling}o.type===k?((r=Ol(o.props.children,s.mode,c,o.key)).return=s,s=r):((c=Ml(o.type,o.key,o.props,null,s.mode,c)).ref=fr(s,r,o),c.return=s,s=c)}return i(s);case b:e:{for(u=o.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(s,r.sibling),(r=a(r,o.children||[])).return=s,s=r;break e}n(s,r);break}t(s,r),r=r.sibling}(r=zl(o,s.mode,c)).return=s,s=r}return i(s);case F:return e(s,r,(u=o._init)(o._payload),c)}if(te(o))return h(s,r,o,c);if(O(o))return f(s,r,o,c);yr(s,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==r&&6===r.tag?(n(s,r.sibling),(r=a(r,o)).return=s,s=r):(n(s,r),(r=Bl(o,s.mode,c)).return=s,s=r),i(s)):n(s,r)}}var vr=gr(!0),xr=gr(!1),br=Ia(null),kr=null,Ir=null,Sr=null;function Cr(){Sr=Ir=kr=null}function Nr(e){var t=br.current;Sa(br),e._currentValue=t}function Tr(e,t,n){for(;null!==e;){var s=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==s&&(s.childLanes|=t)):null!==s&&(s.childLanes&t)!==t&&(s.childLanes|=t),e===n)break;e=e.return}}function Er(e,t){kr=e,Sr=Ir=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(gi=!0),e.firstContext=null)}function Rr(e){var t=e._currentValue;if(Sr!==e)if(e={context:e,memoizedValue:t,next:null},null===Ir){if(null===kr)throw Error(r(308));Ir=e,kr.dependencies={lanes:0,firstContext:e}}else Ir=Ir.next=e;return t}var Ar=null;function Fr(e){null===Ar?Ar=[e]:Ar.push(e)}function Dr(e,t,n,s){var a=t.interleaved;return null===a?(n.next=n,Fr(t)):(n.next=a.next,a.next=n),t.interleaved=n,Mr(e,s)}function Mr(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Or=!1;function Lr(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Br(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function zr(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Pr(e,t,n){var s=e.updateQueue;if(null===s)return null;if(s=s.shared,0!==(2&Tc)){var a=s.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),s.pending=t,Mr(e,n)}return null===(a=s.interleaved)?(t.next=t,Fr(s)):(t.next=a.next,a.next=t),s.interleaved=t,Mr(e,n)}function Wr(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var s=t.lanes;n|=s&=e.pendingLanes,t.lanes=n,wt(e,n)}}function Ur(e,t){var n=e.updateQueue,s=e.alternate;if(null!==s&&n===(s=s.updateQueue)){var a=null,r=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===r?a=r=o:r=r.next=o,n=n.next}while(null!==n);null===r?a=r=t:r=r.next=t}else a=r=t;return n={baseState:s.baseState,firstBaseUpdate:a,lastBaseUpdate:r,shared:s.shared,effects:s.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Vr(e,t,n,s){var a=e.updateQueue;Or=!1;var r=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?r=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==r){var m=a.baseState;for(o=0,u=l=c=null,i=r;;){var _=i.lane,d=i.eventTime;if((s&_)===_){null!==u&&(u=u.next={eventTime:d,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var p=e,h=i;switch(_=t,d=n,h.tag){case 1:if("function"===typeof(p=h.payload)){m=p.call(d,m,_);break e}m=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null===(_="function"===typeof(p=h.payload)?p.call(d,m,_):p)||void 0===_)break e;m=B({},m,_);break e;case 2:Or=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(_=a.effects)?a.effects=[i]:_.push(i))}else d={eventTime:d,lane:_,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=d,c=m):u=u.next=d,o|=_;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(_=i).next,_.next=null,a.lastBaseUpdate=_,a.shared.pending=null}}if(null===u&&(c=m),a.baseState=c,a.firstBaseUpdate=l,a.lastBaseUpdate=u,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===r&&(a.shared.lanes=0);Lc|=o,e.lanes=o,e.memoizedState=m}}function Gr(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var s=e[t],a=s.callback;if(null!==a){if(s.callback=null,s=n,"function"!==typeof a)throw Error(r(191,a));a.call(s)}}}var Hr={},jr=Ia(Hr),Kr=Ia(Hr),qr=Ia(Hr);function Xr(e){if(e===Hr)throw Error(r(174));return e}function Yr(e,t){switch(Ca(qr,t),Ca(Kr,e),Ca(jr,Hr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Sa(jr),Ca(jr,t)}function Qr(){Sa(jr),Sa(Kr),Sa(qr)}function Jr(e){Xr(qr.current);var t=Xr(jr.current),n=ce(t,e.type);t!==n&&(Ca(Kr,e),Ca(jr,n))}function Zr(e){Kr.current===e&&(Sa(jr),Sa(Kr))}var $r=Ia(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var so=v.ReactCurrentDispatcher,ao=v.ReactCurrentBatchConfig,ro=0,oo=null,io=null,co=null,lo=!1,uo=!1,mo=0,_o=0;function po(){throw Error(r(321))}function ho(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!is(e[n],t[n]))return!1;return!0}function fo(e,t,n,s,a,o){if(ro=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,so.current=null===e||null===e.memoizedState?$o:ei,e=n(s,a),uo){o=0;do{if(uo=!1,mo=0,25<=o)throw Error(r(301));o+=1,co=io=null,t.updateQueue=null,so.current=ti,e=n(s,a)}while(uo)}if(so.current=Zo,t=null!==io&&null!==io.next,ro=0,co=io=oo=null,lo=!1,t)throw Error(r(300));return e}function yo(){var e=0!==mo;return mo=0,e}function wo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===co?oo.memoizedState=co=e:co=co.next=e,co}function go(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===co?oo.memoizedState:co.next;if(null!==t)co=t,io=e;else{if(null===e)throw Error(r(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===co?oo.memoizedState=co=e:co=co.next=e}return co}function vo(e,t){return"function"===typeof t?t(e):t}function xo(e){var t=go(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var s=io,a=s.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}s.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,s=s.baseState;var c=i=null,l=null,u=o;do{var m=u.lane;if((ro&m)===m)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),s=u.hasEagerState?u.eagerState:e(s,u.action);else{var _={lane:m,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=_,i=s):l=l.next=_,oo.lanes|=m,Lc|=m}u=u.next}while(null!==u&&u!==o);null===l?i=s:l.next=c,is(s,t.memoizedState)||(gi=!0),t.memoizedState=s,t.baseState=i,t.baseQueue=l,n.lastRenderedState=s}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,oo.lanes|=o,Lc|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function bo(e){var t=go(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var s=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);is(o,t.memoizedState)||(gi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,s]}function ko(){}function Io(e,t){var n=oo,s=go(),a=t(),o=!is(s.memoizedState,a);if(o&&(s.memoizedState=a,gi=!0),s=s.queue,Lo(No.bind(null,n,s,e),[e]),s.getSnapshot!==t||o||null!==co&&1&co.memoizedState.tag){if(n.flags|=2048,Ao(9,Co.bind(null,n,s,a,t),void 0,null),null===Ec)throw Error(r(349));0!==(30&ro)||So(n,t,a)}return a}function So(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Co(e,t,n,s){t.value=n,t.getSnapshot=s,To(t)&&Eo(e)}function No(e,t,n){return n((function(){To(t)&&Eo(e)}))}function To(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!is(e,n)}catch(s){return!0}}function Eo(e){var t=Mr(e,1);null!==t&&nl(t,e,1,-1)}function Ro(e){var t=wo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vo,lastRenderedState:e},t.queue=e,e=e.dispatch=Xo.bind(null,oo,e),[t.memoizedState,e]}function Ao(e,t,n,s){return e={tag:e,create:t,destroy:n,deps:s,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(s=n.next,n.next=e,e.next=s,t.lastEffect=e),e}function Fo(){return go().memoizedState}function Do(e,t,n,s){var a=wo();oo.flags|=e,a.memoizedState=Ao(1|t,n,void 0,void 0===s?null:s)}function Mo(e,t,n,s){var a=go();s=void 0===s?null:s;var r=void 0;if(null!==io){var o=io.memoizedState;if(r=o.destroy,null!==s&&ho(s,o.deps))return void(a.memoizedState=Ao(t,n,r,s))}oo.flags|=e,a.memoizedState=Ao(1|t,n,r,s)}function Oo(e,t){return Do(8390656,8,e,t)}function Lo(e,t){return Mo(2048,8,e,t)}function Bo(e,t){return Mo(4,2,e,t)}function zo(e,t){return Mo(4,4,e,t)}function Po(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Mo(4,4,Po.bind(null,t,e),n)}function Uo(){}function Vo(e,t){var n=go();t=void 0===t?null:t;var s=n.memoizedState;return null!==s&&null!==t&&ho(t,s[1])?s[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=go();t=void 0===t?null:t;var s=n.memoizedState;return null!==s&&null!==t&&ho(t,s[1])?s[0]:(e=e(),n.memoizedState=[e,t],e)}function Ho(e,t,n){return 0===(21&ro)?(e.baseState&&(e.baseState=!1,gi=!0),e.memoizedState=n):(is(n,t)||(n=ht(),oo.lanes|=n,Lc|=n,e.baseState=!0),t)}function jo(e,t){var n=gt;gt=0!==n&&4>n?n:4,e(!0);var s=ao.transition;ao.transition={};try{e(!1),t()}finally{gt=n,ao.transition=s}}function Ko(){return go().memoizedState}function qo(e,t,n){var s=tl(e);if(n={lane:s,action:n,hasEagerState:!1,eagerState:null,next:null},Yo(e))Qo(t,n);else if(null!==(n=Dr(e,t,n,s))){nl(n,e,s,el()),Jo(n,t,s)}}function Xo(e,t,n){var s=tl(e),a={lane:s,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yo(e))Qo(t,a);else{var r=e.alternate;if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=r(o,n);if(a.hasEagerState=!0,a.eagerState=i,is(i,o)){var c=t.interleaved;return null===c?(a.next=a,Fr(t)):(a.next=c.next,c.next=a),void(t.interleaved=a)}}catch(l){}null!==(n=Dr(e,t,a,s))&&(nl(n,e,s,a=el()),Jo(n,t,s))}}function Yo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Qo(e,t){uo=lo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Jo(e,t,n){if(0!==(4194240&n)){var s=t.lanes;n|=s&=e.pendingLanes,t.lanes=n,wt(e,n)}}var Zo={readContext:Rr,useCallback:po,useContext:po,useEffect:po,useImperativeHandle:po,useInsertionEffect:po,useLayoutEffect:po,useMemo:po,useReducer:po,useRef:po,useState:po,useDebugValue:po,useDeferredValue:po,useTransition:po,useMutableSource:po,useSyncExternalStore:po,useId:po,unstable_isNewReconciler:!1},$o={readContext:Rr,useCallback:function(e,t){return wo().memoizedState=[e,void 0===t?null:t],e},useContext:Rr,useEffect:Oo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Do(4194308,4,Po.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Do(4194308,4,e,t)},useInsertionEffect:function(e,t){return Do(4,2,e,t)},useMemo:function(e,t){var n=wo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var s=wo();return t=void 0!==n?n(t):t,s.memoizedState=s.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},s.queue=e,e=e.dispatch=qo.bind(null,oo,e),[s.memoizedState,e]},useRef:function(e){return e={current:e},wo().memoizedState=e},useState:Ro,useDebugValue:Uo,useDeferredValue:function(e){return wo().memoizedState=e},useTransition:function(){var e=Ro(!1),t=e[0];return e=jo.bind(null,e[1]),wo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var s=oo,a=wo();if(ar){if(void 0===n)throw Error(r(407));n=n()}else{if(n=t(),null===Ec)throw Error(r(349));0!==(30&ro)||So(s,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Oo(No.bind(null,s,o,e),[e]),s.flags|=2048,Ao(9,Co.bind(null,s,o,n,t),void 0,null),n},useId:function(){var e=wo(),t=Ec.identifierPrefix;if(ar){var n=Ja;t=":"+t+"R"+(n=(Qa&~(1<<32-ot(Qa)-1)).toString(32)+n),0<(n=mo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=_o++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:Rr,useCallback:Vo,useContext:Rr,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:Bo,useLayoutEffect:zo,useMemo:Go,useReducer:xo,useRef:Fo,useState:function(){return xo(vo)},useDebugValue:Uo,useDeferredValue:function(e){return Ho(go(),io.memoizedState,e)},useTransition:function(){return[xo(vo)[0],go().memoizedState]},useMutableSource:ko,useSyncExternalStore:Io,useId:Ko,unstable_isNewReconciler:!1},ti={readContext:Rr,useCallback:Vo,useContext:Rr,useEffect:Lo,useImperativeHandle:Wo,useInsertionEffect:Bo,useLayoutEffect:zo,useMemo:Go,useReducer:bo,useRef:Fo,useState:function(){return bo(vo)},useDebugValue:Uo,useDeferredValue:function(e){var t=go();return null===io?t.memoizedState=e:Ho(t,io.memoizedState,e)},useTransition:function(){return[bo(vo)[0],go().memoizedState]},useMutableSource:ko,useSyncExternalStore:Io,useId:Ko,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=B({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function si(e,t,n,s){n=null===(n=n(s,t=e.memoizedState))||void 0===n?t:B({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ai={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var s=el(),a=tl(e),r=zr(s,a);r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=Pr(e,r,a))&&(nl(t,e,a,s),Wr(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var s=el(),a=tl(e),r=zr(s,a);r.tag=1,r.payload=t,void 0!==n&&null!==n&&(r.callback=n),null!==(t=Pr(e,r,a))&&(nl(t,e,a,s),Wr(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),s=tl(e),a=zr(n,s);a.tag=2,void 0!==t&&null!==t&&(a.callback=t),null!==(t=Pr(e,a,s))&&(nl(t,e,s,n),Wr(t,e,s))}};function ri(e,t,n,s,a,r,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(s,r,o):!t.prototype||!t.prototype.isPureReactComponent||(!cs(n,s)||!cs(a,r))}function oi(e,t,n){var s=!1,a=Na,r=t.contextType;return"object"===typeof r&&null!==r?r=Rr(r):(a=Fa(t)?Ra:Ta.current,r=(s=null!==(s=t.contextTypes)&&void 0!==s)?Aa(e,a):Na),t=new t(n,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ai,e.stateNode=t,t._reactInternals=e,s&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=r),t}function ii(e,t,n,s){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,s),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,s),t.state!==e&&ai.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,s){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs={},Lr(e);var r=t.contextType;"object"===typeof r&&null!==r?a.context=Rr(r):(r=Fa(t)?Ra:Ta.current,a.context=Aa(e,r)),a.state=e.memoizedState,"function"===typeof(r=t.getDerivedStateFromProps)&&(si(e,t,r,n),a.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(t=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ai.enqueueReplaceState(a,a.state,null),Vr(e,n,a,s),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}function li(e,t){try{var n="",s=t;do{n+=U(s),s=s.return}while(s);var a=n}catch(r){a="\nError generating stack: "+r.message+"\n"+r.stack}return{value:e,source:t,stack:a,digest:null}}function ui(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function mi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var _i="function"===typeof WeakMap?WeakMap:Map;function di(e,t,n){(n=zr(-1,n)).tag=3,n.payload={element:null};var s=t.value;return n.callback=function(){Hc||(Hc=!0,jc=s),mi(0,t)},n}function pi(e,t,n){(n=zr(-1,n)).tag=3;var s=e.type.getDerivedStateFromError;if("function"===typeof s){var a=t.value;n.payload=function(){return s(a)},n.callback=function(){mi(0,t)}}var r=e.stateNode;return null!==r&&"function"===typeof r.componentDidCatch&&(n.callback=function(){mi(0,t),"function"!==typeof s&&(null===Kc?Kc=new Set([this]):Kc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function hi(e,t,n){var s=e.pingCache;if(null===s){s=e.pingCache=new _i;var a=new Set;s.set(t,a)}else void 0===(a=s.get(t))&&(a=new Set,s.set(t,a));a.has(n)||(a.add(n),e=Sl.bind(null,e,t,n),t.then(e,e))}function fi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,s,a){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=zr(-1,1)).tag=2,Pr(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var wi=v.ReactCurrentOwner,gi=!1;function vi(e,t,n,s){t.child=null===e?xr(t,null,n,s):vr(t,e.child,n,s)}function xi(e,t,n,s,a){n=n.render;var r=t.ref;return Er(t,a),s=fo(e,t,n,s,r,a),n=yo(),null===e||gi?(ar&&n&&er(t),t.flags|=1,vi(e,t,s,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Hi(e,t,a))}function bi(e,t,n,s,a){if(null===e){var r=n.type;return"function"!==typeof r||Fl(r)||void 0!==r.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ml(n.type,null,s,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=r,ki(e,t,r,s,a))}if(r=e.child,0===(e.lanes&a)){var o=r.memoizedProps;if((n=null!==(n=n.compare)?n:cs)(o,s)&&e.ref===t.ref)return Hi(e,t,a)}return t.flags|=1,(e=Dl(r,s)).ref=t.ref,e.return=t,t.child=e}function ki(e,t,n,s,a){if(null!==e){var r=e.memoizedProps;if(cs(r,s)&&e.ref===t.ref){if(gi=!1,t.pendingProps=s=r,0===(e.lanes&a))return t.lanes=e.lanes,Hi(e,t,a);0!==(131072&e.flags)&&(gi=!0)}}return Ci(e,t,n,s,a)}function Ii(e,t,n){var s=t.pendingProps,a=s.children,r=null!==e?e.memoizedState:null;if("hidden"===s.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ca(Dc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==r?r.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ca(Dc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},s=null!==r?r.baseLanes:n,Ca(Dc,Fc),Fc|=s}else null!==r?(s=r.baseLanes|n,t.memoizedState=null):s=n,Ca(Dc,Fc),Fc|=s;return vi(e,t,a,n),t.child}function Si(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ci(e,t,n,s,a){var r=Fa(n)?Ra:Ta.current;return r=Aa(t,r),Er(t,a),n=fo(e,t,n,s,r,a),s=yo(),null===e||gi?(ar&&s&&er(t),t.flags|=1,vi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Hi(e,t,a))}function Ni(e,t,n,s,a){if(Fa(n)){var r=!0;La(t)}else r=!1;if(Er(t,a),null===t.stateNode)Gi(e,t),oi(t,n,s),ci(t,n,s,a),s=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=Rr(l):l=Aa(t,l=Fa(n)?Ra:Ta.current);var u=n.getDerivedStateFromProps,m="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;m||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==s||c!==l)&&ii(t,o,s,l),Or=!1;var _=t.memoizedState;o.state=_,Vr(t,s,o,a),c=t.memoizedState,i!==s||_!==c||Ea.current||Or?("function"===typeof u&&(si(t,n,u,s),c=t.memoizedState),(i=Or||ri(t,n,i,s,_,c,l))?(m||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=s,t.memoizedState=c),o.props=s,o.state=c,o.context=l,s=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),s=!1)}else{o=t.stateNode,Br(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:ni(t.type,i),o.props=l,m=t.pendingProps,_=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=Rr(c):c=Aa(t,c=Fa(n)?Ra:Ta.current);var d=n.getDerivedStateFromProps;(u="function"===typeof d||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==m||_!==c)&&ii(t,o,s,c),Or=!1,_=t.memoizedState,o.state=_,Vr(t,s,o,a);var p=t.memoizedState;i!==m||_!==p||Ea.current||Or?("function"===typeof d&&(si(t,n,d,s),p=t.memoizedState),(l=Or||ri(t,n,l,s,_,p,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(s,p,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(s,p,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&_===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&_===e.memoizedState||(t.flags|=1024),t.memoizedProps=s,t.memoizedState=p),o.props=s,o.state=p,o.context=c,s=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&_===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&_===e.memoizedState||(t.flags|=1024),s=!1)}return Ti(e,t,n,s,r,a)}function Ti(e,t,n,s,a,r){Si(e,t);var o=0!==(128&t.flags);if(!s&&!o)return a&&Ba(t,n,!1),Hi(e,t,r);s=t.stateNode,wi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:s.render();return t.flags|=1,null!==e&&o?(t.child=vr(t,e.child,null,r),t.child=vr(t,null,i,r)):vi(e,t,i,r),t.memoizedState=s.state,a&&Ba(t,n,!0),t.child}function Ei(e){var t=e.stateNode;t.pendingContext?Ma(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ma(0,t.context,!1),Yr(e,t.containerInfo)}function Ri(e,t,n,s,a){return dr(),pr(a),t.flags|=256,vi(e,t,n,s),t.child}var Ai,Fi,Di,Mi,Oi={dehydrated:null,treeContext:null,retryLane:0};function Li(e){return{baseLanes:e,cachePool:null,transitions:null}}function Bi(e,t,n){var s,a=t.pendingProps,o=$r.current,i=!1,c=0!==(128&t.flags);if((s=c)||(s=(null===e||null!==e.memoizedState)&&0!==(2&o)),s?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Ca($r,1&o),null===e)return lr(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=a.children,e=a.fallback,i?(a=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=Ll(c,a,0,null),e=Ol(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Li(n),t.memoizedState=Oi,e):zi(t,c));if(null!==(o=e.memoizedState)&&null!==(s=o.dehydrated))return function(e,t,n,s,a,o,i){if(n)return 256&t.flags?(t.flags&=-257,Pi(e,t,i,s=ui(Error(r(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=s.fallback,a=t.mode,s=Ll({mode:"visible",children:s.children},a,0,null),(o=Ol(o,a,i,null)).flags|=2,s.return=t,o.return=t,s.sibling=o,t.child=s,0!==(1&t.mode)&&vr(t,e.child,null,i),t.child.memoizedState=Li(i),t.memoizedState=Oi,o);if(0===(1&t.mode))return Pi(e,t,i,null);if("$!"===a.data){if(s=a.nextSibling&&a.nextSibling.dataset)var c=s.dgst;return s=c,Pi(e,t,i,s=ui(o=Error(r(419)),s,void 0))}if(c=0!==(i&e.childLanes),gi||c){if(null!==(s=Ec)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(s.suspendedLanes|i))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Mr(e,a),nl(s,e,a,-1))}return hl(),Pi(e,t,i,s=ui(Error(r(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Nl.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,sr=la(a.nextSibling),nr=t,ar=!0,rr=null,null!==e&&(qa[Xa++]=Qa,qa[Xa++]=Ja,qa[Xa++]=Ya,Qa=e.id,Ja=e.overflow,Ya=t),t=zi(t,s.children),t.flags|=4096,t)}(e,t,c,a,s,o,n);if(i){i=a.fallback,c=t.mode,s=(o=e.child).sibling;var l={mode:"hidden",children:a.children};return 0===(1&c)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=l,t.deletions=null):(a=Dl(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==s?i=Dl(s,i):(i=Ol(i,c,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,c=null===(c=e.child.memoizedState)?Li(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Oi,a}return e=(i=e.child).sibling,a=Dl(i,{mode:"visible",children:a.children}),0===(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function zi(e,t){return(t=Ll({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Pi(e,t,n,s){return null!==s&&pr(s),vr(t,e.child,null,n),(e=zi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var s=e.alternate;null!==s&&(s.lanes|=t),Tr(e.return,t,n)}function Ui(e,t,n,s,a){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:s,tail:n,tailMode:a}:(r.isBackwards=t,r.rendering=null,r.renderingStartTime=0,r.last=s,r.tail=n,r.tailMode=a)}function Vi(e,t,n){var s=t.pendingProps,a=s.revealOrder,r=s.tail;if(vi(e,t,s.children,n),0!==(2&(s=$r.current)))s=1&s|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}s&=1}if(Ca($r,s),0===(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ui(t,!1,a,n,r);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===eo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ui(t,!0,n,null,r);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Lc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(r(153));if(null!==t.child){for(n=Dl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!ar)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var s=null;null!==n;)null!==n.alternate&&(s=n),n=n.sibling;null===s?t||null===e.tail?e.tail=null:e.tail.sibling=null:s.sibling=null}}function Ki(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,s=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,s|=14680064&a.subtreeFlags,s|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,s|=a.subtreeFlags,s|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=s,e.childLanes=n,t}function qi(e,t,n){var s=t.pendingProps;switch(tr(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ki(t),null;case 1:case 17:return Fa(t.type)&&Da(),Ki(t),null;case 3:return s=t.stateNode,Qr(),Sa(Ea),Sa(Ta),no(),s.pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==e&&null!==e.child||(mr(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==rr&&(ol(rr),rr=null))),Fi(e,t),Ki(t),null;case 5:Zr(t);var a=Xr(qr.current);if(n=t.type,null!==e&&null!=t.stateNode)Di(e,t,n,s,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!s){if(null===t.stateNode)throw Error(r(166));return Ki(t),null}if(e=Xr(jr.current),mr(t)){s=t.stateNode,n=t.type;var o=t.memoizedProps;switch(s[_a]=t,s[da]=o,e=0!==(1&t.mode),n){case"dialog":Ps("cancel",s),Ps("close",s);break;case"iframe":case"object":case"embed":Ps("load",s);break;case"video":case"audio":for(a=0;a<Os.length;a++)Ps(Os[a],s);break;case"source":Ps("error",s);break;case"img":case"image":case"link":Ps("error",s),Ps("load",s);break;case"details":Ps("toggle",s);break;case"input":Q(s,o),Ps("invalid",s);break;case"select":s._wrapperState={wasMultiple:!!o.multiple},Ps("invalid",s);break;case"textarea":ae(s,o),Ps("invalid",s)}for(var c in we(n,o),a=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?s.textContent!==l&&(!0!==o.suppressHydrationWarning&&Zs(s.textContent,l,e),a=["children",l]):"number"===typeof l&&s.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Zs(s.textContent,l,e),a=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ps("scroll",s)}switch(n){case"input":K(s),$(s,o,!0);break;case"textarea":K(s),oe(s);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(s.onclick=$s)}s=a,t.updateQueue=s,null!==s&&(t.flags|=4)}else{c=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof s.is?e=c.createElement(n,{is:s.is}):(e=c.createElement(n),"select"===n&&(c=e,s.multiple?c.multiple=!0:s.size&&(c.size=s.size))):e=c.createElementNS(e,n),e[_a]=t,e[da]=s,Ai(e,t,!1,!1),t.stateNode=e;e:{switch(c=ge(n,s),n){case"dialog":Ps("cancel",e),Ps("close",e),a=s;break;case"iframe":case"object":case"embed":Ps("load",e),a=s;break;case"video":case"audio":for(a=0;a<Os.length;a++)Ps(Os[a],e);a=s;break;case"source":Ps("error",e),a=s;break;case"img":case"image":case"link":Ps("error",e),Ps("load",e),a=s;break;case"details":Ps("toggle",e),a=s;break;case"input":Q(e,s),a=Y(e,s),Ps("invalid",e);break;case"option":default:a=s;break;case"select":e._wrapperState={wasMultiple:!!s.multiple},a=B({},s,{value:void 0}),Ps("invalid",e);break;case"textarea":ae(e,s),a=se(e,s),Ps("invalid",e)}for(o in we(n,a),l=a)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?fe(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&me(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&_e(e,u):"number"===typeof u&&_e(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Ps("scroll",e):null!=u&&g(e,o,u,c))}switch(n){case"input":K(e),$(e,s,!1);break;case"textarea":K(e),oe(e);break;case"option":null!=s.value&&e.setAttribute("value",""+H(s.value));break;case"select":e.multiple=!!s.multiple,null!=(o=s.value)?ne(e,!!s.multiple,o,!1):null!=s.defaultValue&&ne(e,!!s.multiple,s.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=$s)}switch(n){case"button":case"input":case"select":case"textarea":s=!!s.autoFocus;break e;case"img":s=!0;break e;default:s=!1}}s&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ki(t),null;case 6:if(e&&null!=t.stateNode)Mi(e,t,e.memoizedProps,s);else{if("string"!==typeof s&&null===t.stateNode)throw Error(r(166));if(n=Xr(qr.current),Xr(jr.current),mr(t)){if(s=t.stateNode,n=t.memoizedProps,s[_a]=t,(o=s.nodeValue!==n)&&null!==(e=nr))switch(e.tag){case 3:Zs(s.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zs(s.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(s=(9===n.nodeType?n:n.ownerDocument).createTextNode(s))[_a]=t,t.stateNode=s}return Ki(t),null;case 13:if(Sa($r),s=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ar&&null!==sr&&0!==(1&t.mode)&&0===(128&t.flags))_r(),dr(),t.flags|=98560,o=!1;else if(o=mr(t),null!==s&&null!==s.dehydrated){if(null===e){if(!o)throw Error(r(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(r(317));o[_a]=t}else dr(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ki(t),o=!1}else null!==rr&&(ol(rr),rr=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((s=null!==s)!==(null!==e&&null!==e.memoizedState)&&s&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$r.current)?0===Mc&&(Mc=3):hl())),null!==t.updateQueue&&(t.flags|=4),Ki(t),null);case 4:return Qr(),Fi(e,t),null===e&&Vs(t.stateNode.containerInfo),Ki(t),null;case 10:return Nr(t.type._context),Ki(t),null;case 19:if(Sa($r),null===(o=t.memoizedState))return Ki(t),null;if(s=0!==(128&t.flags),null===(c=o.rendering))if(s)ji(o,!1);else{if(0!==Mc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=eo(e))){for(t.flags|=128,ji(o,!1),null!==(s=c.updateQueue)&&(t.updateQueue=s,t.flags|=4),t.subtreeFlags=0,s=n,n=t.child;null!==n;)e=s,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ca($r,1&$r.current|2),t.child}e=e.sibling}null!==o.tail&&Je()>Vc&&(t.flags|=128,s=!0,ji(o,!1),t.lanes=4194304)}else{if(!s)if(null!==(e=eo(c))){if(t.flags|=128,s=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!ar)return Ki(t),null}else 2*Je()-o.renderingStartTime>Vc&&1073741824!==n&&(t.flags|=128,s=!0,ji(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Je(),t.sibling=null,n=$r.current,Ca($r,s?1&n|2:1&n),t):(Ki(t),null);case 22:case 23:return ml(),s=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==s&&(t.flags|=8192),s&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(Ki(t),6&t.subtreeFlags&&(t.flags|=8192)):Ki(t),null;case 24:case 25:return null}throw Error(r(156,t.tag))}function Xi(e,t){switch(tr(t),t.tag){case 1:return Fa(t.type)&&Da(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qr(),Sa(Ea),Sa(Ta),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Zr(t),null;case 13:if(Sa($r),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(r(340));dr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Sa($r),null;case 4:return Qr(),null;case 10:return Nr(t.type._context),null;case 22:case 23:return ml(),null;default:return null}}Ai=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Di=function(e,t,n,s){var a=e.memoizedProps;if(a!==s){e=t.stateNode,Xr(jr.current);var r,o=null;switch(n){case"input":a=Y(e,a),s=Y(e,s),o=[];break;case"select":a=B({},a,{value:void 0}),s=B({},s,{value:void 0}),o=[];break;case"textarea":a=se(e,a),s=se(e,s),o=[];break;default:"function"!==typeof a.onClick&&"function"===typeof s.onClick&&(e.onclick=$s)}for(u in we(n,s),n=null,a)if(!s.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var c=a[u];for(r in c)c.hasOwnProperty(r)&&(n||(n={}),n[r]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in s){var l=s[u];if(c=null!=a?a[u]:void 0,s.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(r in c)!c.hasOwnProperty(r)||l&&l.hasOwnProperty(r)||(n||(n={}),n[r]="");for(r in l)l.hasOwnProperty(r)&&c[r]!==l[r]&&(n||(n={}),n[r]=l[r])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ps("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Mi=function(e,t,n,s){n!==s&&(t.flags|=4)};var Yi=!1,Qi=!1,Ji="function"===typeof WeakSet?WeakSet:Set,Zi=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(s){Il(e,t,s)}else n.current=null}function ec(e,t,n){try{n()}catch(s){Il(e,t,s)}}var tc=!1;function nc(e,t,n){var s=t.updateQueue;if(null!==(s=null!==s?s.lastEffect:null)){var a=s=s.next;do{if((a.tag&e)===e){var r=a.destroy;a.destroy=void 0,void 0!==r&&ec(t,n,r)}a=a.next}while(a!==s)}}function sc(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var s=n.create;n.destroy=s()}n=n.next}while(n!==t)}}function ac(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function rc(e){var t=e.alternate;null!==t&&(e.alternate=null,rc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[_a],delete t[da],delete t[ha],delete t[fa],delete t[ya])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var s=e.tag;if(5===s||6===s)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$s));else if(4!==s&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var s=e.tag;if(5===s||6===s)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==s&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,mc=!1;function _c(e,t,n){for(n=n.child;null!==n;)dc(e,t,n),n=n.sibling}function dc(e,t,n){if(rt&&"function"===typeof rt.onCommitFiberUnmount)try{rt.onCommitFiberUnmount(at,n)}catch(i){}switch(n.tag){case 5:Qi||$i(n,t);case 6:var s=uc,a=mc;uc=null,_c(e,t,n),mc=a,null!==(uc=s)&&(mc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(mc?(e=uc,n=n.stateNode,8===e.nodeType?ca(e.parentNode,n):1===e.nodeType&&ca(e,n),Vt(e)):ca(uc,n.stateNode));break;case 4:s=uc,a=mc,uc=n.stateNode.containerInfo,mc=!0,_c(e,t,n),uc=s,mc=a;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(s=n.updateQueue)&&null!==(s=s.lastEffect))){a=s=s.next;do{var r=a,o=r.destroy;r=r.tag,void 0!==o&&(0!==(2&r)||0!==(4&r))&&ec(n,t,o),a=a.next}while(a!==s)}_c(e,t,n);break;case 1:if(!Qi&&($i(n,t),"function"===typeof(s=n.stateNode).componentWillUnmount))try{s.props=n.memoizedProps,s.state=n.memoizedState,s.componentWillUnmount()}catch(i){Il(n,t,i)}_c(e,t,n);break;case 21:_c(e,t,n);break;case 22:1&n.mode?(Qi=(s=Qi)||null!==n.memoizedState,_c(e,t,n),Qi=s):_c(e,t,n);break;default:_c(e,t,n)}}function pc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ji),t.forEach((function(t){var s=Tl.bind(null,e,t);n.has(t)||(n.add(t),t.then(s,s))}))}}function hc(e,t){var n=t.deletions;if(null!==n)for(var s=0;s<n.length;s++){var a=n[s];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,mc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,mc=!0;break e}c=c.return}if(null===uc)throw Error(r(160));dc(o,i,a),uc=null,mc=!1;var l=a.alternate;null!==l&&(l.return=null),a.return=null}catch(u){Il(a,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)fc(t,e),t=t.sibling}function fc(e,t){var n=e.alternate,s=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(hc(t,e),yc(e),4&s){try{nc(3,e,e.return),sc(3,e)}catch(f){Il(e,e.return,f)}try{nc(5,e,e.return)}catch(f){Il(e,e.return,f)}}break;case 1:hc(t,e),yc(e),512&s&&null!==n&&$i(n,n.return);break;case 5:if(hc(t,e),yc(e),512&s&&null!==n&&$i(n,n.return),32&e.flags){var a=e.stateNode;try{_e(a,"")}catch(f){Il(e,e.return,f)}}if(4&s&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&J(a,o),ge(c,i);var u=ge(c,o);for(i=0;i<l.length;i+=2){var m=l[i],_=l[i+1];"style"===m?fe(a,_):"dangerouslySetInnerHTML"===m?me(a,_):"children"===m?_e(a,_):g(a,m,_,u)}switch(c){case"input":Z(a,o);break;case"textarea":re(a,o);break;case"select":var d=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var p=o.value;null!=p?ne(a,!!o.multiple,p,!1):d!==!!o.multiple&&(null!=o.defaultValue?ne(a,!!o.multiple,o.defaultValue,!0):ne(a,!!o.multiple,o.multiple?[]:"",!1))}a[da]=o}catch(f){Il(e,e.return,f)}}break;case 6:if(hc(t,e),yc(e),4&s){if(null===e.stateNode)throw Error(r(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(f){Il(e,e.return,f)}}break;case 3:if(hc(t,e),yc(e),4&s&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(f){Il(e,e.return,f)}break;case 4:default:hc(t,e),yc(e);break;case 13:hc(t,e),yc(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Uc=Je())),4&s&&pc(e);break;case 22:if(m=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(u=Qi)||m,hc(t,e),Qi=u):hc(t,e),yc(e),8192&s){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!m&&0!==(1&e.mode))for(Zi=e,m=e.child;null!==m;){for(_=Zi=m;null!==Zi;){switch(p=(d=Zi).child,d.tag){case 0:case 11:case 14:case 15:nc(4,d,d.return);break;case 1:$i(d,d.return);var h=d.stateNode;if("function"===typeof h.componentWillUnmount){s=d,n=d.return;try{t=s,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(f){Il(s,n,f)}}break;case 5:$i(d,d.return);break;case 22:if(null!==d.memoizedState){xc(_);continue}}null!==p?(p.return=d,Zi=p):xc(_)}m=m.sibling}e:for(m=null,_=e;;){if(5===_.tag){if(null===m){m=_;try{a=_.stateNode,u?"function"===typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=_.stateNode,i=void 0!==(l=_.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=he("display",i))}catch(f){Il(e,e.return,f)}}}else if(6===_.tag){if(null===m)try{_.stateNode.nodeValue=u?"":_.memoizedProps}catch(f){Il(e,e.return,f)}}else if((22!==_.tag&&23!==_.tag||null===_.memoizedState||_===e)&&null!==_.child){_.child.return=_,_=_.child;continue}if(_===e)break e;for(;null===_.sibling;){if(null===_.return||_.return===e)break e;m===_&&(m=null),_=_.return}m===_&&(m=null),_.sibling.return=_.return,_=_.sibling}}break;case 19:hc(t,e),yc(e),4&s&&pc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(oc(n)){var s=n;break e}n=n.return}throw Error(r(160))}switch(s.tag){case 5:var a=s.stateNode;32&s.flags&&(_e(a,""),s.flags&=-33),lc(e,ic(e),a);break;case 3:case 4:var o=s.stateNode.containerInfo;cc(e,ic(e),o);break;default:throw Error(r(161))}}catch(i){Il(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function wc(e,t,n){Zi=e,gc(e,t,n)}function gc(e,t,n){for(var s=0!==(1&e.mode);null!==Zi;){var a=Zi,r=a.child;if(22===a.tag&&s){var o=null!==a.memoizedState||Yi;if(!o){var i=a.alternate,c=null!==i&&null!==i.memoizedState||Qi;i=Yi;var l=Qi;if(Yi=o,(Qi=c)&&!l)for(Zi=a;null!==Zi;)c=(o=Zi).child,22===o.tag&&null!==o.memoizedState?bc(a):null!==c?(c.return=o,Zi=c):bc(a);for(;null!==r;)Zi=r,gc(r,t,n),r=r.sibling;Zi=a,Yi=i,Qi=l}vc(e)}else 0!==(8772&a.subtreeFlags)&&null!==r?(r.return=a,Zi=r):vc(e)}}function vc(e){for(;null!==Zi;){var t=Zi;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||sc(5,t);break;case 1:var s=t.stateNode;if(4&t.flags&&!Qi)if(null===n)s.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);s.componentDidUpdate(a,n.memoizedState,s.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Gr(t,o,s);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gr(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var m=u.memoizedState;if(null!==m){var _=m.dehydrated;null!==_&&Vt(_)}}}break;default:throw Error(r(163))}Qi||512&t.flags&&ac(t)}catch(d){Il(t,t.return,d)}}if(t===e){Zi=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zi=n;break}Zi=t.return}}function xc(e){for(;null!==Zi;){var t=Zi;if(t===e){Zi=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zi=n;break}Zi=t.return}}function bc(e){for(;null!==Zi;){var t=Zi;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{sc(4,t)}catch(c){Il(t,n,c)}break;case 1:var s=t.stateNode;if("function"===typeof s.componentDidMount){var a=t.return;try{s.componentDidMount()}catch(c){Il(t,a,c)}}var r=t.return;try{ac(t)}catch(c){Il(t,r,c)}break;case 5:var o=t.return;try{ac(t)}catch(c){Il(t,o,c)}}}catch(c){Il(t,t.return,c)}if(t===e){Zi=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Zi=i;break}Zi=t.return}}var kc,Ic=Math.ceil,Sc=v.ReactCurrentDispatcher,Cc=v.ReactCurrentOwner,Nc=v.ReactCurrentBatchConfig,Tc=0,Ec=null,Rc=null,Ac=0,Fc=0,Dc=Ia(0),Mc=0,Oc=null,Lc=0,Bc=0,zc=0,Pc=null,Wc=null,Uc=0,Vc=1/0,Gc=null,Hc=!1,jc=null,Kc=null,qc=!1,Xc=null,Yc=0,Qc=0,Jc=null,Zc=-1,$c=0;function el(){return 0!==(6&Tc)?Je():-1!==Zc?Zc:Zc=Je()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Tc)&&0!==Ac?Ac&-Ac:null!==hr.transition?(0===$c&&($c=ht()),$c):0!==(e=gt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nl(e,t,n,s){if(50<Qc)throw Qc=0,Jc=null,Error(r(185));yt(e,n,s),0!==(2&Tc)&&e===Ec||(e===Ec&&(0===(2&Tc)&&(Bc|=n),4===Mc&&il(e,Ac)),sl(e,s),1===n&&0===Tc&&0===(1&t.mode)&&(Vc=Je()+500,Pa&&Va()))}function sl(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,s=e.pingedLanes,a=e.expirationTimes,r=e.pendingLanes;0<r;){var o=31-ot(r),i=1<<o,c=a[o];-1===c?0!==(i&n)&&0===(i&s)||(a[o]=dt(i,t)):c<=t&&(e.expiredLanes|=i),r&=~i}}(e,t);var s=_t(e,e===Ec?Ac:0);if(0===s)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=s&-s,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Pa=!0,Ua(e)}(cl.bind(null,e)):Ua(cl.bind(null,e)),oa((function(){0===(6&Tc)&&Va()})),n=null;else{switch(vt(s)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=st}n=El(n,al.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function al(e,t){if(Zc=-1,$c=0,0!==(6&Tc))throw Error(r(327));var n=e.callbackNode;if(bl()&&e.callbackNode!==n)return null;var s=_t(e,e===Ec?Ac:0);if(0===s)return null;if(0!==(30&s)||0!==(s&e.expiredLanes)||t)t=fl(e,s);else{t=s;var a=Tc;Tc|=2;var o=pl();for(Ec===e&&Ac===t||(Gc=null,Vc=Je()+500,_l(e,t));;)try{wl();break}catch(c){dl(e,c)}Cr(),Sc.current=o,Tc=a,null!==Rc?t=0:(Ec=null,Ac=0,t=Mc)}if(0!==t){if(2===t&&(0!==(a=pt(e))&&(s=a,t=rl(e,a))),1===t)throw n=Oc,_l(e,0),il(e,s),sl(e,Je()),n;if(6===t)il(e,s);else{if(a=e.current.alternate,0===(30&s)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var s=0;s<n.length;s++){var a=n[s],r=a.getSnapshot;a=a.value;try{if(!is(r(),a))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=fl(e,s))&&(0!==(o=pt(e))&&(s=o,t=rl(e,o))),1===t))throw n=Oc,_l(e,0),il(e,s),sl(e,Je()),n;switch(e.finishedWork=a,e.finishedLanes=s,t){case 0:case 1:throw Error(r(345));case 2:case 5:xl(e,Wc,Gc);break;case 3:if(il(e,s),(130023424&s)===s&&10<(t=Uc+500-Je())){if(0!==_t(e,0))break;if(((a=e.suspendedLanes)&s)!==s){el(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=sa(xl.bind(null,e,Wc,Gc),t);break}xl(e,Wc,Gc);break;case 4:if(il(e,s),(4194240&s)===s)break;for(t=e.eventTimes,a=-1;0<s;){var i=31-ot(s);o=1<<i,(i=t[i])>a&&(a=i),s&=~o}if(s=a,10<(s=(120>(s=Je()-s)?120:480>s?480:1080>s?1080:1920>s?1920:3e3>s?3e3:4320>s?4320:1960*Ic(s/1960))-s)){e.timeoutHandle=sa(xl.bind(null,e,Wc,Gc),s);break}xl(e,Wc,Gc);break;default:throw Error(r(329))}}}return sl(e,Je()),e.callbackNode===n?al.bind(null,e):null}function rl(e,t){var n=Pc;return e.current.memoizedState.isDehydrated&&(_l(e,t).flags|=256),2!==(e=fl(e,t))&&(t=Wc,Wc=n,null!==t&&ol(t)),e}function ol(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function il(e,t){for(t&=~zc,t&=~Bc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),s=1<<n;e[n]=-1,t&=~s}}function cl(e){if(0!==(6&Tc))throw Error(r(327));bl();var t=_t(e,0);if(0===(1&t))return sl(e,Je()),null;var n=fl(e,t);if(0!==e.tag&&2===n){var s=pt(e);0!==s&&(t=s,n=rl(e,s))}if(1===n)throw n=Oc,_l(e,0),il(e,t),sl(e,Je()),n;if(6===n)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,xl(e,Wc,Gc),sl(e,Je()),null}function ll(e,t){var n=Tc;Tc|=1;try{return e(t)}finally{0===(Tc=n)&&(Vc=Je()+500,Pa&&Va())}}function ul(e){null!==Xc&&0===Xc.tag&&0===(6&Tc)&&bl();var t=Tc;Tc|=1;var n=Nc.transition,s=gt;try{if(Nc.transition=null,gt=1,e)return e()}finally{gt=s,Nc.transition=n,0===(6&(Tc=t))&&Va()}}function ml(){Fc=Dc.current,Sa(Dc)}function _l(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Rc)for(n=Rc.return;null!==n;){var s=n;switch(tr(s),s.tag){case 1:null!==(s=s.type.childContextTypes)&&void 0!==s&&Da();break;case 3:Qr(),Sa(Ea),Sa(Ta),no();break;case 5:Zr(s);break;case 4:Qr();break;case 13:case 19:Sa($r);break;case 10:Nr(s.type._context);break;case 22:case 23:ml()}n=n.return}if(Ec=e,Rc=e=Dl(e.current,null),Ac=Fc=t,Mc=0,Oc=null,zc=Bc=Lc=0,Wc=Pc=null,null!==Ar){for(t=0;t<Ar.length;t++)if(null!==(s=(n=Ar[t]).interleaved)){n.interleaved=null;var a=s.next,r=n.pending;if(null!==r){var o=r.next;r.next=a,s.next=o}n.pending=s}Ar=null}return e}function dl(e,t){for(;;){var n=Rc;try{if(Cr(),so.current=Zo,lo){for(var s=oo.memoizedState;null!==s;){var a=s.queue;null!==a&&(a.pending=null),s=s.next}lo=!1}if(ro=0,co=io=oo=null,uo=!1,mo=0,Cc.current=null,null===n||null===n.return){Mc=1,Oc=t,Rc=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=Ac,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,m=c,_=m.tag;if(0===(1&m.mode)&&(0===_||11===_||15===_)){var d=m.alternate;d?(m.updateQueue=d.updateQueue,m.memoizedState=d.memoizedState,m.lanes=d.lanes):(m.updateQueue=null,m.memoizedState=null)}var p=fi(i);if(null!==p){p.flags&=-257,yi(p,i,c,0,t),1&p.mode&&hi(o,u,t),l=u;var h=(t=p).updateQueue;if(null===h){var f=new Set;f.add(l),t.updateQueue=f}else h.add(l);break e}if(0===(1&t)){hi(o,u,t),hl();break e}l=Error(r(426))}else if(ar&&1&c.mode){var y=fi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),pr(li(l,c));break e}}o=l=li(l,c),4!==Mc&&(Mc=2),null===Pc?Pc=[o]:Pc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Ur(o,di(0,l,t));break e;case 1:c=l;var w=o.type,g=o.stateNode;if(0===(128&o.flags)&&("function"===typeof w.getDerivedStateFromError||null!==g&&"function"===typeof g.componentDidCatch&&(null===Kc||!Kc.has(g)))){o.flags|=65536,t&=-t,o.lanes|=t,Ur(o,pi(o,c,t));break e}}o=o.return}while(null!==o)}vl(n)}catch(v){t=v,Rc===n&&null!==n&&(Rc=n=n.return);continue}break}}function pl(){var e=Sc.current;return Sc.current=Zo,null===e?Zo:e}function hl(){0!==Mc&&3!==Mc&&2!==Mc||(Mc=4),null===Ec||0===(268435455&Lc)&&0===(268435455&Bc)||il(Ec,Ac)}function fl(e,t){var n=Tc;Tc|=2;var s=pl();for(Ec===e&&Ac===t||(Gc=null,_l(e,t));;)try{yl();break}catch(a){dl(e,a)}if(Cr(),Tc=n,Sc.current=s,null!==Rc)throw Error(r(261));return Ec=null,Ac=0,Mc}function yl(){for(;null!==Rc;)gl(Rc)}function wl(){for(;null!==Rc&&!Ye();)gl(Rc)}function gl(e){var t=kc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?vl(e):Rc=t,Cc.current=null}function vl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qi(n,t,Fc)))return void(Rc=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Rc=n);if(null===e)return Mc=6,void(Rc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rc=t);Rc=t=e}while(null!==t);0===Mc&&(Mc=5)}function xl(e,t,n){var s=gt,a=Nc.transition;try{Nc.transition=null,gt=1,function(e,t,n,s){do{bl()}while(null!==Xc);if(0!==(6&Tc))throw Error(r(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var s=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),r=1<<a;t[a]=0,s[a]=-1,e[a]=-1,n&=~r}}(e,o),e===Ec&&(Rc=Ec=null,Ac=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||qc||(qc=!0,El(tt,(function(){return bl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Nc.transition,Nc.transition=null;var i=gt;gt=1;var c=Tc;Tc|=4,Cc.current=null,function(e,t){if(ea=Ht,ds(e=_s())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var s=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(s&&0!==s.rangeCount){n=s.anchorNode;var a=s.anchorOffset,o=s.focusNode;s=s.focusOffset;try{n.nodeType,o.nodeType}catch(x){n=null;break e}var i=0,c=-1,l=-1,u=0,m=0,_=e,d=null;t:for(;;){for(var p;_!==n||0!==a&&3!==_.nodeType||(c=i+a),_!==o||0!==s&&3!==_.nodeType||(l=i+s),3===_.nodeType&&(i+=_.nodeValue.length),null!==(p=_.firstChild);)d=_,_=p;for(;;){if(_===e)break t;if(d===n&&++u===a&&(c=i),d===o&&++m===s&&(l=i),null!==(p=_.nextSibling))break;d=(_=d).parentNode}_=p}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Ht=!1,Zi=t;null!==Zi;)if(e=(t=Zi).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Zi=e;else for(;null!==Zi;){t=Zi;try{var h=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var f=h.memoizedProps,y=h.memoizedState,w=t.stateNode,g=w.getSnapshotBeforeUpdate(t.elementType===t.type?f:ni(t.type,f),y);w.__reactInternalSnapshotBeforeUpdate=g}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(r(163))}}catch(x){Il(t,t.return,x)}if(null!==(e=t.sibling)){e.return=t.return,Zi=e;break}Zi=t.return}h=tc,tc=!1}(e,n),fc(n,e),ps(ta),Ht=!!ea,ta=ea=null,e.current=n,wc(n,e,a),Qe(),Tc=c,gt=i,Nc.transition=o}else e.current=n;if(qc&&(qc=!1,Xc=e,Yc=a),o=e.pendingLanes,0===o&&(Kc=null),function(e){if(rt&&"function"===typeof rt.onCommitFiberRoot)try{rt.onCommitFiberRoot(at,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),sl(e,Je()),null!==t)for(s=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],s(a.value,{componentStack:a.stack,digest:a.digest});if(Hc)throw Hc=!1,e=jc,jc=null,e;0!==(1&Yc)&&0!==e.tag&&bl(),o=e.pendingLanes,0!==(1&o)?e===Jc?Qc++:(Qc=0,Jc=e):Qc=0,Va()}(e,t,n,s)}finally{Nc.transition=a,gt=s}return null}function bl(){if(null!==Xc){var e=vt(Yc),t=Nc.transition,n=gt;try{if(Nc.transition=null,gt=16>e?16:e,null===Xc)var s=!1;else{if(e=Xc,Xc=null,Yc=0,0!==(6&Tc))throw Error(r(331));var a=Tc;for(Tc|=4,Zi=e.current;null!==Zi;){var o=Zi,i=o.child;if(0!==(16&Zi.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Zi=u;null!==Zi;){var m=Zi;switch(m.tag){case 0:case 11:case 15:nc(8,m,o)}var _=m.child;if(null!==_)_.return=m,Zi=_;else for(;null!==Zi;){var d=(m=Zi).sibling,p=m.return;if(rc(m),m===u){Zi=null;break}if(null!==d){d.return=p,Zi=d;break}Zi=p}}}var h=o.alternate;if(null!==h){var f=h.child;if(null!==f){h.child=null;do{var y=f.sibling;f.sibling=null,f=y}while(null!==f)}}Zi=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Zi=i;else e:for(;null!==Zi;){if(0!==(2048&(o=Zi).flags))switch(o.tag){case 0:case 11:case 15:nc(9,o,o.return)}var w=o.sibling;if(null!==w){w.return=o.return,Zi=w;break e}Zi=o.return}}var g=e.current;for(Zi=g;null!==Zi;){var v=(i=Zi).child;if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,Zi=v;else e:for(i=g;null!==Zi;){if(0!==(2048&(c=Zi).flags))try{switch(c.tag){case 0:case 11:case 15:sc(9,c)}}catch(b){Il(c,c.return,b)}if(c===i){Zi=null;break e}var x=c.sibling;if(null!==x){x.return=c.return,Zi=x;break e}Zi=c.return}}if(Tc=a,Va(),rt&&"function"===typeof rt.onPostCommitFiberRoot)try{rt.onPostCommitFiberRoot(at,e)}catch(b){}s=!0}return s}finally{gt=n,Nc.transition=t}}return!1}function kl(e,t,n){e=Pr(e,t=di(0,t=li(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),sl(e,t))}function Il(e,t,n){if(3===e.tag)kl(e,e,n);else for(;null!==t;){if(3===t.tag){kl(t,e,n);break}if(1===t.tag){var s=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof s.componentDidCatch&&(null===Kc||!Kc.has(s))){t=Pr(t,e=pi(t,e=li(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),sl(t,e));break}}t=t.return}}function Sl(e,t,n){var s=e.pingCache;null!==s&&s.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,Ec===e&&(Ac&n)===n&&(4===Mc||3===Mc&&(130023424&Ac)===Ac&&500>Je()-Uc?_l(e,0):zc|=n),sl(e,t)}function Cl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=Mr(e,t))&&(yt(e,t,n),sl(e,n))}function Nl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Cl(e,n)}function Tl(e,t){var n=0;switch(e.tag){case 13:var s=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:s=e.stateNode;break;default:throw Error(r(314))}null!==s&&s.delete(t),Cl(e,n)}function El(e,t){return qe(e,t)}function Rl(e,t,n,s){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Al(e,t,n,s){return new Rl(e,t,n,s)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dl(e,t){var n=e.alternate;return null===n?((n=Al(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ml(e,t,n,s,a,o){var i=2;if(s=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case k:return Ol(n.children,a,o,t);case I:i=8,a|=8;break;case S:return(e=Al(12,n,t,2|a)).elementType=S,e.lanes=o,e;case E:return(e=Al(13,n,t,a)).elementType=E,e.lanes=o,e;case R:return(e=Al(19,n,t,a)).elementType=R,e.lanes=o,e;case D:return Ll(n,a,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case C:i=10;break e;case N:i=9;break e;case T:i=11;break e;case A:i=14;break e;case F:i=16,s=null;break e}throw Error(r(130,null==e?e:typeof e,""))}return(t=Al(i,n,t,a)).elementType=e,t.type=s,t.lanes=o,t}function Ol(e,t,n,s){return(e=Al(7,e,s,t)).lanes=n,e}function Ll(e,t,n,s){return(e=Al(22,e,s,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Bl(e,t,n){return(e=Al(6,e,null,t)).lanes=n,e}function zl(e,t,n){return(t=Al(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pl(e,t,n,s,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ft(0),this.expirationTimes=ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ft(0),this.identifierPrefix=s,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,s,a,r,o,i,c){return e=new Pl(e,t,n,i,c),1===t?(t=1,!0===r&&(t|=8)):t=0,r=Al(3,null,null,t),e.current=r,r.stateNode=e,r.memoizedState={element:s,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lr(r),e}function Ul(e){if(!e)return Na;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(r(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fa(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(r(171))}if(1===e.tag){var n=e.type;if(Fa(n))return Oa(e,n,t)}return t}function Vl(e,t,n,s,a,r,o,i,c){return(e=Wl(n,s,!0,e,0,r,0,i,c)).context=Ul(null),n=e.current,(r=zr(s=el(),a=tl(n))).callback=void 0!==t&&null!==t?t:null,Pr(n,r,a),e.current.lanes=a,yt(e,a,s),sl(e,s),e}function Gl(e,t,n,s){var a=t.current,r=el(),o=tl(a);return n=Ul(n),null===t.context?t.context=n:t.pendingContext=n,(t=zr(r,o)).payload={element:e},null!==(s=void 0===s?null:s)&&(t.callback=s),null!==(e=Pr(a,t,o))&&(nl(e,a,o,r),Wr(e,a,o)),o}function Hl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Kl(e,t){jl(e,t),(e=e.alternate)&&jl(e,t)}kc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ea.current)gi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return gi=!1,function(e,t,n){switch(t.tag){case 3:Ei(t),dr();break;case 5:Jr(t);break;case 1:Fa(t.type)&&La(t);break;case 4:Yr(t,t.stateNode.containerInfo);break;case 10:var s=t.type._context,a=t.memoizedProps.value;Ca(br,s._currentValue),s._currentValue=a;break;case 13:if(null!==(s=t.memoizedState))return null!==s.dehydrated?(Ca($r,1&$r.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Bi(e,t,n):(Ca($r,1&$r.current),null!==(e=Hi(e,t,n))?e.sibling:null);Ca($r,1&$r.current);break;case 19:if(s=0!==(n&t.childLanes),0!==(128&e.flags)){if(s)return Vi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ca($r,$r.current),s)break;return null;case 22:case 23:return t.lanes=0,Ii(e,t,n)}return Hi(e,t,n)}(e,t,n);gi=0!==(131072&e.flags)}else gi=!1,ar&&0!==(1048576&t.flags)&&$a(t,Ka,t.index);switch(t.lanes=0,t.tag){case 2:var s=t.type;Gi(e,t),e=t.pendingProps;var a=Aa(t,Ta.current);Er(t,n),a=fo(null,t,s,e,a,n);var o=yo();return t.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fa(s)?(o=!0,La(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Lr(t),a.updater=ai,t.stateNode=a,a._reactInternals=t,ci(t,s,e,n),t=Ti(null,t,s,!0,o,n)):(t.tag=0,ar&&o&&er(t),vi(null,t,a,n),t=t.child),t;case 16:s=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,s=(a=s._init)(s._payload),t.type=s,a=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===T)return 11;if(e===A)return 14}return 2}(s),e=ni(s,e),a){case 0:t=Ci(null,t,s,e,n);break e;case 1:t=Ni(null,t,s,e,n);break e;case 11:t=xi(null,t,s,e,n);break e;case 14:t=bi(null,t,s,ni(s.type,e),n);break e}throw Error(r(306,s,""))}return t;case 0:return s=t.type,a=t.pendingProps,Ci(e,t,s,a=t.elementType===s?a:ni(s,a),n);case 1:return s=t.type,a=t.pendingProps,Ni(e,t,s,a=t.elementType===s?a:ni(s,a),n);case 3:e:{if(Ei(t),null===e)throw Error(r(387));s=t.pendingProps,a=(o=t.memoizedState).element,Br(e,t),Vr(t,s,null,n);var i=t.memoizedState;if(s=i.element,o.isDehydrated){if(o={element:s,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ri(e,t,s,n,a=li(Error(r(423)),t));break e}if(s!==a){t=Ri(e,t,s,n,a=li(Error(r(424)),t));break e}for(sr=la(t.stateNode.containerInfo.firstChild),nr=t,ar=!0,rr=null,n=xr(t,null,s,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(dr(),s===a){t=Hi(e,t,n);break e}vi(e,t,s,n)}t=t.child}return t;case 5:return Jr(t),null===e&&lr(t),s=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,na(s,a)?i=null:null!==o&&na(s,o)&&(t.flags|=32),Si(e,t),vi(e,t,i,n),t.child;case 6:return null===e&&lr(t),null;case 13:return Bi(e,t,n);case 4:return Yr(t,t.stateNode.containerInfo),s=t.pendingProps,null===e?t.child=vr(t,null,s,n):vi(e,t,s,n),t.child;case 11:return s=t.type,a=t.pendingProps,xi(e,t,s,a=t.elementType===s?a:ni(s,a),n);case 7:return vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(s=t.type._context,a=t.pendingProps,o=t.memoizedProps,i=a.value,Ca(br,s._currentValue),s._currentValue=i,null!==o)if(is(o.value,i)){if(o.children===a.children&&!Ea.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===s){if(1===o.tag){(l=zr(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var m=(u=u.shared).pending;null===m?l.next=l:(l.next=m.next,m.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Tr(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(r(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Tr(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}vi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,s=t.pendingProps.children,Er(t,n),s=s(a=Rr(a)),t.flags|=1,vi(e,t,s,n),t.child;case 14:return a=ni(s=t.type,t.pendingProps),bi(e,t,s,a=ni(s.type,a),n);case 15:return ki(e,t,t.type,t.pendingProps,n);case 17:return s=t.type,a=t.pendingProps,a=t.elementType===s?a:ni(s,a),Gi(e,t),t.tag=1,Fa(s)?(e=!0,La(t)):e=!1,Er(t,n),oi(t,s,a),ci(t,s,a,n),Ti(null,t,s,!0,e,n);case 19:return Vi(e,t,n);case 22:return Ii(e,t,n)}throw Error(r(156,t.tag))};var ql="function"===typeof reportError?reportError:function(e){console.error(e)};function Xl(e){this._internalRoot=e}function Yl(e){this._internalRoot=e}function Ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zl(){}function $l(e,t,n,s,a){var r=n._reactRootContainer;if(r){var o=r;if("function"===typeof a){var i=a;a=function(){var e=Hl(o);i.call(e)}}Gl(t,o,e,a)}else o=function(e,t,n,s,a){if(a){if("function"===typeof s){var r=s;s=function(){var e=Hl(o);r.call(e)}}var o=Vl(t,s,e,0,null,!1,0,"",Zl);return e._reactRootContainer=o,e[pa]=o.current,Vs(8===e.nodeType?e.parentNode:e),ul(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"===typeof s){var i=s;s=function(){var e=Hl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",Zl);return e._reactRootContainer=c,e[pa]=c.current,Vs(8===e.nodeType?e.parentNode:e),ul((function(){Gl(t,c,n,s)})),c}(n,t,e,a,s);return Hl(o)}Yl.prototype.render=Xl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(r(409));Gl(e,t,null,null)},Yl.prototype.unmount=Xl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Gl(null,e,null,null)})),t[pa]=null}},Yl.prototype.unstable_scheduleHydration=function(e){if(e){var t=It();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Bt(e)}},xt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=mt(t.pendingLanes);0!==n&&(wt(t,1|n),sl(t,Je()),0===(6&Tc)&&(Vc=Je()+500,Va()))}break;case 13:ul((function(){var t=Mr(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),Kl(e,1)}},bt=function(e){if(13===e.tag){var t=Mr(e,134217728);if(null!==t)nl(t,e,134217728,el());Kl(e,134217728)}},kt=function(e){if(13===e.tag){var t=tl(e),n=Mr(e,t);if(null!==n)nl(n,e,t,el());Kl(e,t)}},It=function(){return gt},St=function(e,t){var n=gt;try{return gt=e,t()}finally{gt=n}},be=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var s=n[t];if(s!==e&&s.form===e.form){var a=xa(s);if(!a)throw Error(r(90));q(s),Z(s,a)}}}break;case"textarea":re(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Te=ll,Ee=ul;var eu={usingClientEntryPoint:!1,Events:[ga,va,xa,Ce,Ne,ll]},tu={findFiberByHostInstance:wa,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var su=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!su.isDisabled&&su.supportsFiber)try{at=su.inject(nu),rt=su}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ql(t))throw Error(r(200));return function(e,t,n){var s=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:b,key:null==s?null:""+s,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ql(e))throw Error(r(299));var n=!1,s="",a=ql;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(s=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,s,a),e[pa]=t.current,Vs(8===e.nodeType?e.parentNode:e),new Xl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(r(188));throw e=Object.keys(e).join(","),Error(r(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Jl(t))throw Error(r(200));return $l(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ql(e))throw Error(r(405));var s=null!=n&&n.hydratedSources||null,a=!1,o="",i=ql;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Vl(t,null,e,1,null!=n?n:null,a,0,o,i),e[pa]=t.current,Vs(e),s)for(e=0;e<s.length;e++)a=(a=(n=s[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Yl(t)},t.render=function(e,t,n){if(!Jl(t))throw Error(r(200));return $l(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(r(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[pa]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,s){if(!Jl(n))throw Error(r(200));if(null==e||void 0===e._reactInternals)throw Error(r(38));return $l(e,t,n,!1,s)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var s=n(950);t.createRoot=s.createRoot,t.hydrateRoot=s.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var s=n(43),a=Symbol.for("react.element"),r=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var s,r={},l=null,u=null;for(s in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,s)&&!c.hasOwnProperty(s)&&(r[s]=t[s]);if(e&&e.defaultProps)for(s in t=e.defaultProps)void 0===r[s]&&(r[s]=t[s]);return{$$typeof:a,type:e,key:l,ref:u,props:r,_owner:i.current}}t.jsx=l,t.jsxs=l},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),s=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),_=Symbol.for("react.lazy"),d=Symbol.iterator;var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,f={};function y(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||p}function w(){}function g(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||p}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=y.prototype;var v=g.prototype=new w;v.constructor=g,h(v,y.prototype),v.isPureReactComponent=!0;var x=Array.isArray,b=Object.prototype.hasOwnProperty,k={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,s){var a,r={},o=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)b.call(t,a)&&!I.hasOwnProperty(a)&&(r[a]=t[a]);var c=arguments.length-2;if(1===c)r.children=s;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];r.children=l}if(e&&e.defaultProps)for(a in c=e.defaultProps)void 0===r[a]&&(r[a]=c[a]);return{$$typeof:n,type:e,key:o,ref:i,props:r,_owner:k.current}}function C(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var N=/\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,a,r,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case s:c=!0}}if(c)return o=o(c=e),e=""===r?"."+T(c,0):r,x(o)?(a="",null!=e&&(a=e.replace(N,"$&/")+"/"),E(o,t,a,"",(function(e){return e}))):null!=o&&(C(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(N,"$&/")+"/")+e)),t.push(o)),1;if(c=0,r=""===r?".":r+":",x(e))for(var l=0;l<e.length;l++){var u=r+T(i=e[l],l);c+=E(i,t,a,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=E(i=i.value,t,a,u=r+T(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function R(e,t,n){if(null==e)return e;var s=[],a=0;return E(e,s,"","",(function(e){return t.call(n,e,a++)})),s}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},M={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:k};function O(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!C(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=a,t.Profiler=o,t.PureComponent=g,t.StrictMode=r,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.act=O,t.cloneElement=function(e,t,s){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=h({},e.props),r=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=k.current),void 0!==t.key&&(r=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)b.call(t,l)&&!I.hasOwnProperty(l)&&(a[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)a.children=s;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];a.children=c}return{$$typeof:n,type:e.type,key:r,ref:o,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=C,t.lazy=function(e){return{$$typeof:_,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=O,t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var s=n-1>>>1,a=e[s];if(!(0<r(a,t)))break e;e[s]=t,e[n]=a,n=s}}function s(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var s=0,a=e.length,o=a>>>1;s<o;){var i=2*(s+1)-1,c=e[i],l=i+1,u=e[l];if(0>r(c,n))l<a&&0>r(u,c)?(e[s]=u,e[l]=n,s=l):(e[s]=c,e[i]=n,s=i);else{if(!(l<a&&0>r(u,n)))break e;e[s]=u,e[l]=n,s=l}}}return t}function r(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],m=1,_=null,d=3,p=!1,h=!1,f=!1,y="function"===typeof setTimeout?setTimeout:null,w="function"===typeof clearTimeout?clearTimeout:null,g="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=s(u);null!==t;){if(null===t.callback)a(u);else{if(!(t.startTime<=e))break;a(u),t.sortIndex=t.expirationTime,n(l,t)}t=s(u)}}function x(e){if(f=!1,v(e),!h)if(null!==s(l))h=!0,D(b);else{var t=s(u);null!==t&&M(x,t.startTime-e)}}function b(e,n){h=!1,f&&(f=!1,w(C),C=-1),p=!0;var r=d;try{for(v(n),_=s(l);null!==_&&(!(_.expirationTime>n)||e&&!E());){var o=_.callback;if("function"===typeof o){_.callback=null,d=_.priorityLevel;var i=o(_.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?_.callback=i:_===s(l)&&a(l),v(n)}else a(l);_=s(l)}if(null!==_)var c=!0;else{var m=s(u);null!==m&&M(x,m.startTime-n),c=!1}return c}finally{_=null,d=r,p=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,I=!1,S=null,C=-1,N=5,T=-1;function E(){return!(t.unstable_now()-T<N)}function R(){if(null!==S){var e=t.unstable_now();T=e;var n=!0;try{n=S(!0,e)}finally{n?k():(I=!1,S=null)}}else I=!1}if("function"===typeof g)k=function(){g(R)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,F=A.port2;A.port1.onmessage=R,k=function(){F.postMessage(null)}}else k=function(){y(R,0)};function D(e){S=e,I||(I=!0,k())}function M(e,n){C=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||p||(h=!0,D(b))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):N=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return s(l)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},t.unstable_scheduleCallback=function(e,a,r){var o=t.unstable_now();switch("object"===typeof r&&null!==r?r="number"===typeof(r=r.delay)&&0<r?o+r:o:r=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:m++,callback:a,priorityLevel:e,startTime:r,expirationTime:i=r+i,sortIndex:-1},r>o?(e.sortIndex=r,n(u,e),null===s(l)&&e===s(u)&&(f?(w(C),C=-1):f=!0,M(x,r-o))):(e.sortIndex=i,n(l,e),h||p||(h=!0,D(b))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var s=n(359),a=n(66),r=n(16),o=n(538),i=n(288),c=n(262),l=n(430);l.alea=s,l.xor128=a,l.xorwow=r,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},359:function(e,t,n){var s;!function(e,a,r){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),s=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,s&&("object"==typeof s&&i(s,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(s=function(){return c}.call(t,n,t,a))||(a.exports=s):this.alea=c}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var s;!function(e,a,r){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&i(s,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(s=function(){return c}.call(t,n,t,a))||(a.exports=s):this.tychei=c}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var s;!function(e,a,r){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&i(s,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(s=function(){return c}.call(t,n,t,a))||(a.exports=s):this.xor128=c}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var s;!function(e,a,r){function o(e){var t=this;t.next=function(){var e,n,s=t.w,a=t.X,r=t.i;return t.w=s=s+1640531527|0,n=a[r+34&127],e=a[r=r+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[r]=n^e,t.i=r,n+(s^s>>>16)|0},function(e,t){var n,s,a,r,o,i=[],c=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,c=Math.max(c,t.length)),a=0,r=-32;r<c;++r)t&&(s^=t.charCodeAt((r+32)%t.length)),0===r&&(o=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,r>=0&&(o=o+1640531527|0,a=0==(n=i[127&r]^=s+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,r=512;r>0;--r)s=i[a+34&127],n=i[a=a+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,i[a]=s^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&(s.X&&i(s,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(s=function(){return c}.call(t,n,t,a))||(a.exports=s):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var s;!function(e,a,r){function o(e){var t=this;t.next=function(){var e,n,s=t.x,a=t.i;return e=s[a],n=(e^=e>>>7)^e<<24,n^=(e=s[a+1&7])^e>>>10,n^=(e=s[a+3&7])^e>>>3,n^=(e=s[a+4&7])^e<<7,e=s[a+7&7],n^=(e^=e<<13)^e<<9,s[a]=n,t.i=a+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&(s.x&&i(s,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(s=function(){return c}.call(t,n,t,a))||(a.exports=s):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var s;!function(e,a,r){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),s=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,s&&("object"==typeof s&&i(s,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n.amdD&&n.amdO?void 0===(s=function(){return c}.call(t,n,t,a))||(a.exports=s):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var s;!function(a,r,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),m=2*u,_=c-1;function d(e,t,n){var s=[],_=y(f((t=1==t?{entropy:!0}:t||{}).entropy?[e,w(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(a.crypto||a.msCrypto).getRandomValues(e)),w(e)}catch(s){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,w(r)]}}():e,3),s),d=new p(s),g=function(){for(var e=d.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=d.g(1);for(;e>=m;)e/=2,t/=2,n>>>=1;return(e+n)/t};return g.int32=function(){return 0|d.g(4)},g.quick=function(){return d.g(4)/4294967296},g.double=g,y(w(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&h(s,d),e.state=function(){return h(d,{})}),n?(o.random=e,t):e})(g,_,"global"in t?t.global:this==o,t.state)}function p(e){var t,n=e.length,s=this,a=0,r=s.i=s.j=0,o=s.S=[];for(n||(e=[n++]);a<c;)o[a]=a++;for(a=0;a<c;a++)o[a]=o[r=_&r+e[a%n]+(t=o[a])],o[r]=t;(s.g=function(e){for(var t,n=0,a=s.i,r=s.j,o=s.S;e--;)t=o[a=_&a+1],n=n*c+o[_&(o[a]=o[r=_&r+t])+(o[r]=t)];return s.i=a,s.j=r,n})(c)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,s=[],a=typeof e;if(t&&"object"==a)for(n in e)try{s.push(f(e[n],t-1))}catch(r){}return s.length?s:"string"==a?e:e+"\0"}function y(e,t){for(var n,s=e+"",a=0;a<s.length;)t[_&a]=_&(n^=19*t[_&a])+s.charCodeAt(a++);return w(t)}function w(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),r),e.exports){e.exports=d;try{i=n(996)}catch(g){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}("undefined"!==typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(s){var a=t[s];if(void 0!==a)return a.exports;var r=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,s)=>(n.f[s](e,t),t)),[])),n.u=e=>"static/js/"+e+".7204573b.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="breast-cancer-js:";n.l=(s,a,r,o)=>{if(e[s])e[s].push(a);else{var i,c;if(void 0!==r)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var m=l[u];if(m.getAttribute("src")==s||m.getAttribute("data-webpack")==t+r){i=m;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+r),i.src=s),e[s]=[a];var _=(t,n)=>{i.onerror=i.onload=null,clearTimeout(d);var a=e[s];if(delete e[s],i.parentNode&&i.parentNode.removeChild(i),a&&a.forEach((e=>e(n))),t)return t(n)},d=setTimeout(_.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=_.bind(null,i.onerror),i.onload=_.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/.github.io/breast-cancer-react.git/",(()=>{var e={792:0};n.f.j=(t,s)=>{var a=n.o(e,t)?e[t]:void 0;if(0!==a)if(a)s.push(a[2]);else{var r=new Promise(((n,s)=>a=e[t]=[n,s]));s.push(a[2]=r);var o=n.p+n.u(t),i=new Error;n.l(o,(s=>{if(n.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var r=s&&("load"===s.type?"missing":s.type),o=s&&s.target&&s.target.src;i.message="Loading chunk "+t+" failed.\n("+r+": "+o+")",i.name="ChunkLoadError",i.type=r,i.request=o,a[1](i)}}),"chunk-"+t,t)}};var t=(t,s)=>{var a,r,o=s[0],i=s[1],c=s[2],l=0;if(o.some((t=>0!==e[t]))){for(a in i)n.o(i,a)&&(n.m[a]=i[a]);if(c)c(n)}for(t&&t(s);l<o.length;l++)r=o[l],n.o(e,r)&&e[r]&&e[r][0](),e[r]=0},s=self.webpackChunkbreast_cancer_js=self.webpackChunkbreast_cancer_js||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>To,computeFlatOffset:()=>Uo,computeOutShape:()=>Ro,getNormalizedAxes:()=>Mo,isSliceContinous:()=>Wo,maskToAxes:()=>Eo,parseSliceParams:()=>Vo,sliceInfo:()=>Go,startForAxis:()=>zo,startIndicesWithElidedDims:()=>Oo,stopForAxis:()=>Po,stopIndicesWithElidedDims:()=>Lo,stridesForAxis:()=>Bo,stridesWithElidedDims:()=>Ao});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>im,computeOutShape:()=>om,segOpComputeOptimalWindowSize:()=>rm});var s={};n.r(s),n.d(s,{ERF_A1:()=>ku,ERF_A2:()=>Iu,ERF_A3:()=>Su,ERF_A4:()=>Cu,ERF_A5:()=>Nu,ERF_P:()=>bu,PARALLELIZE_THRESHOLD:()=>cu,RowPartitionType:()=>su,SELU_SCALE:()=>xu,SELU_SCALEALPHA:()=>vu,applyActivation:()=>ol,assertAndGetBroadcastShape:()=>uo,assertAxesAreInnerMostDims:()=>$i,assertParamsConsistent:()=>tu,assignToTypedArray:()=>Du,axesAreInnerMostDims:()=>Yi,calculateShapes:()=>gu,checkEinsumDimSizes:()=>Vu,checkPadOnDimRoundingMode:()=>ci,combineLocations:()=>Qi,combineRaggedTensorToTensorShapes:()=>au,complexWithEvenIndex:()=>Ru,complexWithOddIndex:()=>Au,computeConv2DInfo:()=>Jo,computeConv3DInfo:()=>Zo,computeDefaultPad:()=>$o,computeDilation2DInfo:()=>Xo,computeOptimalWindowSize:()=>lu,computeOutAndReduceShapes:()=>Ji,computeOutShape:()=>nu,computePool2DInfo:()=>Yo,computePool3DInfo:()=>Qo,convertConv2DDataFormat:()=>ii,decodeEinsumEquation:()=>Wu,eitherStridesOrDilationsAreOne:()=>ri,expandShapeToKeepDim:()=>Zi,exponent:()=>Ou,exponents:()=>Mu,fromStringArrayToUint8:()=>lm,fromUint8ToStringArray:()=>cm,getAxesPermutation:()=>ec,getBroadcastDims:()=>co,getComplexWithIndex:()=>Fu,getEinsumComputePath:()=>Gu,getEinsumPermutation:()=>Uu,getFusedBiasGradient:()=>rl,getFusedDyActivation:()=>al,getImageCenter:()=>uu,getInnerMostAxes:()=>nc,getPermuted:()=>_u,getRaggedRank:()=>ou,getReductionAxes:()=>lo,getReshaped:()=>mu,getReshapedPermuted:()=>du,getRowPartitionTypesHelper:()=>ru,getSliceBeginCoords:()=>pu,getSliceSize:()=>hu,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>qu,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Xu,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Yu,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Zu,getSparseReshapeInputOutputMismatchErrorMessage:()=>em,getSparseReshapeInputOutputMultipleErrorMessage:()=>$u,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Qu,getSparseReshapeNegativeOutputDimErrorMessage:()=>Ju,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>am,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>tm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>nm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>sm,getUndoAxesPermutation:()=>tc,isIdentityPermutation:()=>Hu,log:()=>ps,mergeRealAndImagArrays:()=>Tu,prepareAndValidate:()=>fu,prepareSplitSize:()=>Ku,segment_util:()=>t,shouldFuse:()=>il,slice_util:()=>e,splitRealAndImagArrays:()=>Eu,stridesOrDilationsArePositive:()=>oi,tupleValuesAreOne:()=>ai,upcastType:()=>ha,validateDefaultValueShape:()=>iu,validateInput:()=>wu,validateUpdateShape:()=>yu,warn:()=>ds});var a={};n.r(a),n.d(a,{addImpl:()=>tx,bincountImpl:()=>qx,bincountReduceImpl:()=>Xx,bitwiseAndImpl:()=>Qx,castImpl:()=>Qv,ceilImpl:()=>$x,concatImpl:()=>rb,equalImpl:()=>Gb,expImpl:()=>ek,expm1Impl:()=>rk,floorImpl:()=>bk,gatherNdImpl:()=>Rk,gatherV2Impl:()=>Fk,greaterEqualImpl:()=>Bk,greaterImpl:()=>Mk,lessEqualImpl:()=>Qk,lessImpl:()=>qk,linSpaceImpl:()=>$k,logImpl:()=>tI,maxImpl:()=>fI,maximumImpl:()=>gI,minimumImpl:()=>EI,multiplyImpl:()=>Ob,negImpl:()=>PI,notEqualImpl:()=>qI,prodImpl:()=>oS,raggedGatherImpl:()=>mS,raggedRangeImpl:()=>pS,raggedTensorToTensorImpl:()=>vS,rangeImpl:()=>bS,rsqrtImpl:()=>MS,scatterImpl:()=>BS,sigmoidImpl:()=>Uv,simpleAbsImpl:()=>ux,sliceImpl:()=>Gx,sparseFillEmptyRowsImpl:()=>sC,sparseReshapeImpl:()=>rC,sparseSegmentReductionImpl:()=>iC,sqrtImpl:()=>_C,staticRegexReplaceImpl:()=>gC,stridedSliceImpl:()=>IC,stringNGramsImpl:()=>NC,stringSplitImpl:()=>RC,stringToHashBucketFastImpl:()=>FC,subImpl:()=>mk,tileImpl:()=>zC,topKImpl:()=>VC,transposeImpl:()=>yx,uniqueImpl:()=>YC});var r=n(43),o=n(391);const i=[{id:842302,diagnosis:"M",radius_mean:17.99,texture_mean:10.38,perimeter_mean:122.8,area_mean:1001,smoothness_mean:.1184,compactness_mean:.2776,concavity_mean:.3001,concave_points_mean:.1471,symmetry_mean:.2419,fractal_dimension_mean:.07871,radius_se:1.095,texture_se:.9053,perimeter_se:8.589,area_se:153.4,smoothness_se:.006399,compactness_se:.04904,concavity_se:.05373,concave_points_se:.01587,symmetry_se:.03003,fractal_dimension_se:.006193,radius_worst:25.38,texture_worst:17.33,perimeter_worst:184.6,area_worst:2019,smoothness_worst:.1622,compactness_worst:.6656,concavity_worst:.7119,concave_points_worst:.2654,symmetry_worst:.4601,fractal_dimension_worst:.1189,"":""},{id:842517,diagnosis:"M",radius_mean:20.57,texture_mean:17.77,perimeter_mean:132.9,area_mean:1326,smoothness_mean:.08474,compactness_mean:.07864,concavity_mean:.0869,concave_points_mean:.07017,symmetry_mean:.1812,fractal_dimension_mean:.05667,radius_se:.5435,texture_se:.7339,perimeter_se:3.398,area_se:74.08,smoothness_se:.005225,compactness_se:.01308,concavity_se:.0186,concave_points_se:.0134,symmetry_se:.01389,fractal_dimension_se:.003532,radius_worst:24.99,texture_worst:23.41,perimeter_worst:158.8,area_worst:1956,smoothness_worst:.1238,compactness_worst:.1866,concavity_worst:.2416,concave_points_worst:.186,symmetry_worst:.275,fractal_dimension_worst:.08902,"":""},{id:84300903,diagnosis:"M",radius_mean:19.69,texture_mean:21.25,perimeter_mean:130,area_mean:1203,smoothness_mean:.1096,compactness_mean:.1599,concavity_mean:.1974,concave_points_mean:.1279,symmetry_mean:.2069,fractal_dimension_mean:.05999,radius_se:.7456,texture_se:.7869,perimeter_se:4.585,area_se:94.03,smoothness_se:.00615,compactness_se:.04006,concavity_se:.03832,concave_points_se:.02058,symmetry_se:.0225,fractal_dimension_se:.004571,radius_worst:23.57,texture_worst:25.53,perimeter_worst:152.5,area_worst:1709,smoothness_worst:.1444,compactness_worst:.4245,concavity_worst:.4504,concave_points_worst:.243,symmetry_worst:.3613,fractal_dimension_worst:.08758,"":""},{id:84348301,diagnosis:"M",radius_mean:11.42,texture_mean:20.38,perimeter_mean:77.58,area_mean:386.1,smoothness_mean:.1425,compactness_mean:.2839,concavity_mean:.2414,concave_points_mean:.1052,symmetry_mean:.2597,fractal_dimension_mean:.09744,radius_se:.4956,texture_se:1.156,perimeter_se:3.445,area_se:27.23,smoothness_se:.00911,compactness_se:.07458,concavity_se:.05661,concave_points_se:.01867,symmetry_se:.05963,fractal_dimension_se:.009208,radius_worst:14.91,texture_worst:26.5,perimeter_worst:98.87,area_worst:567.7,smoothness_worst:.2098,compactness_worst:.8663,concavity_worst:.6869,concave_points_worst:.2575,symmetry_worst:.6638,fractal_dimension_worst:.173,"":""},{id:84358402,diagnosis:"M",radius_mean:20.29,texture_mean:14.34,perimeter_mean:135.1,area_mean:1297,smoothness_mean:.1003,compactness_mean:.1328,concavity_mean:.198,concave_points_mean:.1043,symmetry_mean:.1809,fractal_dimension_mean:.05883,radius_se:.7572,texture_se:.7813,perimeter_se:5.438,area_se:94.44,smoothness_se:.01149,compactness_se:.02461,concavity_se:.05688,concave_points_se:.01885,symmetry_se:.01756,fractal_dimension_se:.005115,radius_worst:22.54,texture_worst:16.67,perimeter_worst:152.2,area_worst:1575,smoothness_worst:.1374,compactness_worst:.205,concavity_worst:.4,concave_points_worst:.1625,symmetry_worst:.2364,fractal_dimension_worst:.07678,"":""},{id:843786,diagnosis:"M",radius_mean:12.45,texture_mean:15.7,perimeter_mean:82.57,area_mean:477.1,smoothness_mean:.1278,compactness_mean:.17,concavity_mean:.1578,concave_points_mean:.08089,symmetry_mean:.2087,fractal_dimension_mean:.07613,radius_se:.3345,texture_se:.8902,perimeter_se:2.217,area_se:27.19,smoothness_se:.00751,compactness_se:.03345,concavity_se:.03672,concave_points_se:.01137,symmetry_se:.02165,fractal_dimension_se:.005082,radius_worst:15.47,texture_worst:23.75,perimeter_worst:103.4,area_worst:741.6,smoothness_worst:.1791,compactness_worst:.5249,concavity_worst:.5355,concave_points_worst:.1741,symmetry_worst:.3985,fractal_dimension_worst:.1244,"":""},{id:844359,diagnosis:"M",radius_mean:18.25,texture_mean:19.98,perimeter_mean:119.6,area_mean:1040,smoothness_mean:.09463,compactness_mean:.109,concavity_mean:.1127,concave_points_mean:.074,symmetry_mean:.1794,fractal_dimension_mean:.05742,radius_se:.4467,texture_se:.7732,perimeter_se:3.18,area_se:53.91,smoothness_se:.004314,compactness_se:.01382,concavity_se:.02254,concave_points_se:.01039,symmetry_se:.01369,fractal_dimension_se:.002179,radius_worst:22.88,texture_worst:27.66,perimeter_worst:153.2,area_worst:1606,smoothness_worst:.1442,compactness_worst:.2576,concavity_worst:.3784,concave_points_worst:.1932,symmetry_worst:.3063,fractal_dimension_worst:.08368,"":""},{id:84458202,diagnosis:"M",radius_mean:13.71,texture_mean:20.83,perimeter_mean:90.2,area_mean:577.9,smoothness_mean:.1189,compactness_mean:.1645,concavity_mean:.09366,concave_points_mean:.05985,symmetry_mean:.2196,fractal_dimension_mean:.07451,radius_se:.5835,texture_se:1.377,perimeter_se:3.856,area_se:50.96,smoothness_se:.008805,compactness_se:.03029,concavity_se:.02488,concave_points_se:.01448,symmetry_se:.01486,fractal_dimension_se:.005412,radius_worst:17.06,texture_worst:28.14,perimeter_worst:110.6,area_worst:897,smoothness_worst:.1654,compactness_worst:.3682,concavity_worst:.2678,concave_points_worst:.1556,symmetry_worst:.3196,fractal_dimension_worst:.1151,"":""},{id:844981,diagnosis:"M",radius_mean:13,texture_mean:21.82,perimeter_mean:87.5,area_mean:519.8,smoothness_mean:.1273,compactness_mean:.1932,concavity_mean:.1859,concave_points_mean:.09353,symmetry_mean:.235,fractal_dimension_mean:.07389,radius_se:.3063,texture_se:1.002,perimeter_se:2.406,area_se:24.32,smoothness_se:.005731,compactness_se:.03502,concavity_se:.03553,concave_points_se:.01226,symmetry_se:.02143,fractal_dimension_se:.003749,radius_worst:15.49,texture_worst:30.73,perimeter_worst:106.2,area_worst:739.3,smoothness_worst:.1703,compactness_worst:.5401,concavity_worst:.539,concave_points_worst:.206,symmetry_worst:.4378,fractal_dimension_worst:.1072,"":""},{id:84501001,diagnosis:"M",radius_mean:12.46,texture_mean:24.04,perimeter_mean:83.97,area_mean:475.9,smoothness_mean:.1186,compactness_mean:.2396,concavity_mean:.2273,concave_points_mean:.08543,symmetry_mean:.203,fractal_dimension_mean:.08243,radius_se:.2976,texture_se:1.599,perimeter_se:2.039,area_se:23.94,smoothness_se:.007149,compactness_se:.07217,concavity_se:.07743,concave_points_se:.01432,symmetry_se:.01789,fractal_dimension_se:.01008,radius_worst:15.09,texture_worst:40.68,perimeter_worst:97.65,area_worst:711.4,smoothness_worst:.1853,compactness_worst:1.058,concavity_worst:1.105,concave_points_worst:.221,symmetry_worst:.4366,fractal_dimension_worst:.2075,"":""},{id:845636,diagnosis:"M",radius_mean:16.02,texture_mean:23.24,perimeter_mean:102.7,area_mean:797.8,smoothness_mean:.08206,compactness_mean:.06669,concavity_mean:.03299,concave_points_mean:.03323,symmetry_mean:.1528,fractal_dimension_mean:.05697,radius_se:.3795,texture_se:1.187,perimeter_se:2.466,area_se:40.51,smoothness_se:.004029,compactness_se:.009269,concavity_se:.01101,concave_points_se:.007591,symmetry_se:.0146,fractal_dimension_se:.003042,radius_worst:19.19,texture_worst:33.88,perimeter_worst:123.8,area_worst:1150,smoothness_worst:.1181,compactness_worst:.1551,concavity_worst:.1459,concave_points_worst:.09975,symmetry_worst:.2948,fractal_dimension_worst:.08452,"":""},{id:84610002,diagnosis:"M",radius_mean:15.78,texture_mean:17.89,perimeter_mean:103.6,area_mean:781,smoothness_mean:.0971,compactness_mean:.1292,concavity_mean:.09954,concave_points_mean:.06606,symmetry_mean:.1842,fractal_dimension_mean:.06082,radius_se:.5058,texture_se:.9849,perimeter_se:3.564,area_se:54.16,smoothness_se:.005771,compactness_se:.04061,concavity_se:.02791,concave_points_se:.01282,symmetry_se:.02008,fractal_dimension_se:.004144,radius_worst:20.42,texture_worst:27.28,perimeter_worst:136.5,area_worst:1299,smoothness_worst:.1396,compactness_worst:.5609,concavity_worst:.3965,concave_points_worst:.181,symmetry_worst:.3792,fractal_dimension_worst:.1048,"":""},{id:846226,diagnosis:"M",radius_mean:19.17,texture_mean:24.8,perimeter_mean:132.4,area_mean:1123,smoothness_mean:.0974,compactness_mean:.2458,concavity_mean:.2065,concave_points_mean:.1118,symmetry_mean:.2397,fractal_dimension_mean:.078,radius_se:.9555,texture_se:3.568,perimeter_se:11.07,area_se:116.2,smoothness_se:.003139,compactness_se:.08297,concavity_se:.0889,concave_points_se:.0409,symmetry_se:.04484,fractal_dimension_se:.01284,radius_worst:20.96,texture_worst:29.94,perimeter_worst:151.7,area_worst:1332,smoothness_worst:.1037,compactness_worst:.3903,concavity_worst:.3639,concave_points_worst:.1767,symmetry_worst:.3176,fractal_dimension_worst:.1023,"":""},{id:846381,diagnosis:"M",radius_mean:15.85,texture_mean:23.95,perimeter_mean:103.7,area_mean:782.7,smoothness_mean:.08401,compactness_mean:.1002,concavity_mean:.09938,concave_points_mean:.05364,symmetry_mean:.1847,fractal_dimension_mean:.05338,radius_se:.4033,texture_se:1.078,perimeter_se:2.903,area_se:36.58,smoothness_se:.009769,compactness_se:.03126,concavity_se:.05051,concave_points_se:.01992,symmetry_se:.02981,fractal_dimension_se:.003002,radius_worst:16.84,texture_worst:27.66,perimeter_worst:112,area_worst:876.5,smoothness_worst:.1131,compactness_worst:.1924,concavity_worst:.2322,concave_points_worst:.1119,symmetry_worst:.2809,fractal_dimension_worst:.06287,"":""},{id:84667401,diagnosis:"M",radius_mean:13.73,texture_mean:22.61,perimeter_mean:93.6,area_mean:578.3,smoothness_mean:.1131,compactness_mean:.2293,concavity_mean:.2128,concave_points_mean:.08025,symmetry_mean:.2069,fractal_dimension_mean:.07682,radius_se:.2121,texture_se:1.169,perimeter_se:2.061,area_se:19.21,smoothness_se:.006429,compactness_se:.05936,concavity_se:.05501,concave_points_se:.01628,symmetry_se:.01961,fractal_dimension_se:.008093,radius_worst:15.03,texture_worst:32.01,perimeter_worst:108.8,area_worst:697.7,smoothness_worst:.1651,compactness_worst:.7725,concavity_worst:.6943,concave_points_worst:.2208,symmetry_worst:.3596,fractal_dimension_worst:.1431,"":""},{id:84799002,diagnosis:"M",radius_mean:14.54,texture_mean:27.54,perimeter_mean:96.73,area_mean:658.8,smoothness_mean:.1139,compactness_mean:.1595,concavity_mean:.1639,concave_points_mean:.07364,symmetry_mean:.2303,fractal_dimension_mean:.07077,radius_se:.37,texture_se:1.033,perimeter_se:2.879,area_se:32.55,smoothness_se:.005607,compactness_se:.0424,concavity_se:.04741,concave_points_se:.0109,symmetry_se:.01857,fractal_dimension_se:.005466,radius_worst:17.46,texture_worst:37.13,perimeter_worst:124.1,area_worst:943.2,smoothness_worst:.1678,compactness_worst:.6577,concavity_worst:.7026,concave_points_worst:.1712,symmetry_worst:.4218,fractal_dimension_worst:.1341,"":""},{id:848406,diagnosis:"M",radius_mean:14.68,texture_mean:20.13,perimeter_mean:94.74,area_mean:684.5,smoothness_mean:.09867,compactness_mean:.072,concavity_mean:.07395,concave_points_mean:.05259,symmetry_mean:.1586,fractal_dimension_mean:.05922,radius_se:.4727,texture_se:1.24,perimeter_se:3.195,area_se:45.4,smoothness_se:.005718,compactness_se:.01162,concavity_se:.01998,concave_points_se:.01109,symmetry_se:.0141,fractal_dimension_se:.002085,radius_worst:19.07,texture_worst:30.88,perimeter_worst:123.4,area_worst:1138,smoothness_worst:.1464,compactness_worst:.1871,concavity_worst:.2914,concave_points_worst:.1609,symmetry_worst:.3029,fractal_dimension_worst:.08216,"":""},{id:84862001,diagnosis:"M",radius_mean:16.13,texture_mean:20.68,perimeter_mean:108.1,area_mean:798.8,smoothness_mean:.117,compactness_mean:.2022,concavity_mean:.1722,concave_points_mean:.1028,symmetry_mean:.2164,fractal_dimension_mean:.07356,radius_se:.5692,texture_se:1.073,perimeter_se:3.854,area_se:54.18,smoothness_se:.007026,compactness_se:.02501,concavity_se:.03188,concave_points_se:.01297,symmetry_se:.01689,fractal_dimension_se:.004142,radius_worst:20.96,texture_worst:31.48,perimeter_worst:136.8,area_worst:1315,smoothness_worst:.1789,compactness_worst:.4233,concavity_worst:.4784,concave_points_worst:.2073,symmetry_worst:.3706,fractal_dimension_worst:.1142,"":""},{id:849014,diagnosis:"M",radius_mean:19.81,texture_mean:22.15,perimeter_mean:130,area_mean:1260,smoothness_mean:.09831,compactness_mean:.1027,concavity_mean:.1479,concave_points_mean:.09498,symmetry_mean:.1582,fractal_dimension_mean:.05395,radius_se:.7582,texture_se:1.017,perimeter_se:5.865,area_se:112.4,smoothness_se:.006494,compactness_se:.01893,concavity_se:.03391,concave_points_se:.01521,symmetry_se:.01356,fractal_dimension_se:.001997,radius_worst:27.32,texture_worst:30.88,perimeter_worst:186.8,area_worst:2398,smoothness_worst:.1512,compactness_worst:.315,concavity_worst:.5372,concave_points_worst:.2388,symmetry_worst:.2768,fractal_dimension_worst:.07615,"":""},{id:8510426,diagnosis:"B",radius_mean:13.54,texture_mean:14.36,perimeter_mean:87.46,area_mean:566.3,smoothness_mean:.09779,compactness_mean:.08129,concavity_mean:.06664,concave_points_mean:.04781,symmetry_mean:.1885,fractal_dimension_mean:.05766,radius_se:.2699,texture_se:.7886,perimeter_se:2.058,area_se:23.56,smoothness_se:.008462,compactness_se:.0146,concavity_se:.02387,concave_points_se:.01315,symmetry_se:.0198,fractal_dimension_se:.0023,radius_worst:15.11,texture_worst:19.26,perimeter_worst:99.7,area_worst:711.2,smoothness_worst:.144,compactness_worst:.1773,concavity_worst:.239,concave_points_worst:.1288,symmetry_worst:.2977,fractal_dimension_worst:.07259,"":""},{id:8510653,diagnosis:"B",radius_mean:13.08,texture_mean:15.71,perimeter_mean:85.63,area_mean:520,smoothness_mean:.1075,compactness_mean:.127,concavity_mean:.04568,concave_points_mean:.0311,symmetry_mean:.1967,fractal_dimension_mean:.06811,radius_se:.1852,texture_se:.7477,perimeter_se:1.383,area_se:14.67,smoothness_se:.004097,compactness_se:.01898,concavity_se:.01698,concave_points_se:.00649,symmetry_se:.01678,fractal_dimension_se:.002425,radius_worst:14.5,texture_worst:20.49,perimeter_worst:96.09,area_worst:630.5,smoothness_worst:.1312,compactness_worst:.2776,concavity_worst:.189,concave_points_worst:.07283,symmetry_worst:.3184,fractal_dimension_worst:.08183,"":""},{id:8510824,diagnosis:"B",radius_mean:9.504,texture_mean:12.44,perimeter_mean:60.34,area_mean:273.9,smoothness_mean:.1024,compactness_mean:.06492,concavity_mean:.02956,concave_points_mean:.02076,symmetry_mean:.1815,fractal_dimension_mean:.06905,radius_se:.2773,texture_se:.9768,perimeter_se:1.909,area_se:15.7,smoothness_se:.009606,compactness_se:.01432,concavity_se:.01985,concave_points_se:.01421,symmetry_se:.02027,fractal_dimension_se:.002968,radius_worst:10.23,texture_worst:15.66,perimeter_worst:65.13,area_worst:314.9,smoothness_worst:.1324,compactness_worst:.1148,concavity_worst:.08867,concave_points_worst:.06227,symmetry_worst:.245,fractal_dimension_worst:.07773,"":""},{id:8511133,diagnosis:"M",radius_mean:15.34,texture_mean:14.26,perimeter_mean:102.5,area_mean:704.4,smoothness_mean:.1073,compactness_mean:.2135,concavity_mean:.2077,concave_points_mean:.09756,symmetry_mean:.2521,fractal_dimension_mean:.07032,radius_se:.4388,texture_se:.7096,perimeter_se:3.384,area_se:44.91,smoothness_se:.006789,compactness_se:.05328,concavity_se:.06446,concave_points_se:.02252,symmetry_se:.03672,fractal_dimension_se:.004394,radius_worst:18.07,texture_worst:19.08,perimeter_worst:125.1,area_worst:980.9,smoothness_worst:.139,compactness_worst:.5954,concavity_worst:.6305,concave_points_worst:.2393,symmetry_worst:.4667,fractal_dimension_worst:.09946,"":""},{id:851509,diagnosis:"M",radius_mean:21.16,texture_mean:23.04,perimeter_mean:137.2,area_mean:1404,smoothness_mean:.09428,compactness_mean:.1022,concavity_mean:.1097,concave_points_mean:.08632,symmetry_mean:.1769,fractal_dimension_mean:.05278,radius_se:.6917,texture_se:1.127,perimeter_se:4.303,area_se:93.99,smoothness_se:.004728,compactness_se:.01259,concavity_se:.01715,concave_points_se:.01038,symmetry_se:.01083,fractal_dimension_se:.001987,radius_worst:29.17,texture_worst:35.59,perimeter_worst:188,area_worst:2615,smoothness_worst:.1401,compactness_worst:.26,concavity_worst:.3155,concave_points_worst:.2009,symmetry_worst:.2822,fractal_dimension_worst:.07526,"":""},{id:852552,diagnosis:"M",radius_mean:16.65,texture_mean:21.38,perimeter_mean:110,area_mean:904.6,smoothness_mean:.1121,compactness_mean:.1457,concavity_mean:.1525,concave_points_mean:.0917,symmetry_mean:.1995,fractal_dimension_mean:.0633,radius_se:.8068,texture_se:.9017,perimeter_se:5.455,area_se:102.6,smoothness_se:.006048,compactness_se:.01882,concavity_se:.02741,concave_points_se:.0113,symmetry_se:.01468,fractal_dimension_se:.002801,radius_worst:26.46,texture_worst:31.56,perimeter_worst:177,area_worst:2215,smoothness_worst:.1805,compactness_worst:.3578,concavity_worst:.4695,concave_points_worst:.2095,symmetry_worst:.3613,fractal_dimension_worst:.09564,"":""},{id:852631,diagnosis:"M",radius_mean:17.14,texture_mean:16.4,perimeter_mean:116,area_mean:912.7,smoothness_mean:.1186,compactness_mean:.2276,concavity_mean:.2229,concave_points_mean:.1401,symmetry_mean:.304,fractal_dimension_mean:.07413,radius_se:1.046,texture_se:.976,perimeter_se:7.276,area_se:111.4,smoothness_se:.008029,compactness_se:.03799,concavity_se:.03732,concave_points_se:.02397,symmetry_se:.02308,fractal_dimension_se:.007444,radius_worst:22.25,texture_worst:21.4,perimeter_worst:152.4,area_worst:1461,smoothness_worst:.1545,compactness_worst:.3949,concavity_worst:.3853,concave_points_worst:.255,symmetry_worst:.4066,fractal_dimension_worst:.1059,"":""},{id:852763,diagnosis:"M",radius_mean:14.58,texture_mean:21.53,perimeter_mean:97.41,area_mean:644.8,smoothness_mean:.1054,compactness_mean:.1868,concavity_mean:.1425,concave_points_mean:.08783,symmetry_mean:.2252,fractal_dimension_mean:.06924,radius_se:.2545,texture_se:.9832,perimeter_se:2.11,area_se:21.05,smoothness_se:.004452,compactness_se:.03055,concavity_se:.02681,concave_points_se:.01352,symmetry_se:.01454,fractal_dimension_se:.003711,radius_worst:17.62,texture_worst:33.21,perimeter_worst:122.4,area_worst:896.9,smoothness_worst:.1525,compactness_worst:.6643,concavity_worst:.5539,concave_points_worst:.2701,symmetry_worst:.4264,fractal_dimension_worst:.1275,"":""},{id:852781,diagnosis:"M",radius_mean:18.61,texture_mean:20.25,perimeter_mean:122.1,area_mean:1094,smoothness_mean:.0944,compactness_mean:.1066,concavity_mean:.149,concave_points_mean:.07731,symmetry_mean:.1697,fractal_dimension_mean:.05699,radius_se:.8529,texture_se:1.849,perimeter_se:5.632,area_se:93.54,smoothness_se:.01075,compactness_se:.02722,concavity_se:.05081,concave_points_se:.01911,symmetry_se:.02293,fractal_dimension_se:.004217,radius_worst:21.31,texture_worst:27.26,perimeter_worst:139.9,area_worst:1403,smoothness_worst:.1338,compactness_worst:.2117,concavity_worst:.3446,concave_points_worst:.149,symmetry_worst:.2341,fractal_dimension_worst:.07421,"":""},{id:852973,diagnosis:"M",radius_mean:15.3,texture_mean:25.27,perimeter_mean:102.4,area_mean:732.4,smoothness_mean:.1082,compactness_mean:.1697,concavity_mean:.1683,concave_points_mean:.08751,symmetry_mean:.1926,fractal_dimension_mean:.0654,radius_se:.439,texture_se:1.012,perimeter_se:3.498,area_se:43.5,smoothness_se:.005233,compactness_se:.03057,concavity_se:.03576,concave_points_se:.01083,symmetry_se:.01768,fractal_dimension_se:.002967,radius_worst:20.27,texture_worst:36.71,perimeter_worst:149.3,area_worst:1269,smoothness_worst:.1641,compactness_worst:.611,concavity_worst:.6335,concave_points_worst:.2024,symmetry_worst:.4027,fractal_dimension_worst:.09876,"":""},{id:853201,diagnosis:"M",radius_mean:17.57,texture_mean:15.05,perimeter_mean:115,area_mean:955.1,smoothness_mean:.09847,compactness_mean:.1157,concavity_mean:.09875,concave_points_mean:.07953,symmetry_mean:.1739,fractal_dimension_mean:.06149,radius_se:.6003,texture_se:.8225,perimeter_se:4.655,area_se:61.1,smoothness_se:.005627,compactness_se:.03033,concavity_se:.03407,concave_points_se:.01354,symmetry_se:.01925,fractal_dimension_se:.003742,radius_worst:20.01,texture_worst:19.52,perimeter_worst:134.9,area_worst:1227,smoothness_worst:.1255,compactness_worst:.2812,concavity_worst:.2489,concave_points_worst:.1456,symmetry_worst:.2756,fractal_dimension_worst:.07919,"":""},{id:853401,diagnosis:"M",radius_mean:18.63,texture_mean:25.11,perimeter_mean:124.8,area_mean:1088,smoothness_mean:.1064,compactness_mean:.1887,concavity_mean:.2319,concave_points_mean:.1244,symmetry_mean:.2183,fractal_dimension_mean:.06197,radius_se:.8307,texture_se:1.466,perimeter_se:5.574,area_se:105,smoothness_se:.006248,compactness_se:.03374,concavity_se:.05196,concave_points_se:.01158,symmetry_se:.02007,fractal_dimension_se:.00456,radius_worst:23.15,texture_worst:34.01,perimeter_worst:160.5,area_worst:1670,smoothness_worst:.1491,compactness_worst:.4257,concavity_worst:.6133,concave_points_worst:.1848,symmetry_worst:.3444,fractal_dimension_worst:.09782,"":""},{id:853612,diagnosis:"M",radius_mean:11.84,texture_mean:18.7,perimeter_mean:77.93,area_mean:440.6,smoothness_mean:.1109,compactness_mean:.1516,concavity_mean:.1218,concave_points_mean:.05182,symmetry_mean:.2301,fractal_dimension_mean:.07799,radius_se:.4825,texture_se:1.03,perimeter_se:3.475,area_se:41,smoothness_se:.005551,compactness_se:.03414,concavity_se:.04205,concave_points_se:.01044,symmetry_se:.02273,fractal_dimension_se:.005667,radius_worst:16.82,texture_worst:28.12,perimeter_worst:119.4,area_worst:888.7,smoothness_worst:.1637,compactness_worst:.5775,concavity_worst:.6956,concave_points_worst:.1546,symmetry_worst:.4761,fractal_dimension_worst:.1402,"":""},{id:85382601,diagnosis:"M",radius_mean:17.02,texture_mean:23.98,perimeter_mean:112.8,area_mean:899.3,smoothness_mean:.1197,compactness_mean:.1496,concavity_mean:.2417,concave_points_mean:.1203,symmetry_mean:.2248,fractal_dimension_mean:.06382,radius_se:.6009,texture_se:1.398,perimeter_se:3.999,area_se:67.78,smoothness_se:.008268,compactness_se:.03082,concavity_se:.05042,concave_points_se:.01112,symmetry_se:.02102,fractal_dimension_se:.003854,radius_worst:20.88,texture_worst:32.09,perimeter_worst:136.1,area_worst:1344,smoothness_worst:.1634,compactness_worst:.3559,concavity_worst:.5588,concave_points_worst:.1847,symmetry_worst:.353,fractal_dimension_worst:.08482,"":""},{id:854002,diagnosis:"M",radius_mean:19.27,texture_mean:26.47,perimeter_mean:127.9,area_mean:1162,smoothness_mean:.09401,compactness_mean:.1719,concavity_mean:.1657,concave_points_mean:.07593,symmetry_mean:.1853,fractal_dimension_mean:.06261,radius_se:.5558,texture_se:.6062,perimeter_se:3.528,area_se:68.17,smoothness_se:.005015,compactness_se:.03318,concavity_se:.03497,concave_points_se:.009643,symmetry_se:.01543,fractal_dimension_se:.003896,radius_worst:24.15,texture_worst:30.9,perimeter_worst:161.4,area_worst:1813,smoothness_worst:.1509,compactness_worst:.659,concavity_worst:.6091,concave_points_worst:.1785,symmetry_worst:.3672,fractal_dimension_worst:.1123,"":""},{id:854039,diagnosis:"M",radius_mean:16.13,texture_mean:17.88,perimeter_mean:107,area_mean:807.2,smoothness_mean:.104,compactness_mean:.1559,concavity_mean:.1354,concave_points_mean:.07752,symmetry_mean:.1998,fractal_dimension_mean:.06515,radius_se:.334,texture_se:.6857,perimeter_se:2.183,area_se:35.03,smoothness_se:.004185,compactness_se:.02868,concavity_se:.02664,concave_points_se:.009067,symmetry_se:.01703,fractal_dimension_se:.003817,radius_worst:20.21,texture_worst:27.26,perimeter_worst:132.7,area_worst:1261,smoothness_worst:.1446,compactness_worst:.5804,concavity_worst:.5274,concave_points_worst:.1864,symmetry_worst:.427,fractal_dimension_worst:.1233,"":""},{id:854253,diagnosis:"M",radius_mean:16.74,texture_mean:21.59,perimeter_mean:110.1,area_mean:869.5,smoothness_mean:.0961,compactness_mean:.1336,concavity_mean:.1348,concave_points_mean:.06018,symmetry_mean:.1896,fractal_dimension_mean:.05656,radius_se:.4615,texture_se:.9197,perimeter_se:3.008,area_se:45.19,smoothness_se:.005776,compactness_se:.02499,concavity_se:.03695,concave_points_se:.01195,symmetry_se:.02789,fractal_dimension_se:.002665,radius_worst:20.01,texture_worst:29.02,perimeter_worst:133.5,area_worst:1229,smoothness_worst:.1563,compactness_worst:.3835,concavity_worst:.5409,concave_points_worst:.1813,symmetry_worst:.4863,fractal_dimension_worst:.08633,"":""},{id:854268,diagnosis:"M",radius_mean:14.25,texture_mean:21.72,perimeter_mean:93.63,area_mean:633,smoothness_mean:.09823,compactness_mean:.1098,concavity_mean:.1319,concave_points_mean:.05598,symmetry_mean:.1885,fractal_dimension_mean:.06125,radius_se:.286,texture_se:1.019,perimeter_se:2.657,area_se:24.91,smoothness_se:.005878,compactness_se:.02995,concavity_se:.04815,concave_points_se:.01161,symmetry_se:.02028,fractal_dimension_se:.004022,radius_worst:15.89,texture_worst:30.36,perimeter_worst:116.2,area_worst:799.6,smoothness_worst:.1446,compactness_worst:.4238,concavity_worst:.5186,concave_points_worst:.1447,symmetry_worst:.3591,fractal_dimension_worst:.1014,"":""},{id:854941,diagnosis:"B",radius_mean:13.03,texture_mean:18.42,perimeter_mean:82.61,area_mean:523.8,smoothness_mean:.08983,compactness_mean:.03766,concavity_mean:.02562,concave_points_mean:.02923,symmetry_mean:.1467,fractal_dimension_mean:.05863,radius_se:.1839,texture_se:2.342,perimeter_se:1.17,area_se:14.16,smoothness_se:.004352,compactness_se:.004899,concavity_se:.01343,concave_points_se:.01164,symmetry_se:.02671,fractal_dimension_se:.001777,radius_worst:13.3,texture_worst:22.81,perimeter_worst:84.46,area_worst:545.9,smoothness_worst:.09701,compactness_worst:.04619,concavity_worst:.04833,concave_points_worst:.05013,symmetry_worst:.1987,fractal_dimension_worst:.06169,"":""},{id:855133,diagnosis:"M",radius_mean:14.99,texture_mean:25.2,perimeter_mean:95.54,area_mean:698.8,smoothness_mean:.09387,compactness_mean:.05131,concavity_mean:.02398,concave_points_mean:.02899,symmetry_mean:.1565,fractal_dimension_mean:.05504,radius_se:1.214,texture_se:2.188,perimeter_se:8.077,area_se:106,smoothness_se:.006883,compactness_se:.01094,concavity_se:.01818,concave_points_se:.01917,symmetry_se:.007882,fractal_dimension_se:.001754,radius_worst:14.99,texture_worst:25.2,perimeter_worst:95.54,area_worst:698.8,smoothness_worst:.09387,compactness_worst:.05131,concavity_worst:.02398,concave_points_worst:.02899,symmetry_worst:.1565,fractal_dimension_worst:.05504,"":""},{id:855138,diagnosis:"M",radius_mean:13.48,texture_mean:20.82,perimeter_mean:88.4,area_mean:559.2,smoothness_mean:.1016,compactness_mean:.1255,concavity_mean:.1063,concave_points_mean:.05439,symmetry_mean:.172,fractal_dimension_mean:.06419,radius_se:.213,texture_se:.5914,perimeter_se:1.545,area_se:18.52,smoothness_se:.005367,compactness_se:.02239,concavity_se:.03049,concave_points_se:.01262,symmetry_se:.01377,fractal_dimension_se:.003187,radius_worst:15.53,texture_worst:26.02,perimeter_worst:107.3,area_worst:740.4,smoothness_worst:.161,compactness_worst:.4225,concavity_worst:.503,concave_points_worst:.2258,symmetry_worst:.2807,fractal_dimension_worst:.1071,"":""},{id:855167,diagnosis:"M",radius_mean:13.44,texture_mean:21.58,perimeter_mean:86.18,area_mean:563,smoothness_mean:.08162,compactness_mean:.06031,concavity_mean:.0311,concave_points_mean:.02031,symmetry_mean:.1784,fractal_dimension_mean:.05587,radius_se:.2385,texture_se:.8265,perimeter_se:1.572,area_se:20.53,smoothness_se:.00328,compactness_se:.01102,concavity_se:.0139,concave_points_se:.006881,symmetry_se:.0138,fractal_dimension_se:.001286,radius_worst:15.93,texture_worst:30.25,perimeter_worst:102.5,area_worst:787.9,smoothness_worst:.1094,compactness_worst:.2043,concavity_worst:.2085,concave_points_worst:.1112,symmetry_worst:.2994,fractal_dimension_worst:.07146,"":""},{id:855563,diagnosis:"M",radius_mean:10.95,texture_mean:21.35,perimeter_mean:71.9,area_mean:371.1,smoothness_mean:.1227,compactness_mean:.1218,concavity_mean:.1044,concave_points_mean:.05669,symmetry_mean:.1895,fractal_dimension_mean:.0687,radius_se:.2366,texture_se:1.428,perimeter_se:1.822,area_se:16.97,smoothness_se:.008064,compactness_se:.01764,concavity_se:.02595,concave_points_se:.01037,symmetry_se:.01357,fractal_dimension_se:.00304,radius_worst:12.84,texture_worst:35.34,perimeter_worst:87.22,area_worst:514,smoothness_worst:.1909,compactness_worst:.2698,concavity_worst:.4023,concave_points_worst:.1424,symmetry_worst:.2964,fractal_dimension_worst:.09606,"":""},{id:855625,diagnosis:"M",radius_mean:19.07,texture_mean:24.81,perimeter_mean:128.3,area_mean:1104,smoothness_mean:.09081,compactness_mean:.219,concavity_mean:.2107,concave_points_mean:.09961,symmetry_mean:.231,fractal_dimension_mean:.06343,radius_se:.9811,texture_se:1.666,perimeter_se:8.83,area_se:104.9,smoothness_se:.006548,compactness_se:.1006,concavity_se:.09723,concave_points_se:.02638,symmetry_se:.05333,fractal_dimension_se:.007646,radius_worst:24.09,texture_worst:33.17,perimeter_worst:177.4,area_worst:1651,smoothness_worst:.1247,compactness_worst:.7444,concavity_worst:.7242,concave_points_worst:.2493,symmetry_worst:.467,fractal_dimension_worst:.1038,"":""},{id:856106,diagnosis:"M",radius_mean:13.28,texture_mean:20.28,perimeter_mean:87.32,area_mean:545.2,smoothness_mean:.1041,compactness_mean:.1436,concavity_mean:.09847,concave_points_mean:.06158,symmetry_mean:.1974,fractal_dimension_mean:.06782,radius_se:.3704,texture_se:.8249,perimeter_se:2.427,area_se:31.33,smoothness_se:.005072,compactness_se:.02147,concavity_se:.02185,concave_points_se:.00956,symmetry_se:.01719,fractal_dimension_se:.003317,radius_worst:17.38,texture_worst:28,perimeter_worst:113.1,area_worst:907.2,smoothness_worst:.153,compactness_worst:.3724,concavity_worst:.3664,concave_points_worst:.1492,symmetry_worst:.3739,fractal_dimension_worst:.1027,"":""},{id:85638502,diagnosis:"M",radius_mean:13.17,texture_mean:21.81,perimeter_mean:85.42,area_mean:531.5,smoothness_mean:.09714,compactness_mean:.1047,concavity_mean:.08259,concave_points_mean:.05252,symmetry_mean:.1746,fractal_dimension_mean:.06177,radius_se:.1938,texture_se:.6123,perimeter_se:1.334,area_se:14.49,smoothness_se:.00335,compactness_se:.01384,concavity_se:.01452,concave_points_se:.006853,symmetry_se:.01113,fractal_dimension_se:.00172,radius_worst:16.23,texture_worst:29.89,perimeter_worst:105.5,area_worst:740.7,smoothness_worst:.1503,compactness_worst:.3904,concavity_worst:.3728,concave_points_worst:.1607,symmetry_worst:.3693,fractal_dimension_worst:.09618,"":""},{id:857010,diagnosis:"M",radius_mean:18.65,texture_mean:17.6,perimeter_mean:123.7,area_mean:1076,smoothness_mean:.1099,compactness_mean:.1686,concavity_mean:.1974,concave_points_mean:.1009,symmetry_mean:.1907,fractal_dimension_mean:.06049,radius_se:.6289,texture_se:.6633,perimeter_se:4.293,area_se:71.56,smoothness_se:.006294,compactness_se:.03994,concavity_se:.05554,concave_points_se:.01695,symmetry_se:.02428,fractal_dimension_se:.003535,radius_worst:22.82,texture_worst:21.32,perimeter_worst:150.6,area_worst:1567,smoothness_worst:.1679,compactness_worst:.509,concavity_worst:.7345,concave_points_worst:.2378,symmetry_worst:.3799,fractal_dimension_worst:.09185,"":""},{id:85713702,diagnosis:"B",radius_mean:8.196,texture_mean:16.84,perimeter_mean:51.71,area_mean:201.9,smoothness_mean:.086,compactness_mean:.05943,concavity_mean:.01588,concave_points_mean:.005917,symmetry_mean:.1769,fractal_dimension_mean:.06503,radius_se:.1563,texture_se:.9567,perimeter_se:1.094,area_se:8.205,smoothness_se:.008968,compactness_se:.01646,concavity_se:.01588,concave_points_se:.005917,symmetry_se:.02574,fractal_dimension_se:.002582,radius_worst:8.964,texture_worst:21.96,perimeter_worst:57.26,area_worst:242.2,smoothness_worst:.1297,compactness_worst:.1357,concavity_worst:.0688,concave_points_worst:.02564,symmetry_worst:.3105,fractal_dimension_worst:.07409,"":""},{id:85715,diagnosis:"M",radius_mean:13.17,texture_mean:18.66,perimeter_mean:85.98,area_mean:534.6,smoothness_mean:.1158,compactness_mean:.1231,concavity_mean:.1226,concave_points_mean:.0734,symmetry_mean:.2128,fractal_dimension_mean:.06777,radius_se:.2871,texture_se:.8937,perimeter_se:1.897,area_se:24.25,smoothness_se:.006532,compactness_se:.02336,concavity_se:.02905,concave_points_se:.01215,symmetry_se:.01743,fractal_dimension_se:.003643,radius_worst:15.67,texture_worst:27.95,perimeter_worst:102.8,area_worst:759.4,smoothness_worst:.1786,compactness_worst:.4166,concavity_worst:.5006,concave_points_worst:.2088,symmetry_worst:.39,fractal_dimension_worst:.1179,"":""},{id:857155,diagnosis:"B",radius_mean:12.05,texture_mean:14.63,perimeter_mean:78.04,area_mean:449.3,smoothness_mean:.1031,compactness_mean:.09092,concavity_mean:.06592,concave_points_mean:.02749,symmetry_mean:.1675,fractal_dimension_mean:.06043,radius_se:.2636,texture_se:.7294,perimeter_se:1.848,area_se:19.87,smoothness_se:.005488,compactness_se:.01427,concavity_se:.02322,concave_points_se:.00566,symmetry_se:.01428,fractal_dimension_se:.002422,radius_worst:13.76,texture_worst:20.7,perimeter_worst:89.88,area_worst:582.6,smoothness_worst:.1494,compactness_worst:.2156,concavity_worst:.305,concave_points_worst:.06548,symmetry_worst:.2747,fractal_dimension_worst:.08301,"":""},{id:857156,diagnosis:"B",radius_mean:13.49,texture_mean:22.3,perimeter_mean:86.91,area_mean:561,smoothness_mean:.08752,compactness_mean:.07698,concavity_mean:.04751,concave_points_mean:.03384,symmetry_mean:.1809,fractal_dimension_mean:.05718,radius_se:.2338,texture_se:1.353,perimeter_se:1.735,area_se:20.2,smoothness_se:.004455,compactness_se:.01382,concavity_se:.02095,concave_points_se:.01184,symmetry_se:.01641,fractal_dimension_se:.001956,radius_worst:15.15,texture_worst:31.82,perimeter_worst:99,area_worst:698.8,smoothness_worst:.1162,compactness_worst:.1711,concavity_worst:.2282,concave_points_worst:.1282,symmetry_worst:.2871,fractal_dimension_worst:.06917,"":""},{id:857343,diagnosis:"B",radius_mean:11.76,texture_mean:21.6,perimeter_mean:74.72,area_mean:427.9,smoothness_mean:.08637,compactness_mean:.04966,concavity_mean:.01657,concave_points_mean:.01115,symmetry_mean:.1495,fractal_dimension_mean:.05888,radius_se:.4062,texture_se:1.21,perimeter_se:2.635,area_se:28.47,smoothness_se:.005857,compactness_se:.009758,concavity_se:.01168,concave_points_se:.007445,symmetry_se:.02406,fractal_dimension_se:.001769,radius_worst:12.98,texture_worst:25.72,perimeter_worst:82.98,area_worst:516.5,smoothness_worst:.1085,compactness_worst:.08615,concavity_worst:.05523,concave_points_worst:.03715,symmetry_worst:.2433,fractal_dimension_worst:.06563,"":""},{id:857373,diagnosis:"B",radius_mean:13.64,texture_mean:16.34,perimeter_mean:87.21,area_mean:571.8,smoothness_mean:.07685,compactness_mean:.06059,concavity_mean:.01857,concave_points_mean:.01723,symmetry_mean:.1353,fractal_dimension_mean:.05953,radius_se:.1872,texture_se:.9234,perimeter_se:1.449,area_se:14.55,smoothness_se:.004477,compactness_se:.01177,concavity_se:.01079,concave_points_se:.007956,symmetry_se:.01325,fractal_dimension_se:.002551,radius_worst:14.67,texture_worst:23.19,perimeter_worst:96.08,area_worst:656.7,smoothness_worst:.1089,compactness_worst:.1582,concavity_worst:.105,concave_points_worst:.08586,symmetry_worst:.2346,fractal_dimension_worst:.08025,"":""},{id:857374,diagnosis:"B",radius_mean:11.94,texture_mean:18.24,perimeter_mean:75.71,area_mean:437.6,smoothness_mean:.08261,compactness_mean:.04751,concavity_mean:.01972,concave_points_mean:.01349,symmetry_mean:.1868,fractal_dimension_mean:.0611,radius_se:.2273,texture_se:.6329,perimeter_se:1.52,area_se:17.47,smoothness_se:.00721,compactness_se:.00838,concavity_se:.01311,concave_points_se:.008,symmetry_se:.01996,fractal_dimension_se:.002635,radius_worst:13.1,texture_worst:21.33,perimeter_worst:83.67,area_worst:527.2,smoothness_worst:.1144,compactness_worst:.08906,concavity_worst:.09203,concave_points_worst:.06296,symmetry_worst:.2785,fractal_dimension_worst:.07408,"":""},{id:857392,diagnosis:"M",radius_mean:18.22,texture_mean:18.7,perimeter_mean:120.3,area_mean:1033,smoothness_mean:.1148,compactness_mean:.1485,concavity_mean:.1772,concave_points_mean:.106,symmetry_mean:.2092,fractal_dimension_mean:.0631,radius_se:.8337,texture_se:1.593,perimeter_se:4.877,area_se:98.81,smoothness_se:.003899,compactness_se:.02961,concavity_se:.02817,concave_points_se:.009222,symmetry_se:.02674,fractal_dimension_se:.005126,radius_worst:20.6,texture_worst:24.13,perimeter_worst:135.1,area_worst:1321,smoothness_worst:.128,compactness_worst:.2297,concavity_worst:.2623,concave_points_worst:.1325,symmetry_worst:.3021,fractal_dimension_worst:.07987,"":""},{id:857438,diagnosis:"M",radius_mean:15.1,texture_mean:22.02,perimeter_mean:97.26,area_mean:712.8,smoothness_mean:.09056,compactness_mean:.07081,concavity_mean:.05253,concave_points_mean:.03334,symmetry_mean:.1616,fractal_dimension_mean:.05684,radius_se:.3105,texture_se:.8339,perimeter_se:2.097,area_se:29.91,smoothness_se:.004675,compactness_se:.0103,concavity_se:.01603,concave_points_se:.009222,symmetry_se:.01095,fractal_dimension_se:.001629,radius_worst:18.1,texture_worst:31.69,perimeter_worst:117.7,area_worst:1030,smoothness_worst:.1389,compactness_worst:.2057,concavity_worst:.2712,concave_points_worst:.153,symmetry_worst:.2675,fractal_dimension_worst:.07873,"":""},{id:85759902,diagnosis:"B",radius_mean:11.52,texture_mean:18.75,perimeter_mean:73.34,area_mean:409,smoothness_mean:.09524,compactness_mean:.05473,concavity_mean:.03036,concave_points_mean:.02278,symmetry_mean:.192,fractal_dimension_mean:.05907,radius_se:.3249,texture_se:.9591,perimeter_se:2.183,area_se:23.47,smoothness_se:.008328,compactness_se:.008722,concavity_se:.01349,concave_points_se:.00867,symmetry_se:.03218,fractal_dimension_se:.002386,radius_worst:12.84,texture_worst:22.47,perimeter_worst:81.81,area_worst:506.2,smoothness_worst:.1249,compactness_worst:.0872,concavity_worst:.09076,concave_points_worst:.06316,symmetry_worst:.3306,fractal_dimension_worst:.07036,"":""},{id:857637,diagnosis:"M",radius_mean:19.21,texture_mean:18.57,perimeter_mean:125.5,area_mean:1152,smoothness_mean:.1053,compactness_mean:.1267,concavity_mean:.1323,concave_points_mean:.08994,symmetry_mean:.1917,fractal_dimension_mean:.05961,radius_se:.7275,texture_se:1.193,perimeter_se:4.837,area_se:102.5,smoothness_se:.006458,compactness_se:.02306,concavity_se:.02945,concave_points_se:.01538,symmetry_se:.01852,fractal_dimension_se:.002608,radius_worst:26.14,texture_worst:28.14,perimeter_worst:170.1,area_worst:2145,smoothness_worst:.1624,compactness_worst:.3511,concavity_worst:.3879,concave_points_worst:.2091,symmetry_worst:.3537,fractal_dimension_worst:.08294,"":""},{id:857793,diagnosis:"M",radius_mean:14.71,texture_mean:21.59,perimeter_mean:95.55,area_mean:656.9,smoothness_mean:.1137,compactness_mean:.1365,concavity_mean:.1293,concave_points_mean:.08123,symmetry_mean:.2027,fractal_dimension_mean:.06758,radius_se:.4226,texture_se:1.15,perimeter_se:2.735,area_se:40.09,smoothness_se:.003659,compactness_se:.02855,concavity_se:.02572,concave_points_se:.01272,symmetry_se:.01817,fractal_dimension_se:.004108,radius_worst:17.87,texture_worst:30.7,perimeter_worst:115.7,area_worst:985.5,smoothness_worst:.1368,compactness_worst:.429,concavity_worst:.3587,concave_points_worst:.1834,symmetry_worst:.3698,fractal_dimension_worst:.1094,"":""},{id:857810,diagnosis:"B",radius_mean:13.05,texture_mean:19.31,perimeter_mean:82.61,area_mean:527.2,smoothness_mean:.0806,compactness_mean:.03789,concavity_mean:692e-6,concave_points_mean:.004167,symmetry_mean:.1819,fractal_dimension_mean:.05501,radius_se:.404,texture_se:1.214,perimeter_se:2.595,area_se:32.96,smoothness_se:.007491,compactness_se:.008593,concavity_se:692e-6,concave_points_se:.004167,symmetry_se:.0219,fractal_dimension_se:.00299,radius_worst:14.23,texture_worst:22.25,perimeter_worst:90.24,area_worst:624.1,smoothness_worst:.1021,compactness_worst:.06191,concavity_worst:.001845,concave_points_worst:.01111,symmetry_worst:.2439,fractal_dimension_worst:.06289,"":""},{id:858477,diagnosis:"B",radius_mean:8.618,texture_mean:11.79,perimeter_mean:54.34,area_mean:224.5,smoothness_mean:.09752,compactness_mean:.05272,concavity_mean:.02061,concave_points_mean:.007799,symmetry_mean:.1683,fractal_dimension_mean:.07187,radius_se:.1559,texture_se:.5796,perimeter_se:1.046,area_se:8.322,smoothness_se:.01011,compactness_se:.01055,concavity_se:.01981,concave_points_se:.005742,symmetry_se:.0209,fractal_dimension_se:.002788,radius_worst:9.507,texture_worst:15.4,perimeter_worst:59.9,area_worst:274.9,smoothness_worst:.1733,compactness_worst:.1239,concavity_worst:.1168,concave_points_worst:.04419,symmetry_worst:.322,fractal_dimension_worst:.09026,"":""},{id:858970,diagnosis:"B",radius_mean:10.17,texture_mean:14.88,perimeter_mean:64.55,area_mean:311.9,smoothness_mean:.1134,compactness_mean:.08061,concavity_mean:.01084,concave_points_mean:.0129,symmetry_mean:.2743,fractal_dimension_mean:.0696,radius_se:.5158,texture_se:1.441,perimeter_se:3.312,area_se:34.62,smoothness_se:.007514,compactness_se:.01099,concavity_se:.007665,concave_points_se:.008193,symmetry_se:.04183,fractal_dimension_se:.005953,radius_worst:11.02,texture_worst:17.45,perimeter_worst:69.86,area_worst:368.6,smoothness_worst:.1275,compactness_worst:.09866,concavity_worst:.02168,concave_points_worst:.02579,symmetry_worst:.3557,fractal_dimension_worst:.0802,"":""},{id:858981,diagnosis:"B",radius_mean:8.598,texture_mean:20.98,perimeter_mean:54.66,area_mean:221.8,smoothness_mean:.1243,compactness_mean:.08963,concavity_mean:.03,concave_points_mean:.009259,symmetry_mean:.1828,fractal_dimension_mean:.06757,radius_se:.3582,texture_se:2.067,perimeter_se:2.493,area_se:18.39,smoothness_se:.01193,compactness_se:.03162,concavity_se:.03,concave_points_se:.009259,symmetry_se:.03357,fractal_dimension_se:.003048,radius_worst:9.565,texture_worst:27.04,perimeter_worst:62.06,area_worst:273.9,smoothness_worst:.1639,compactness_worst:.1698,concavity_worst:.09001,concave_points_worst:.02778,symmetry_worst:.2972,fractal_dimension_worst:.07712,"":""},{id:858986,diagnosis:"M",radius_mean:14.25,texture_mean:22.15,perimeter_mean:96.42,area_mean:645.7,smoothness_mean:.1049,compactness_mean:.2008,concavity_mean:.2135,concave_points_mean:.08653,symmetry_mean:.1949,fractal_dimension_mean:.07292,radius_se:.7036,texture_se:1.268,perimeter_se:5.373,area_se:60.78,smoothness_se:.009407,compactness_se:.07056,concavity_se:.06899,concave_points_se:.01848,symmetry_se:.017,fractal_dimension_se:.006113,radius_worst:17.67,texture_worst:29.51,perimeter_worst:119.1,area_worst:959.5,smoothness_worst:.164,compactness_worst:.6247,concavity_worst:.6922,concave_points_worst:.1785,symmetry_worst:.2844,fractal_dimension_worst:.1132,"":""},{id:859196,diagnosis:"B",radius_mean:9.173,texture_mean:13.86,perimeter_mean:59.2,area_mean:260.9,smoothness_mean:.07721,compactness_mean:.08751,concavity_mean:.05988,concave_points_mean:.0218,symmetry_mean:.2341,fractal_dimension_mean:.06963,radius_se:.4098,texture_se:2.265,perimeter_se:2.608,area_se:23.52,smoothness_se:.008738,compactness_se:.03938,concavity_se:.04312,concave_points_se:.0156,symmetry_se:.04192,fractal_dimension_se:.005822,radius_worst:10.01,texture_worst:19.23,perimeter_worst:65.59,area_worst:310.1,smoothness_worst:.09836,compactness_worst:.1678,concavity_worst:.1397,concave_points_worst:.05087,symmetry_worst:.3282,fractal_dimension_worst:.0849,"":""},{id:85922302,diagnosis:"M",radius_mean:12.68,texture_mean:23.84,perimeter_mean:82.69,area_mean:499,smoothness_mean:.1122,compactness_mean:.1262,concavity_mean:.1128,concave_points_mean:.06873,symmetry_mean:.1905,fractal_dimension_mean:.0659,radius_se:.4255,texture_se:1.178,perimeter_se:2.927,area_se:36.46,smoothness_se:.007781,compactness_se:.02648,concavity_se:.02973,concave_points_se:.0129,symmetry_se:.01635,fractal_dimension_se:.003601,radius_worst:17.09,texture_worst:33.47,perimeter_worst:111.8,area_worst:888.3,smoothness_worst:.1851,compactness_worst:.4061,concavity_worst:.4024,concave_points_worst:.1716,symmetry_worst:.3383,fractal_dimension_worst:.1031,"":""},{id:859283,diagnosis:"M",radius_mean:14.78,texture_mean:23.94,perimeter_mean:97.4,area_mean:668.3,smoothness_mean:.1172,compactness_mean:.1479,concavity_mean:.1267,concave_points_mean:.09029,symmetry_mean:.1953,fractal_dimension_mean:.06654,radius_se:.3577,texture_se:1.281,perimeter_se:2.45,area_se:35.24,smoothness_se:.006703,compactness_se:.0231,concavity_se:.02315,concave_points_se:.01184,symmetry_se:.019,fractal_dimension_se:.003224,radius_worst:17.31,texture_worst:33.39,perimeter_worst:114.6,area_worst:925.1,smoothness_worst:.1648,compactness_worst:.3416,concavity_worst:.3024,concave_points_worst:.1614,symmetry_worst:.3321,fractal_dimension_worst:.08911,"":""},{id:859464,diagnosis:"B",radius_mean:9.465,texture_mean:21.01,perimeter_mean:60.11,area_mean:269.4,smoothness_mean:.1044,compactness_mean:.07773,concavity_mean:.02172,concave_points_mean:.01504,symmetry_mean:.1717,fractal_dimension_mean:.06899,radius_se:.2351,texture_se:2.011,perimeter_se:1.66,area_se:14.2,smoothness_se:.01052,compactness_se:.01755,concavity_se:.01714,concave_points_se:.009333,symmetry_se:.02279,fractal_dimension_se:.004237,radius_worst:10.41,texture_worst:31.56,perimeter_worst:67.03,area_worst:330.7,smoothness_worst:.1548,compactness_worst:.1664,concavity_worst:.09412,concave_points_worst:.06517,symmetry_worst:.2878,fractal_dimension_worst:.09211,"":""},{id:859465,diagnosis:"B",radius_mean:11.31,texture_mean:19.04,perimeter_mean:71.8,area_mean:394.1,smoothness_mean:.08139,compactness_mean:.04701,concavity_mean:.03709,concave_points_mean:.0223,symmetry_mean:.1516,fractal_dimension_mean:.05667,radius_se:.2727,texture_se:.9429,perimeter_se:1.831,area_se:18.15,smoothness_se:.009282,compactness_se:.009216,concavity_se:.02063,concave_points_se:.008965,symmetry_se:.02183,fractal_dimension_se:.002146,radius_worst:12.33,texture_worst:23.84,perimeter_worst:78,area_worst:466.7,smoothness_worst:.129,compactness_worst:.09148,concavity_worst:.1444,concave_points_worst:.06961,symmetry_worst:.24,fractal_dimension_worst:.06641,"":""},{id:859471,diagnosis:"B",radius_mean:9.029,texture_mean:17.33,perimeter_mean:58.79,area_mean:250.5,smoothness_mean:.1066,compactness_mean:.1413,concavity_mean:.313,concave_points_mean:.04375,symmetry_mean:.2111,fractal_dimension_mean:.08046,radius_se:.3274,texture_se:1.194,perimeter_se:1.885,area_se:17.67,smoothness_se:.009549,compactness_se:.08606,concavity_se:.3038,concave_points_se:.03322,symmetry_se:.04197,fractal_dimension_se:.009559,radius_worst:10.31,texture_worst:22.65,perimeter_worst:65.5,area_worst:324.7,smoothness_worst:.1482,compactness_worst:.4365,concavity_worst:1.252,concave_points_worst:.175,symmetry_worst:.4228,fractal_dimension_worst:.1175,"":""},{id:859487,diagnosis:"B",radius_mean:12.78,texture_mean:16.49,perimeter_mean:81.37,area_mean:502.5,smoothness_mean:.09831,compactness_mean:.05234,concavity_mean:.03653,concave_points_mean:.02864,symmetry_mean:.159,fractal_dimension_mean:.05653,radius_se:.2368,texture_se:.8732,perimeter_se:1.471,area_se:18.33,smoothness_se:.007962,compactness_se:.005612,concavity_se:.01585,concave_points_se:.008662,symmetry_se:.02254,fractal_dimension_se:.001906,radius_worst:13.46,texture_worst:19.76,perimeter_worst:85.67,area_worst:554.9,smoothness_worst:.1296,compactness_worst:.07061,concavity_worst:.1039,concave_points_worst:.05882,symmetry_worst:.2383,fractal_dimension_worst:.0641,"":""},{id:859575,diagnosis:"M",radius_mean:18.94,texture_mean:21.31,perimeter_mean:123.6,area_mean:1130,smoothness_mean:.09009,compactness_mean:.1029,concavity_mean:.108,concave_points_mean:.07951,symmetry_mean:.1582,fractal_dimension_mean:.05461,radius_se:.7888,texture_se:.7975,perimeter_se:5.486,area_se:96.05,smoothness_se:.004444,compactness_se:.01652,concavity_se:.02269,concave_points_se:.0137,symmetry_se:.01386,fractal_dimension_se:.001698,radius_worst:24.86,texture_worst:26.58,perimeter_worst:165.9,area_worst:1866,smoothness_worst:.1193,compactness_worst:.2336,concavity_worst:.2687,concave_points_worst:.1789,symmetry_worst:.2551,fractal_dimension_worst:.06589,"":""},{id:859711,diagnosis:"B",radius_mean:8.888,texture_mean:14.64,perimeter_mean:58.79,area_mean:244,smoothness_mean:.09783,compactness_mean:.1531,concavity_mean:.08606,concave_points_mean:.02872,symmetry_mean:.1902,fractal_dimension_mean:.0898,radius_se:.5262,texture_se:.8522,perimeter_se:3.168,area_se:25.44,smoothness_se:.01721,compactness_se:.09368,concavity_se:.05671,concave_points_se:.01766,symmetry_se:.02541,fractal_dimension_se:.02193,radius_worst:9.733,texture_worst:15.67,perimeter_worst:62.56,area_worst:284.4,smoothness_worst:.1207,compactness_worst:.2436,concavity_worst:.1434,concave_points_worst:.04786,symmetry_worst:.2254,fractal_dimension_worst:.1084,"":""},{id:859717,diagnosis:"M",radius_mean:17.2,texture_mean:24.52,perimeter_mean:114.2,area_mean:929.4,smoothness_mean:.1071,compactness_mean:.183,concavity_mean:.1692,concave_points_mean:.07944,symmetry_mean:.1927,fractal_dimension_mean:.06487,radius_se:.5907,texture_se:1.041,perimeter_se:3.705,area_se:69.47,smoothness_se:.00582,compactness_se:.05616,concavity_se:.04252,concave_points_se:.01127,symmetry_se:.01527,fractal_dimension_se:.006299,radius_worst:23.32,texture_worst:33.82,perimeter_worst:151.6,area_worst:1681,smoothness_worst:.1585,compactness_worst:.7394,concavity_worst:.6566,concave_points_worst:.1899,symmetry_worst:.3313,fractal_dimension_worst:.1339,"":""},{id:859983,diagnosis:"M",radius_mean:13.8,texture_mean:15.79,perimeter_mean:90.43,area_mean:584.1,smoothness_mean:.1007,compactness_mean:.128,concavity_mean:.07789,concave_points_mean:.05069,symmetry_mean:.1662,fractal_dimension_mean:.06566,radius_se:.2787,texture_se:.6205,perimeter_se:1.957,area_se:23.35,smoothness_se:.004717,compactness_se:.02065,concavity_se:.01759,concave_points_se:.009206,symmetry_se:.0122,fractal_dimension_se:.00313,radius_worst:16.57,texture_worst:20.86,perimeter_worst:110.3,area_worst:812.4,smoothness_worst:.1411,compactness_worst:.3542,concavity_worst:.2779,concave_points_worst:.1383,symmetry_worst:.2589,fractal_dimension_worst:.103,"":""},{id:8610175,diagnosis:"B",radius_mean:12.31,texture_mean:16.52,perimeter_mean:79.19,area_mean:470.9,smoothness_mean:.09172,compactness_mean:.06829,concavity_mean:.03372,concave_points_mean:.02272,symmetry_mean:.172,fractal_dimension_mean:.05914,radius_se:.2505,texture_se:1.025,perimeter_se:1.74,area_se:19.68,smoothness_se:.004854,compactness_se:.01819,concavity_se:.01826,concave_points_se:.007965,symmetry_se:.01386,fractal_dimension_se:.002304,radius_worst:14.11,texture_worst:23.21,perimeter_worst:89.71,area_worst:611.1,smoothness_worst:.1176,compactness_worst:.1843,concavity_worst:.1703,concave_points_worst:.0866,symmetry_worst:.2618,fractal_dimension_worst:.07609,"":""},{id:8610404,diagnosis:"M",radius_mean:16.07,texture_mean:19.65,perimeter_mean:104.1,area_mean:817.7,smoothness_mean:.09168,compactness_mean:.08424,concavity_mean:.09769,concave_points_mean:.06638,symmetry_mean:.1798,fractal_dimension_mean:.05391,radius_se:.7474,texture_se:1.016,perimeter_se:5.029,area_se:79.25,smoothness_se:.01082,compactness_se:.02203,concavity_se:.035,concave_points_se:.01809,symmetry_se:.0155,fractal_dimension_se:.001948,radius_worst:19.77,texture_worst:24.56,perimeter_worst:128.8,area_worst:1223,smoothness_worst:.15,compactness_worst:.2045,concavity_worst:.2829,concave_points_worst:.152,symmetry_worst:.265,fractal_dimension_worst:.06387,"":""},{id:8610629,diagnosis:"B",radius_mean:13.53,texture_mean:10.94,perimeter_mean:87.91,area_mean:559.2,smoothness_mean:.1291,compactness_mean:.1047,concavity_mean:.06877,concave_points_mean:.06556,symmetry_mean:.2403,fractal_dimension_mean:.06641,radius_se:.4101,texture_se:1.014,perimeter_se:2.652,area_se:32.65,smoothness_se:.0134,compactness_se:.02839,concavity_se:.01162,concave_points_se:.008239,symmetry_se:.02572,fractal_dimension_se:.006164,radius_worst:14.08,texture_worst:12.49,perimeter_worst:91.36,area_worst:605.5,smoothness_worst:.1451,compactness_worst:.1379,concavity_worst:.08539,concave_points_worst:.07407,symmetry_worst:.271,fractal_dimension_worst:.07191,"":""},{id:8610637,diagnosis:"M",radius_mean:18.05,texture_mean:16.15,perimeter_mean:120.2,area_mean:1006,smoothness_mean:.1065,compactness_mean:.2146,concavity_mean:.1684,concave_points_mean:.108,symmetry_mean:.2152,fractal_dimension_mean:.06673,radius_se:.9806,texture_se:.5505,perimeter_se:6.311,area_se:134.8,smoothness_se:.00794,compactness_se:.05839,concavity_se:.04658,concave_points_se:.0207,symmetry_se:.02591,fractal_dimension_se:.007054,radius_worst:22.39,texture_worst:18.91,perimeter_worst:150.1,area_worst:1610,smoothness_worst:.1478,compactness_worst:.5634,concavity_worst:.3786,concave_points_worst:.2102,symmetry_worst:.3751,fractal_dimension_worst:.1108,"":""},{id:8610862,diagnosis:"M",radius_mean:20.18,texture_mean:23.97,perimeter_mean:143.7,area_mean:1245,smoothness_mean:.1286,compactness_mean:.3454,concavity_mean:.3754,concave_points_mean:.1604,symmetry_mean:.2906,fractal_dimension_mean:.08142,radius_se:.9317,texture_se:1.885,perimeter_se:8.649,area_se:116.4,smoothness_se:.01038,compactness_se:.06835,concavity_se:.1091,concave_points_se:.02593,symmetry_se:.07895,fractal_dimension_se:.005987,radius_worst:23.37,texture_worst:31.72,perimeter_worst:170.3,area_worst:1623,smoothness_worst:.1639,compactness_worst:.6164,concavity_worst:.7681,concave_points_worst:.2508,symmetry_worst:.544,fractal_dimension_worst:.09964,"":""},{id:8610908,diagnosis:"B",radius_mean:12.86,texture_mean:18,perimeter_mean:83.19,area_mean:506.3,smoothness_mean:.09934,compactness_mean:.09546,concavity_mean:.03889,concave_points_mean:.02315,symmetry_mean:.1718,fractal_dimension_mean:.05997,radius_se:.2655,texture_se:1.095,perimeter_se:1.778,area_se:20.35,smoothness_se:.005293,compactness_se:.01661,concavity_se:.02071,concave_points_se:.008179,symmetry_se:.01748,fractal_dimension_se:.002848,radius_worst:14.24,texture_worst:24.82,perimeter_worst:91.88,area_worst:622.1,smoothness_worst:.1289,compactness_worst:.2141,concavity_worst:.1731,concave_points_worst:.07926,symmetry_worst:.2779,fractal_dimension_worst:.07918,"":""},{id:861103,diagnosis:"B",radius_mean:11.45,texture_mean:20.97,perimeter_mean:73.81,area_mean:401.5,smoothness_mean:.1102,compactness_mean:.09362,concavity_mean:.04591,concave_points_mean:.02233,symmetry_mean:.1842,fractal_dimension_mean:.07005,radius_se:.3251,texture_se:2.174,perimeter_se:2.077,area_se:24.62,smoothness_se:.01037,compactness_se:.01706,concavity_se:.02586,concave_points_se:.007506,symmetry_se:.01816,fractal_dimension_se:.003976,radius_worst:13.11,texture_worst:32.16,perimeter_worst:84.53,area_worst:525.1,smoothness_worst:.1557,compactness_worst:.1676,concavity_worst:.1755,concave_points_worst:.06127,symmetry_worst:.2762,fractal_dimension_worst:.08851,"":""},{id:8611161,diagnosis:"B",radius_mean:13.34,texture_mean:15.86,perimeter_mean:86.49,area_mean:520,smoothness_mean:.1078,compactness_mean:.1535,concavity_mean:.1169,concave_points_mean:.06987,symmetry_mean:.1942,fractal_dimension_mean:.06902,radius_se:.286,texture_se:1.016,perimeter_se:1.535,area_se:12.96,smoothness_se:.006794,compactness_se:.03575,concavity_se:.0398,concave_points_se:.01383,symmetry_se:.02134,fractal_dimension_se:.004603,radius_worst:15.53,texture_worst:23.19,perimeter_worst:96.66,area_worst:614.9,smoothness_worst:.1536,compactness_worst:.4791,concavity_worst:.4858,concave_points_worst:.1708,symmetry_worst:.3527,fractal_dimension_worst:.1016,"":""},{id:8611555,diagnosis:"M",radius_mean:25.22,texture_mean:24.91,perimeter_mean:171.5,area_mean:1878,smoothness_mean:.1063,compactness_mean:.2665,concavity_mean:.3339,concave_points_mean:.1845,symmetry_mean:.1829,fractal_dimension_mean:.06782,radius_se:.8973,texture_se:1.474,perimeter_se:7.382,area_se:120,smoothness_se:.008166,compactness_se:.05693,concavity_se:.0573,concave_points_se:.0203,symmetry_se:.01065,fractal_dimension_se:.005893,radius_worst:30,texture_worst:33.62,perimeter_worst:211.7,area_worst:2562,smoothness_worst:.1573,compactness_worst:.6076,concavity_worst:.6476,concave_points_worst:.2867,symmetry_worst:.2355,fractal_dimension_worst:.1051,"":""},{id:8611792,diagnosis:"M",radius_mean:19.1,texture_mean:26.29,perimeter_mean:129.1,area_mean:1132,smoothness_mean:.1215,compactness_mean:.1791,concavity_mean:.1937,concave_points_mean:.1469,symmetry_mean:.1634,fractal_dimension_mean:.07224,radius_se:.519,texture_se:2.91,perimeter_se:5.801,area_se:67.1,smoothness_se:.007545,compactness_se:.0605,concavity_se:.02134,concave_points_se:.01843,symmetry_se:.03056,fractal_dimension_se:.01039,radius_worst:20.33,texture_worst:32.72,perimeter_worst:141.3,area_worst:1298,smoothness_worst:.1392,compactness_worst:.2817,concavity_worst:.2432,concave_points_worst:.1841,symmetry_worst:.2311,fractal_dimension_worst:.09203,"":""},{id:8612080,diagnosis:"B",radius_mean:12,texture_mean:15.65,perimeter_mean:76.95,area_mean:443.3,smoothness_mean:.09723,compactness_mean:.07165,concavity_mean:.04151,concave_points_mean:.01863,symmetry_mean:.2079,fractal_dimension_mean:.05968,radius_se:.2271,texture_se:1.255,perimeter_se:1.441,area_se:16.16,smoothness_se:.005969,compactness_se:.01812,concavity_se:.02007,concave_points_se:.007027,symmetry_se:.01972,fractal_dimension_se:.002607,radius_worst:13.67,texture_worst:24.9,perimeter_worst:87.78,area_worst:567.9,smoothness_worst:.1377,compactness_worst:.2003,concavity_worst:.2267,concave_points_worst:.07632,symmetry_worst:.3379,fractal_dimension_worst:.07924,"":""},{id:8612399,diagnosis:"M",radius_mean:18.46,texture_mean:18.52,perimeter_mean:121.1,area_mean:1075,smoothness_mean:.09874,compactness_mean:.1053,concavity_mean:.1335,concave_points_mean:.08795,symmetry_mean:.2132,fractal_dimension_mean:.06022,radius_se:.6997,texture_se:1.475,perimeter_se:4.782,area_se:80.6,smoothness_se:.006471,compactness_se:.01649,concavity_se:.02806,concave_points_se:.0142,symmetry_se:.0237,fractal_dimension_se:.003755,radius_worst:22.93,texture_worst:27.68,perimeter_worst:152.2,area_worst:1603,smoothness_worst:.1398,compactness_worst:.2089,concavity_worst:.3157,concave_points_worst:.1642,symmetry_worst:.3695,fractal_dimension_worst:.08579,"":""},{id:86135501,diagnosis:"M",radius_mean:14.48,texture_mean:21.46,perimeter_mean:94.25,area_mean:648.2,smoothness_mean:.09444,compactness_mean:.09947,concavity_mean:.1204,concave_points_mean:.04938,symmetry_mean:.2075,fractal_dimension_mean:.05636,radius_se:.4204,texture_se:2.22,perimeter_se:3.301,area_se:38.87,smoothness_se:.009369,compactness_se:.02983,concavity_se:.05371,concave_points_se:.01761,symmetry_se:.02418,fractal_dimension_se:.003249,radius_worst:16.21,texture_worst:29.25,perimeter_worst:108.4,area_worst:808.9,smoothness_worst:.1306,compactness_worst:.1976,concavity_worst:.3349,concave_points_worst:.1225,symmetry_worst:.302,fractal_dimension_worst:.06846,"":""},{id:86135502,diagnosis:"M",radius_mean:19.02,texture_mean:24.59,perimeter_mean:122,area_mean:1076,smoothness_mean:.09029,compactness_mean:.1206,concavity_mean:.1468,concave_points_mean:.08271,symmetry_mean:.1953,fractal_dimension_mean:.05629,radius_se:.5495,texture_se:.6636,perimeter_se:3.055,area_se:57.65,smoothness_se:.003872,compactness_se:.01842,concavity_se:.0371,concave_points_se:.012,symmetry_se:.01964,fractal_dimension_se:.003337,radius_worst:24.56,texture_worst:30.41,perimeter_worst:152.9,area_worst:1623,smoothness_worst:.1249,compactness_worst:.3206,concavity_worst:.5755,concave_points_worst:.1956,symmetry_worst:.3956,fractal_dimension_worst:.09288,"":""},{id:861597,diagnosis:"B",radius_mean:12.36,texture_mean:21.8,perimeter_mean:79.78,area_mean:466.1,smoothness_mean:.08772,compactness_mean:.09445,concavity_mean:.06015,concave_points_mean:.03745,symmetry_mean:.193,fractal_dimension_mean:.06404,radius_se:.2978,texture_se:1.502,perimeter_se:2.203,area_se:20.95,smoothness_se:.007112,compactness_se:.02493,concavity_se:.02703,concave_points_se:.01293,symmetry_se:.01958,fractal_dimension_se:.004463,radius_worst:13.83,texture_worst:30.5,perimeter_worst:91.46,area_worst:574.7,smoothness_worst:.1304,compactness_worst:.2463,concavity_worst:.2434,concave_points_worst:.1205,symmetry_worst:.2972,fractal_dimension_worst:.09261,"":""},{id:861598,diagnosis:"B",radius_mean:14.64,texture_mean:15.24,perimeter_mean:95.77,area_mean:651.9,smoothness_mean:.1132,compactness_mean:.1339,concavity_mean:.09966,concave_points_mean:.07064,symmetry_mean:.2116,fractal_dimension_mean:.06346,radius_se:.5115,texture_se:.7372,perimeter_se:3.814,area_se:42.76,smoothness_se:.005508,compactness_se:.04412,concavity_se:.04436,concave_points_se:.01623,symmetry_se:.02427,fractal_dimension_se:.004841,radius_worst:16.34,texture_worst:18.24,perimeter_worst:109.4,area_worst:803.6,smoothness_worst:.1277,compactness_worst:.3089,concavity_worst:.2604,concave_points_worst:.1397,symmetry_worst:.3151,fractal_dimension_worst:.08473,"":""},{id:861648,diagnosis:"B",radius_mean:14.62,texture_mean:24.02,perimeter_mean:94.57,area_mean:662.7,smoothness_mean:.08974,compactness_mean:.08606,concavity_mean:.03102,concave_points_mean:.02957,symmetry_mean:.1685,fractal_dimension_mean:.05866,radius_se:.3721,texture_se:1.111,perimeter_se:2.279,area_se:33.76,smoothness_se:.004868,compactness_se:.01818,concavity_se:.01121,concave_points_se:.008606,symmetry_se:.02085,fractal_dimension_se:.002893,radius_worst:16.11,texture_worst:29.11,perimeter_worst:102.9,area_worst:803.7,smoothness_worst:.1115,compactness_worst:.1766,concavity_worst:.09189,concave_points_worst:.06946,symmetry_worst:.2522,fractal_dimension_worst:.07246,"":""},{id:861799,diagnosis:"M",radius_mean:15.37,texture_mean:22.76,perimeter_mean:100.2,area_mean:728.2,smoothness_mean:.092,compactness_mean:.1036,concavity_mean:.1122,concave_points_mean:.07483,symmetry_mean:.1717,fractal_dimension_mean:.06097,radius_se:.3129,texture_se:.8413,perimeter_se:2.075,area_se:29.44,smoothness_se:.009882,compactness_se:.02444,concavity_se:.04531,concave_points_se:.01763,symmetry_se:.02471,fractal_dimension_se:.002142,radius_worst:16.43,texture_worst:25.84,perimeter_worst:107.5,area_worst:830.9,smoothness_worst:.1257,compactness_worst:.1997,concavity_worst:.2846,concave_points_worst:.1476,symmetry_worst:.2556,fractal_dimension_worst:.06828,"":""},{id:861853,diagnosis:"B",radius_mean:13.27,texture_mean:14.76,perimeter_mean:84.74,area_mean:551.7,smoothness_mean:.07355,compactness_mean:.05055,concavity_mean:.03261,concave_points_mean:.02648,symmetry_mean:.1386,fractal_dimension_mean:.05318,radius_se:.4057,texture_se:1.153,perimeter_se:2.701,area_se:36.35,smoothness_se:.004481,compactness_se:.01038,concavity_se:.01358,concave_points_se:.01082,symmetry_se:.01069,fractal_dimension_se:.001435,radius_worst:16.36,texture_worst:22.35,perimeter_worst:104.5,area_worst:830.6,smoothness_worst:.1006,compactness_worst:.1238,concavity_worst:.135,concave_points_worst:.1001,symmetry_worst:.2027,fractal_dimension_worst:.06206,"":""},{id:862009,diagnosis:"B",radius_mean:13.45,texture_mean:18.3,perimeter_mean:86.6,area_mean:555.1,smoothness_mean:.1022,compactness_mean:.08165,concavity_mean:.03974,concave_points_mean:.0278,symmetry_mean:.1638,fractal_dimension_mean:.0571,radius_se:.295,texture_se:1.373,perimeter_se:2.099,area_se:25.22,smoothness_se:.005884,compactness_se:.01491,concavity_se:.01872,concave_points_se:.009366,symmetry_se:.01884,fractal_dimension_se:.001817,radius_worst:15.1,texture_worst:25.94,perimeter_worst:97.59,area_worst:699.4,smoothness_worst:.1339,compactness_worst:.1751,concavity_worst:.1381,concave_points_worst:.07911,symmetry_worst:.2678,fractal_dimension_worst:.06603,"":""},{id:862028,diagnosis:"M",radius_mean:15.06,texture_mean:19.83,perimeter_mean:100.3,area_mean:705.6,smoothness_mean:.1039,compactness_mean:.1553,concavity_mean:.17,concave_points_mean:.08815,symmetry_mean:.1855,fractal_dimension_mean:.06284,radius_se:.4768,texture_se:.9644,perimeter_se:3.706,area_se:47.14,smoothness_se:.00925,compactness_se:.03715,concavity_se:.04867,concave_points_se:.01851,symmetry_se:.01498,fractal_dimension_se:.00352,radius_worst:18.23,texture_worst:24.23,perimeter_worst:123.5,area_worst:1025,smoothness_worst:.1551,compactness_worst:.4203,concavity_worst:.5203,concave_points_worst:.2115,symmetry_worst:.2834,fractal_dimension_worst:.08234,"":""},{id:86208,diagnosis:"M",radius_mean:20.26,texture_mean:23.03,perimeter_mean:132.4,area_mean:1264,smoothness_mean:.09078,compactness_mean:.1313,concavity_mean:.1465,concave_points_mean:.08683,symmetry_mean:.2095,fractal_dimension_mean:.05649,radius_se:.7576,texture_se:1.509,perimeter_se:4.554,area_se:87.87,smoothness_se:.006016,compactness_se:.03482,concavity_se:.04232,concave_points_se:.01269,symmetry_se:.02657,fractal_dimension_se:.004411,radius_worst:24.22,texture_worst:31.59,perimeter_worst:156.1,area_worst:1750,smoothness_worst:.119,compactness_worst:.3539,concavity_worst:.4098,concave_points_worst:.1573,symmetry_worst:.3689,fractal_dimension_worst:.08368,"":""},{id:86211,diagnosis:"B",radius_mean:12.18,texture_mean:17.84,perimeter_mean:77.79,area_mean:451.1,smoothness_mean:.1045,compactness_mean:.07057,concavity_mean:.0249,concave_points_mean:.02941,symmetry_mean:.19,fractal_dimension_mean:.06635,radius_se:.3661,texture_se:1.511,perimeter_se:2.41,area_se:24.44,smoothness_se:.005433,compactness_se:.01179,concavity_se:.01131,concave_points_se:.01519,symmetry_se:.0222,fractal_dimension_se:.003408,radius_worst:12.83,texture_worst:20.92,perimeter_worst:82.14,area_worst:495.2,smoothness_worst:.114,compactness_worst:.09358,concavity_worst:.0498,concave_points_worst:.05882,symmetry_worst:.2227,fractal_dimension_worst:.07376,"":""},{id:862261,diagnosis:"B",radius_mean:9.787,texture_mean:19.94,perimeter_mean:62.11,area_mean:294.5,smoothness_mean:.1024,compactness_mean:.05301,concavity_mean:.006829,concave_points_mean:.007937,symmetry_mean:.135,fractal_dimension_mean:.0689,radius_se:.335,texture_se:2.043,perimeter_se:2.132,area_se:20.05,smoothness_se:.01113,compactness_se:.01463,concavity_se:.005308,concave_points_se:.00525,symmetry_se:.01801,fractal_dimension_se:.005667,radius_worst:10.92,texture_worst:26.29,perimeter_worst:68.81,area_worst:366.1,smoothness_worst:.1316,compactness_worst:.09473,concavity_worst:.02049,concave_points_worst:.02381,symmetry_worst:.1934,fractal_dimension_worst:.08988,"":""},{id:862485,diagnosis:"B",radius_mean:11.6,texture_mean:12.84,perimeter_mean:74.34,area_mean:412.6,smoothness_mean:.08983,compactness_mean:.07525,concavity_mean:.04196,concave_points_mean:.0335,symmetry_mean:.162,fractal_dimension_mean:.06582,radius_se:.2315,texture_se:.5391,perimeter_se:1.475,area_se:15.75,smoothness_se:.006153,compactness_se:.0133,concavity_se:.01693,concave_points_se:.006884,symmetry_se:.01651,fractal_dimension_se:.002551,radius_worst:13.06,texture_worst:17.16,perimeter_worst:82.96,area_worst:512.5,smoothness_worst:.1431,compactness_worst:.1851,concavity_worst:.1922,concave_points_worst:.08449,symmetry_worst:.2772,fractal_dimension_worst:.08756,"":""},{id:862548,diagnosis:"M",radius_mean:14.42,texture_mean:19.77,perimeter_mean:94.48,area_mean:642.5,smoothness_mean:.09752,compactness_mean:.1141,concavity_mean:.09388,concave_points_mean:.05839,symmetry_mean:.1879,fractal_dimension_mean:.0639,radius_se:.2895,texture_se:1.851,perimeter_se:2.376,area_se:26.85,smoothness_se:.008005,compactness_se:.02895,concavity_se:.03321,concave_points_se:.01424,symmetry_se:.01462,fractal_dimension_se:.004452,radius_worst:16.33,texture_worst:30.86,perimeter_worst:109.5,area_worst:826.4,smoothness_worst:.1431,compactness_worst:.3026,concavity_worst:.3194,concave_points_worst:.1565,symmetry_worst:.2718,fractal_dimension_worst:.09353,"":""},{id:862717,diagnosis:"M",radius_mean:13.61,texture_mean:24.98,perimeter_mean:88.05,area_mean:582.7,smoothness_mean:.09488,compactness_mean:.08511,concavity_mean:.08625,concave_points_mean:.04489,symmetry_mean:.1609,fractal_dimension_mean:.05871,radius_se:.4565,texture_se:1.29,perimeter_se:2.861,area_se:43.14,smoothness_se:.005872,compactness_se:.01488,concavity_se:.02647,concave_points_se:.009921,symmetry_se:.01465,fractal_dimension_se:.002355,radius_worst:16.99,texture_worst:35.27,perimeter_worst:108.6,area_worst:906.5,smoothness_worst:.1265,compactness_worst:.1943,concavity_worst:.3169,concave_points_worst:.1184,symmetry_worst:.2651,fractal_dimension_worst:.07397,"":""},{id:862722,diagnosis:"B",radius_mean:6.981,texture_mean:13.43,perimeter_mean:43.79,area_mean:143.5,smoothness_mean:.117,compactness_mean:.07568,concavity_mean:0,concave_points_mean:0,symmetry_mean:.193,fractal_dimension_mean:.07818,radius_se:.2241,texture_se:1.508,perimeter_se:1.553,area_se:9.833,smoothness_se:.01019,compactness_se:.01084,concavity_se:0,concave_points_se:0,symmetry_se:.02659,fractal_dimension_se:.0041,radius_worst:7.93,texture_worst:19.54,perimeter_worst:50.41,area_worst:185.2,smoothness_worst:.1584,compactness_worst:.1202,concavity_worst:0,concave_points_worst:0,symmetry_worst:.2932,fractal_dimension_worst:.09382,"":""},{id:862965,diagnosis:"B",radius_mean:12.18,texture_mean:20.52,perimeter_mean:77.22,area_mean:458.7,smoothness_mean:.08013,compactness_mean:.04038,concavity_mean:.02383,concave_points_mean:.0177,symmetry_mean:.1739,fractal_dimension_mean:.05677,radius_se:.1924,texture_se:1.571,perimeter_se:1.183,area_se:14.68,smoothness_se:.00508,compactness_se:.006098,concavity_se:.01069,concave_points_se:.006797,symmetry_se:.01447,fractal_dimension_se:.001532,radius_worst:13.34,texture_worst:32.84,perimeter_worst:84.58,area_worst:547.8,smoothness_worst:.1123,compactness_worst:.08862,concavity_worst:.1145,concave_points_worst:.07431,symmetry_worst:.2694,fractal_dimension_worst:.06878,"":""},{id:862980,diagnosis:"B",radius_mean:9.876,texture_mean:19.4,perimeter_mean:63.95,area_mean:298.3,smoothness_mean:.1005,compactness_mean:.09697,concavity_mean:.06154,concave_points_mean:.03029,symmetry_mean:.1945,fractal_dimension_mean:.06322,radius_se:.1803,texture_se:1.222,perimeter_se:1.528,area_se:11.77,smoothness_se:.009058,compactness_se:.02196,concavity_se:.03029,concave_points_se:.01112,symmetry_se:.01609,fractal_dimension_se:.00357,radius_worst:10.76,texture_worst:26.83,perimeter_worst:72.22,area_worst:361.2,smoothness_worst:.1559,compactness_worst:.2302,concavity_worst:.2644,concave_points_worst:.09749,symmetry_worst:.2622,fractal_dimension_worst:.0849,"":""},{id:862989,diagnosis:"B",radius_mean:10.49,texture_mean:19.29,perimeter_mean:67.41,area_mean:336.1,smoothness_mean:.09989,compactness_mean:.08578,concavity_mean:.02995,concave_points_mean:.01201,symmetry_mean:.2217,fractal_dimension_mean:.06481,radius_se:.355,texture_se:1.534,perimeter_se:2.302,area_se:23.13,smoothness_se:.007595,compactness_se:.02219,concavity_se:.0288,concave_points_se:.008614,symmetry_se:.0271,fractal_dimension_se:.003451,radius_worst:11.54,texture_worst:23.31,perimeter_worst:74.22,area_worst:402.8,smoothness_worst:.1219,compactness_worst:.1486,concavity_worst:.07987,concave_points_worst:.03203,symmetry_worst:.2826,fractal_dimension_worst:.07552,"":""},{id:863030,diagnosis:"M",radius_mean:13.11,texture_mean:15.56,perimeter_mean:87.21,area_mean:530.2,smoothness_mean:.1398,compactness_mean:.1765,concavity_mean:.2071,concave_points_mean:.09601,symmetry_mean:.1925,fractal_dimension_mean:.07692,radius_se:.3908,texture_se:.9238,perimeter_se:2.41,area_se:34.66,smoothness_se:.007162,compactness_se:.02912,concavity_se:.05473,concave_points_se:.01388,symmetry_se:.01547,fractal_dimension_se:.007098,radius_worst:16.31,texture_worst:22.4,perimeter_worst:106.4,area_worst:827.2,smoothness_worst:.1862,compactness_worst:.4099,concavity_worst:.6376,concave_points_worst:.1986,symmetry_worst:.3147,fractal_dimension_worst:.1405,"":""},{id:863031,diagnosis:"B",radius_mean:11.64,texture_mean:18.33,perimeter_mean:75.17,area_mean:412.5,smoothness_mean:.1142,compactness_mean:.1017,concavity_mean:.0707,concave_points_mean:.03485,symmetry_mean:.1801,fractal_dimension_mean:.0652,radius_se:.306,texture_se:1.657,perimeter_se:2.155,area_se:20.62,smoothness_se:.00854,compactness_se:.0231,concavity_se:.02945,concave_points_se:.01398,symmetry_se:.01565,fractal_dimension_se:.00384,radius_worst:13.14,texture_worst:29.26,perimeter_worst:85.51,area_worst:521.7,smoothness_worst:.1688,compactness_worst:.266,concavity_worst:.2873,concave_points_worst:.1218,symmetry_worst:.2806,fractal_dimension_worst:.09097,"":""},{id:863270,diagnosis:"B",radius_mean:12.36,texture_mean:18.54,perimeter_mean:79.01,area_mean:466.7,smoothness_mean:.08477,compactness_mean:.06815,concavity_mean:.02643,concave_points_mean:.01921,symmetry_mean:.1602,fractal_dimension_mean:.06066,radius_se:.1199,texture_se:.8944,perimeter_se:.8484,area_se:9.227,smoothness_se:.003457,compactness_se:.01047,concavity_se:.01167,concave_points_se:.005558,symmetry_se:.01251,fractal_dimension_se:.001356,radius_worst:13.29,texture_worst:27.49,perimeter_worst:85.56,area_worst:544.1,smoothness_worst:.1184,compactness_worst:.1963,concavity_worst:.1937,concave_points_worst:.08442,symmetry_worst:.2983,fractal_dimension_worst:.07185,"":""},{id:86355,diagnosis:"M",radius_mean:22.27,texture_mean:19.67,perimeter_mean:152.8,area_mean:1509,smoothness_mean:.1326,compactness_mean:.2768,concavity_mean:.4264,concave_points_mean:.1823,symmetry_mean:.2556,fractal_dimension_mean:.07039,radius_se:1.215,texture_se:1.545,perimeter_se:10.05,area_se:170,smoothness_se:.006515,compactness_se:.08668,concavity_se:.104,concave_points_se:.0248,symmetry_se:.03112,fractal_dimension_se:.005037,radius_worst:28.4,texture_worst:28.01,perimeter_worst:206.8,area_worst:2360,smoothness_worst:.1701,compactness_worst:.6997,concavity_worst:.9608,concave_points_worst:.291,symmetry_worst:.4055,fractal_dimension_worst:.09789,"":""},{id:864018,diagnosis:"B",radius_mean:11.34,texture_mean:21.26,perimeter_mean:72.48,area_mean:396.5,smoothness_mean:.08759,compactness_mean:.06575,concavity_mean:.05133,concave_points_mean:.01899,symmetry_mean:.1487,fractal_dimension_mean:.06529,radius_se:.2344,texture_se:.9861,perimeter_se:1.597,area_se:16.41,smoothness_se:.009113,compactness_se:.01557,concavity_se:.02443,concave_points_se:.006435,symmetry_se:.01568,fractal_dimension_se:.002477,radius_worst:13.01,texture_worst:29.15,perimeter_worst:83.99,area_worst:518.1,smoothness_worst:.1699,compactness_worst:.2196,concavity_worst:.312,concave_points_worst:.08278,symmetry_worst:.2829,fractal_dimension_worst:.08832,"":""},{id:864033,diagnosis:"B",radius_mean:9.777,texture_mean:16.99,perimeter_mean:62.5,area_mean:290.2,smoothness_mean:.1037,compactness_mean:.08404,concavity_mean:.04334,concave_points_mean:.01778,symmetry_mean:.1584,fractal_dimension_mean:.07065,radius_se:.403,texture_se:1.424,perimeter_se:2.747,area_se:22.87,smoothness_se:.01385,compactness_se:.02932,concavity_se:.02722,concave_points_se:.01023,symmetry_se:.03281,fractal_dimension_se:.004638,radius_worst:11.05,texture_worst:21.47,perimeter_worst:71.68,area_worst:367,smoothness_worst:.1467,compactness_worst:.1765,concavity_worst:.13,concave_points_worst:.05334,symmetry_worst:.2533,fractal_dimension_worst:.08468,"":""},{id:86408,diagnosis:"B",radius_mean:12.63,texture_mean:20.76,perimeter_mean:82.15,area_mean:480.4,smoothness_mean:.09933,compactness_mean:.1209,concavity_mean:.1065,concave_points_mean:.06021,symmetry_mean:.1735,fractal_dimension_mean:.0707,radius_se:.3424,texture_se:1.803,perimeter_se:2.711,area_se:20.48,smoothness_se:.01291,compactness_se:.04042,concavity_se:.05101,concave_points_se:.02295,symmetry_se:.02144,fractal_dimension_se:.005891,radius_worst:13.33,texture_worst:25.47,perimeter_worst:89,area_worst:527.4,smoothness_worst:.1287,compactness_worst:.225,concavity_worst:.2216,concave_points_worst:.1105,symmetry_worst:.2226,fractal_dimension_worst:.08486,"":""},{id:86409,diagnosis:"B",radius_mean:14.26,texture_mean:19.65,perimeter_mean:97.83,area_mean:629.9,smoothness_mean:.07837,compactness_mean:.2233,concavity_mean:.3003,concave_points_mean:.07798,symmetry_mean:.1704,fractal_dimension_mean:.07769,radius_se:.3628,texture_se:1.49,perimeter_se:3.399,area_se:29.25,smoothness_se:.005298,compactness_se:.07446,concavity_se:.1435,concave_points_se:.02292,symmetry_se:.02566,fractal_dimension_se:.01298,radius_worst:15.3,texture_worst:23.73,perimeter_worst:107,area_worst:709,smoothness_worst:.08949,compactness_worst:.4193,concavity_worst:.6783,concave_points_worst:.1505,symmetry_worst:.2398,fractal_dimension_worst:.1082,"":""},{id:864292,diagnosis:"B",radius_mean:10.51,texture_mean:20.19,perimeter_mean:68.64,area_mean:334.2,smoothness_mean:.1122,compactness_mean:.1303,concavity_mean:.06476,concave_points_mean:.03068,symmetry_mean:.1922,fractal_dimension_mean:.07782,radius_se:.3336,texture_se:1.86,perimeter_se:2.041,area_se:19.91,smoothness_se:.01188,compactness_se:.03747,concavity_se:.04591,concave_points_se:.01544,symmetry_se:.02287,fractal_dimension_se:.006792,radius_worst:11.16,texture_worst:22.75,perimeter_worst:72.62,area_worst:374.4,smoothness_worst:.13,compactness_worst:.2049,concavity_worst:.1295,concave_points_worst:.06136,symmetry_worst:.2383,fractal_dimension_worst:.09026,"":""},{id:864496,diagnosis:"B",radius_mean:8.726,texture_mean:15.83,perimeter_mean:55.84,area_mean:230.9,smoothness_mean:.115,compactness_mean:.08201,concavity_mean:.04132,concave_points_mean:.01924,symmetry_mean:.1649,fractal_dimension_mean:.07633,radius_se:.1665,texture_se:.5864,perimeter_se:1.354,area_se:8.966,smoothness_se:.008261,compactness_se:.02213,concavity_se:.03259,concave_points_se:.0104,symmetry_se:.01708,fractal_dimension_se:.003806,radius_worst:9.628,texture_worst:19.62,perimeter_worst:64.48,area_worst:284.4,smoothness_worst:.1724,compactness_worst:.2364,concavity_worst:.2456,concave_points_worst:.105,symmetry_worst:.2926,fractal_dimension_worst:.1017,"":""},{id:864685,diagnosis:"B",radius_mean:11.93,texture_mean:21.53,perimeter_mean:76.53,area_mean:438.6,smoothness_mean:.09768,compactness_mean:.07849,concavity_mean:.03328,concave_points_mean:.02008,symmetry_mean:.1688,fractal_dimension_mean:.06194,radius_se:.3118,texture_se:.9227,perimeter_se:2,area_se:24.79,smoothness_se:.007803,compactness_se:.02507,concavity_se:.01835,concave_points_se:.007711,symmetry_se:.01278,fractal_dimension_se:.003856,radius_worst:13.67,texture_worst:26.15,perimeter_worst:87.54,area_worst:583,smoothness_worst:.15,compactness_worst:.2399,concavity_worst:.1503,concave_points_worst:.07247,symmetry_worst:.2438,fractal_dimension_worst:.08541,"":""},{id:864726,diagnosis:"B",radius_mean:8.95,texture_mean:15.76,perimeter_mean:58.74,area_mean:245.2,smoothness_mean:.09462,compactness_mean:.1243,concavity_mean:.09263,concave_points_mean:.02308,symmetry_mean:.1305,fractal_dimension_mean:.07163,radius_se:.3132,texture_se:.9789,perimeter_se:3.28,area_se:16.94,smoothness_se:.01835,compactness_se:.0676,concavity_se:.09263,concave_points_se:.02308,symmetry_se:.02384,fractal_dimension_se:.005601,radius_worst:9.414,texture_worst:17.07,perimeter_worst:63.34,area_worst:270,smoothness_worst:.1179,compactness_worst:.1879,concavity_worst:.1544,concave_points_worst:.03846,symmetry_worst:.1652,fractal_dimension_worst:.07722,"":""},{id:864729,diagnosis:"M",radius_mean:14.87,texture_mean:16.67,perimeter_mean:98.64,area_mean:682.5,smoothness_mean:.1162,compactness_mean:.1649,concavity_mean:.169,concave_points_mean:.08923,symmetry_mean:.2157,fractal_dimension_mean:.06768,radius_se:.4266,texture_se:.9489,perimeter_se:2.989,area_se:41.18,smoothness_se:.006985,compactness_se:.02563,concavity_se:.03011,concave_points_se:.01271,symmetry_se:.01602,fractal_dimension_se:.003884,radius_worst:18.81,texture_worst:27.37,perimeter_worst:127.1,area_worst:1095,smoothness_worst:.1878,compactness_worst:.448,concavity_worst:.4704,concave_points_worst:.2027,symmetry_worst:.3585,fractal_dimension_worst:.1065,"":""},{id:864877,diagnosis:"M",radius_mean:15.78,texture_mean:22.91,perimeter_mean:105.7,area_mean:782.6,smoothness_mean:.1155,compactness_mean:.1752,concavity_mean:.2133,concave_points_mean:.09479,symmetry_mean:.2096,fractal_dimension_mean:.07331,radius_se:.552,texture_se:1.072,perimeter_se:3.598,area_se:58.63,smoothness_se:.008699,compactness_se:.03976,concavity_se:.0595,concave_points_se:.0139,symmetry_se:.01495,fractal_dimension_se:.005984,radius_worst:20.19,texture_worst:30.5,perimeter_worst:130.3,area_worst:1272,smoothness_worst:.1855,compactness_worst:.4925,concavity_worst:.7356,concave_points_worst:.2034,symmetry_worst:.3274,fractal_dimension_worst:.1252,"":""},{id:865128,diagnosis:"M",radius_mean:17.95,texture_mean:20.01,perimeter_mean:114.2,area_mean:982,smoothness_mean:.08402,compactness_mean:.06722,concavity_mean:.07293,concave_points_mean:.05596,symmetry_mean:.2129,fractal_dimension_mean:.05025,radius_se:.5506,texture_se:1.214,perimeter_se:3.357,area_se:54.04,smoothness_se:.004024,compactness_se:.008422,concavity_se:.02291,concave_points_se:.009863,symmetry_se:.05014,fractal_dimension_se:.001902,radius_worst:20.58,texture_worst:27.83,perimeter_worst:129.2,area_worst:1261,smoothness_worst:.1072,compactness_worst:.1202,concavity_worst:.2249,concave_points_worst:.1185,symmetry_worst:.4882,fractal_dimension_worst:.06111,"":""},{id:865137,diagnosis:"B",radius_mean:11.41,texture_mean:10.82,perimeter_mean:73.34,area_mean:403.3,smoothness_mean:.09373,compactness_mean:.06685,concavity_mean:.03512,concave_points_mean:.02623,symmetry_mean:.1667,fractal_dimension_mean:.06113,radius_se:.1408,texture_se:.4607,perimeter_se:1.103,area_se:10.5,smoothness_se:.00604,compactness_se:.01529,concavity_se:.01514,concave_points_se:.00646,symmetry_se:.01344,fractal_dimension_se:.002206,radius_worst:12.82,texture_worst:15.97,perimeter_worst:83.74,area_worst:510.5,smoothness_worst:.1548,compactness_worst:.239,concavity_worst:.2102,concave_points_worst:.08958,symmetry_worst:.3016,fractal_dimension_worst:.08523,"":""},{id:86517,diagnosis:"M",radius_mean:18.66,texture_mean:17.12,perimeter_mean:121.4,area_mean:1077,smoothness_mean:.1054,compactness_mean:.11,concavity_mean:.1457,concave_points_mean:.08665,symmetry_mean:.1966,fractal_dimension_mean:.06213,radius_se:.7128,texture_se:1.581,perimeter_se:4.895,area_se:90.47,smoothness_se:.008102,compactness_se:.02101,concavity_se:.03342,concave_points_se:.01601,symmetry_se:.02045,fractal_dimension_se:.00457,radius_worst:22.25,texture_worst:24.9,perimeter_worst:145.4,area_worst:1549,smoothness_worst:.1503,compactness_worst:.2291,concavity_worst:.3272,concave_points_worst:.1674,symmetry_worst:.2894,fractal_dimension_worst:.08456,"":""},{id:865423,diagnosis:"M",radius_mean:24.25,texture_mean:20.2,perimeter_mean:166.2,area_mean:1761,smoothness_mean:.1447,compactness_mean:.2867,concavity_mean:.4268,concave_points_mean:.2012,symmetry_mean:.2655,fractal_dimension_mean:.06877,radius_se:1.509,texture_se:3.12,perimeter_se:9.807,area_se:233,smoothness_se:.02333,compactness_se:.09806,concavity_se:.1278,concave_points_se:.01822,symmetry_se:.04547,fractal_dimension_se:.009875,radius_worst:26.02,texture_worst:23.99,perimeter_worst:180.9,area_worst:2073,smoothness_worst:.1696,compactness_worst:.4244,concavity_worst:.5803,concave_points_worst:.2248,symmetry_worst:.3222,fractal_dimension_worst:.08009,"":""},{id:865432,diagnosis:"B",radius_mean:14.5,texture_mean:10.89,perimeter_mean:94.28,area_mean:640.7,smoothness_mean:.1101,compactness_mean:.1099,concavity_mean:.08842,concave_points_mean:.05778,symmetry_mean:.1856,fractal_dimension_mean:.06402,radius_se:.2929,texture_se:.857,perimeter_se:1.928,area_se:24.19,smoothness_se:.003818,compactness_se:.01276,concavity_se:.02882,concave_points_se:.012,symmetry_se:.0191,fractal_dimension_se:.002808,radius_worst:15.7,texture_worst:15.98,perimeter_worst:102.8,area_worst:745.5,smoothness_worst:.1313,compactness_worst:.1788,concavity_worst:.256,concave_points_worst:.1221,symmetry_worst:.2889,fractal_dimension_worst:.08006,"":""},{id:865468,diagnosis:"B",radius_mean:13.37,texture_mean:16.39,perimeter_mean:86.1,area_mean:553.5,smoothness_mean:.07115,compactness_mean:.07325,concavity_mean:.08092,concave_points_mean:.028,symmetry_mean:.1422,fractal_dimension_mean:.05823,radius_se:.1639,texture_se:1.14,perimeter_se:1.223,area_se:14.66,smoothness_se:.005919,compactness_se:.0327,concavity_se:.04957,concave_points_se:.01038,symmetry_se:.01208,fractal_dimension_se:.004076,radius_worst:14.26,texture_worst:22.75,perimeter_worst:91.99,area_worst:632.1,smoothness_worst:.1025,compactness_worst:.2531,concavity_worst:.3308,concave_points_worst:.08978,symmetry_worst:.2048,fractal_dimension_worst:.07628,"":""},{id:86561,diagnosis:"B",radius_mean:13.85,texture_mean:17.21,perimeter_mean:88.44,area_mean:588.7,smoothness_mean:.08785,compactness_mean:.06136,concavity_mean:.0142,concave_points_mean:.01141,symmetry_mean:.1614,fractal_dimension_mean:.0589,radius_se:.2185,texture_se:.8561,perimeter_se:1.495,area_se:17.91,smoothness_se:.004599,compactness_se:.009169,concavity_se:.009127,concave_points_se:.004814,symmetry_se:.01247,fractal_dimension_se:.001708,radius_worst:15.49,texture_worst:23.58,perimeter_worst:100.3,area_worst:725.9,smoothness_worst:.1157,compactness_worst:.135,concavity_worst:.08115,concave_points_worst:.05104,symmetry_worst:.2364,fractal_dimension_worst:.07182,"":""},{id:866083,diagnosis:"M",radius_mean:13.61,texture_mean:24.69,perimeter_mean:87.76,area_mean:572.6,smoothness_mean:.09258,compactness_mean:.07862,concavity_mean:.05285,concave_points_mean:.03085,symmetry_mean:.1761,fractal_dimension_mean:.0613,radius_se:.231,texture_se:1.005,perimeter_se:1.752,area_se:19.83,smoothness_se:.004088,compactness_se:.01174,concavity_se:.01796,concave_points_se:.00688,symmetry_se:.01323,fractal_dimension_se:.001465,radius_worst:16.89,texture_worst:35.64,perimeter_worst:113.2,area_worst:848.7,smoothness_worst:.1471,compactness_worst:.2884,concavity_worst:.3796,concave_points_worst:.1329,symmetry_worst:.347,fractal_dimension_worst:.079,"":""},{id:866203,diagnosis:"M",radius_mean:19,texture_mean:18.91,perimeter_mean:123.4,area_mean:1138,smoothness_mean:.08217,compactness_mean:.08028,concavity_mean:.09271,concave_points_mean:.05627,symmetry_mean:.1946,fractal_dimension_mean:.05044,radius_se:.6896,texture_se:1.342,perimeter_se:5.216,area_se:81.23,smoothness_se:.004428,compactness_se:.02731,concavity_se:.0404,concave_points_se:.01361,symmetry_se:.0203,fractal_dimension_se:.002686,radius_worst:22.32,texture_worst:25.73,perimeter_worst:148.2,area_worst:1538,smoothness_worst:.1021,compactness_worst:.2264,concavity_worst:.3207,concave_points_worst:.1218,symmetry_worst:.2841,fractal_dimension_worst:.06541,"":""},{id:866458,diagnosis:"B",radius_mean:15.1,texture_mean:16.39,perimeter_mean:99.58,area_mean:674.5,smoothness_mean:.115,compactness_mean:.1807,concavity_mean:.1138,concave_points_mean:.08534,symmetry_mean:.2001,fractal_dimension_mean:.06467,radius_se:.4309,texture_se:1.068,perimeter_se:2.796,area_se:39.84,smoothness_se:.009006,compactness_se:.04185,concavity_se:.03204,concave_points_se:.02258,symmetry_se:.02353,fractal_dimension_se:.004984,radius_worst:16.11,texture_worst:18.33,perimeter_worst:105.9,area_worst:762.6,smoothness_worst:.1386,compactness_worst:.2883,concavity_worst:.196,concave_points_worst:.1423,symmetry_worst:.259,fractal_dimension_worst:.07779,"":""},{id:866674,diagnosis:"M",radius_mean:19.79,texture_mean:25.12,perimeter_mean:130.4,area_mean:1192,smoothness_mean:.1015,compactness_mean:.1589,concavity_mean:.2545,concave_points_mean:.1149,symmetry_mean:.2202,fractal_dimension_mean:.06113,radius_se:.4953,texture_se:1.199,perimeter_se:2.765,area_se:63.33,smoothness_se:.005033,compactness_se:.03179,concavity_se:.04755,concave_points_se:.01043,symmetry_se:.01578,fractal_dimension_se:.003224,radius_worst:22.63,texture_worst:33.58,perimeter_worst:148.7,area_worst:1589,smoothness_worst:.1275,compactness_worst:.3861,concavity_worst:.5673,concave_points_worst:.1732,symmetry_worst:.3305,fractal_dimension_worst:.08465,"":""},{id:866714,diagnosis:"B",radius_mean:12.19,texture_mean:13.29,perimeter_mean:79.08,area_mean:455.8,smoothness_mean:.1066,compactness_mean:.09509,concavity_mean:.02855,concave_points_mean:.02882,symmetry_mean:.188,fractal_dimension_mean:.06471,radius_se:.2005,texture_se:.8163,perimeter_se:1.973,area_se:15.24,smoothness_se:.006773,compactness_se:.02456,concavity_se:.01018,concave_points_se:.008094,symmetry_se:.02662,fractal_dimension_se:.004143,radius_worst:13.34,texture_worst:17.81,perimeter_worst:91.38,area_worst:545.2,smoothness_worst:.1427,compactness_worst:.2585,concavity_worst:.09915,concave_points_worst:.08187,symmetry_worst:.3469,fractal_dimension_worst:.09241,"":""},{id:8670,diagnosis:"M",radius_mean:15.46,texture_mean:19.48,perimeter_mean:101.7,area_mean:748.9,smoothness_mean:.1092,compactness_mean:.1223,concavity_mean:.1466,concave_points_mean:.08087,symmetry_mean:.1931,fractal_dimension_mean:.05796,radius_se:.4743,texture_se:.7859,perimeter_se:3.094,area_se:48.31,smoothness_se:.00624,compactness_se:.01484,concavity_se:.02813,concave_points_se:.01093,symmetry_se:.01397,fractal_dimension_se:.002461,radius_worst:19.26,texture_worst:26,perimeter_worst:124.9,area_worst:1156,smoothness_worst:.1546,compactness_worst:.2394,concavity_worst:.3791,concave_points_worst:.1514,symmetry_worst:.2837,fractal_dimension_worst:.08019,"":""},{id:86730502,diagnosis:"M",radius_mean:16.16,texture_mean:21.54,perimeter_mean:106.2,area_mean:809.8,smoothness_mean:.1008,compactness_mean:.1284,concavity_mean:.1043,concave_points_mean:.05613,symmetry_mean:.216,fractal_dimension_mean:.05891,radius_se:.4332,texture_se:1.265,perimeter_se:2.844,area_se:43.68,smoothness_se:.004877,compactness_se:.01952,concavity_se:.02219,concave_points_se:.009231,symmetry_se:.01535,fractal_dimension_se:.002373,radius_worst:19.47,texture_worst:31.68,perimeter_worst:129.7,area_worst:1175,smoothness_worst:.1395,compactness_worst:.3055,concavity_worst:.2992,concave_points_worst:.1312,symmetry_worst:.348,fractal_dimension_worst:.07619,"":""},{id:867387,diagnosis:"B",radius_mean:15.71,texture_mean:13.93,perimeter_mean:102,area_mean:761.7,smoothness_mean:.09462,compactness_mean:.09462,concavity_mean:.07135,concave_points_mean:.05933,symmetry_mean:.1816,fractal_dimension_mean:.05723,radius_se:.3117,texture_se:.8155,perimeter_se:1.972,area_se:27.94,smoothness_se:.005217,compactness_se:.01515,concavity_se:.01678,concave_points_se:.01268,symmetry_se:.01669,fractal_dimension_se:.00233,radius_worst:17.5,texture_worst:19.25,perimeter_worst:114.3,area_worst:922.8,smoothness_worst:.1223,compactness_worst:.1949,concavity_worst:.1709,concave_points_worst:.1374,symmetry_worst:.2723,fractal_dimension_worst:.07071,"":""},{id:867739,diagnosis:"M",radius_mean:18.45,texture_mean:21.91,perimeter_mean:120.2,area_mean:1075,smoothness_mean:.0943,compactness_mean:.09709,concavity_mean:.1153,concave_points_mean:.06847,symmetry_mean:.1692,fractal_dimension_mean:.05727,radius_se:.5959,texture_se:1.202,perimeter_se:3.766,area_se:68.35,smoothness_se:.006001,compactness_se:.01422,concavity_se:.02855,concave_points_se:.009148,symmetry_se:.01492,fractal_dimension_se:.002205,radius_worst:22.52,texture_worst:31.39,perimeter_worst:145.6,area_worst:1590,smoothness_worst:.1465,compactness_worst:.2275,concavity_worst:.3965,concave_points_worst:.1379,symmetry_worst:.3109,fractal_dimension_worst:.0761,"":""},{id:868202,diagnosis:"M",radius_mean:12.77,texture_mean:22.47,perimeter_mean:81.72,area_mean:506.3,smoothness_mean:.09055,compactness_mean:.05761,concavity_mean:.04711,concave_points_mean:.02704,symmetry_mean:.1585,fractal_dimension_mean:.06065,radius_se:.2367,texture_se:1.38,perimeter_se:1.457,area_se:19.87,smoothness_se:.007499,compactness_se:.01202,concavity_se:.02332,concave_points_se:.00892,symmetry_se:.01647,fractal_dimension_se:.002629,radius_worst:14.49,texture_worst:33.37,perimeter_worst:92.04,area_worst:653.6,smoothness_worst:.1419,compactness_worst:.1523,concavity_worst:.2177,concave_points_worst:.09331,symmetry_worst:.2829,fractal_dimension_worst:.08067,"":""},{id:868223,diagnosis:"B",radius_mean:11.71,texture_mean:16.67,perimeter_mean:74.72,area_mean:423.6,smoothness_mean:.1051,compactness_mean:.06095,concavity_mean:.03592,concave_points_mean:.026,symmetry_mean:.1339,fractal_dimension_mean:.05945,radius_se:.4489,texture_se:2.508,perimeter_se:3.258,area_se:34.37,smoothness_se:.006578,compactness_se:.0138,concavity_se:.02662,concave_points_se:.01307,symmetry_se:.01359,fractal_dimension_se:.003707,radius_worst:13.33,texture_worst:25.48,perimeter_worst:86.16,area_worst:546.7,smoothness_worst:.1271,compactness_worst:.1028,concavity_worst:.1046,concave_points_worst:.06968,symmetry_worst:.1712,fractal_dimension_worst:.07343,"":""},{id:868682,diagnosis:"B",radius_mean:11.43,texture_mean:15.39,perimeter_mean:73.06,area_mean:399.8,smoothness_mean:.09639,compactness_mean:.06889,concavity_mean:.03503,concave_points_mean:.02875,symmetry_mean:.1734,fractal_dimension_mean:.05865,radius_se:.1759,texture_se:.9938,perimeter_se:1.143,area_se:12.67,smoothness_se:.005133,compactness_se:.01521,concavity_se:.01434,concave_points_se:.008602,symmetry_se:.01501,fractal_dimension_se:.001588,radius_worst:12.32,texture_worst:22.02,perimeter_worst:79.93,area_worst:462,smoothness_worst:.119,compactness_worst:.1648,concavity_worst:.1399,concave_points_worst:.08476,symmetry_worst:.2676,fractal_dimension_worst:.06765,"":""},{id:868826,diagnosis:"M",radius_mean:14.95,texture_mean:17.57,perimeter_mean:96.85,area_mean:678.1,smoothness_mean:.1167,compactness_mean:.1305,concavity_mean:.1539,concave_points_mean:.08624,symmetry_mean:.1957,fractal_dimension_mean:.06216,radius_se:1.296,texture_se:1.452,perimeter_se:8.419,area_se:101.9,smoothness_se:.01,compactness_se:.0348,concavity_se:.06577,concave_points_se:.02801,symmetry_se:.05168,fractal_dimension_se:.002887,radius_worst:18.55,texture_worst:21.43,perimeter_worst:121.4,area_worst:971.4,smoothness_worst:.1411,compactness_worst:.2164,concavity_worst:.3355,concave_points_worst:.1667,symmetry_worst:.3414,fractal_dimension_worst:.07147,"":""},{id:868871,diagnosis:"B",radius_mean:11.28,texture_mean:13.39,perimeter_mean:73,area_mean:384.8,smoothness_mean:.1164,compactness_mean:.1136,concavity_mean:.04635,concave_points_mean:.04796,symmetry_mean:.1771,fractal_dimension_mean:.06072,radius_se:.3384,texture_se:1.343,perimeter_se:1.851,area_se:26.33,smoothness_se:.01127,compactness_se:.03498,concavity_se:.02187,concave_points_se:.01965,symmetry_se:.0158,fractal_dimension_se:.003442,radius_worst:11.92,texture_worst:15.77,perimeter_worst:76.53,area_worst:434,smoothness_worst:.1367,compactness_worst:.1822,concavity_worst:.08669,concave_points_worst:.08611,symmetry_worst:.2102,fractal_dimension_worst:.06784,"":""},{id:868999,diagnosis:"B",radius_mean:9.738,texture_mean:11.97,perimeter_mean:61.24,area_mean:288.5,smoothness_mean:.0925,compactness_mean:.04102,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1903,fractal_dimension_mean:.06422,radius_se:.1988,texture_se:.496,perimeter_se:1.218,area_se:12.26,smoothness_se:.00604,compactness_se:.005656,concavity_se:0,concave_points_se:0,symmetry_se:.02277,fractal_dimension_se:.00322,radius_worst:10.62,texture_worst:14.1,perimeter_worst:66.53,area_worst:342.9,smoothness_worst:.1234,compactness_worst:.07204,concavity_worst:0,concave_points_worst:0,symmetry_worst:.3105,fractal_dimension_worst:.08151,"":""},{id:869104,diagnosis:"M",radius_mean:16.11,texture_mean:18.05,perimeter_mean:105.1,area_mean:813,smoothness_mean:.09721,compactness_mean:.1137,concavity_mean:.09447,concave_points_mean:.05943,symmetry_mean:.1861,fractal_dimension_mean:.06248,radius_se:.7049,texture_se:1.332,perimeter_se:4.533,area_se:74.08,smoothness_se:.00677,compactness_se:.01938,concavity_se:.03067,concave_points_se:.01167,symmetry_se:.01875,fractal_dimension_se:.003434,radius_worst:19.92,texture_worst:25.27,perimeter_worst:129,area_worst:1233,smoothness_worst:.1314,compactness_worst:.2236,concavity_worst:.2802,concave_points_worst:.1216,symmetry_worst:.2792,fractal_dimension_worst:.08158,"":""},{id:869218,diagnosis:"B",radius_mean:11.43,texture_mean:17.31,perimeter_mean:73.66,area_mean:398,smoothness_mean:.1092,compactness_mean:.09486,concavity_mean:.02031,concave_points_mean:.01861,symmetry_mean:.1645,fractal_dimension_mean:.06562,radius_se:.2843,texture_se:1.908,perimeter_se:1.937,area_se:21.38,smoothness_se:.006664,compactness_se:.01735,concavity_se:.01158,concave_points_se:.00952,symmetry_se:.02282,fractal_dimension_se:.003526,radius_worst:12.78,texture_worst:26.76,perimeter_worst:82.66,area_worst:503,smoothness_worst:.1413,compactness_worst:.1792,concavity_worst:.07708,concave_points_worst:.06402,symmetry_worst:.2584,fractal_dimension_worst:.08096,"":""},{id:869224,diagnosis:"B",radius_mean:12.9,texture_mean:15.92,perimeter_mean:83.74,area_mean:512.2,smoothness_mean:.08677,compactness_mean:.09509,concavity_mean:.04894,concave_points_mean:.03088,symmetry_mean:.1778,fractal_dimension_mean:.06235,radius_se:.2143,texture_se:.7712,perimeter_se:1.689,area_se:16.64,smoothness_se:.005324,compactness_se:.01563,concavity_se:.0151,concave_points_se:.007584,symmetry_se:.02104,fractal_dimension_se:.001887,radius_worst:14.48,texture_worst:21.82,perimeter_worst:97.17,area_worst:643.8,smoothness_worst:.1312,compactness_worst:.2548,concavity_worst:.209,concave_points_worst:.1012,symmetry_worst:.3549,fractal_dimension_worst:.08118,"":""},{id:869254,diagnosis:"B",radius_mean:10.75,texture_mean:14.97,perimeter_mean:68.26,area_mean:355.3,smoothness_mean:.07793,compactness_mean:.05139,concavity_mean:.02251,concave_points_mean:.007875,symmetry_mean:.1399,fractal_dimension_mean:.05688,radius_se:.2525,texture_se:1.239,perimeter_se:1.806,area_se:17.74,smoothness_se:.006547,compactness_se:.01781,concavity_se:.02018,concave_points_se:.005612,symmetry_se:.01671,fractal_dimension_se:.00236,radius_worst:11.95,texture_worst:20.72,perimeter_worst:77.79,area_worst:441.2,smoothness_worst:.1076,compactness_worst:.1223,concavity_worst:.09755,concave_points_worst:.03413,symmetry_worst:.23,fractal_dimension_worst:.06769,"":""},{id:869476,diagnosis:"B",radius_mean:11.9,texture_mean:14.65,perimeter_mean:78.11,area_mean:432.8,smoothness_mean:.1152,compactness_mean:.1296,concavity_mean:.0371,concave_points_mean:.03003,symmetry_mean:.1995,fractal_dimension_mean:.07839,radius_se:.3962,texture_se:.6538,perimeter_se:3.021,area_se:25.03,smoothness_se:.01017,compactness_se:.04741,concavity_se:.02789,concave_points_se:.0111,symmetry_se:.03127,fractal_dimension_se:.009423,radius_worst:13.15,texture_worst:16.51,perimeter_worst:86.26,area_worst:509.6,smoothness_worst:.1424,compactness_worst:.2517,concavity_worst:.0942,concave_points_worst:.06042,symmetry_worst:.2727,fractal_dimension_worst:.1036,"":""},{id:869691,diagnosis:"M",radius_mean:11.8,texture_mean:16.58,perimeter_mean:78.99,area_mean:432,smoothness_mean:.1091,compactness_mean:.17,concavity_mean:.1659,concave_points_mean:.07415,symmetry_mean:.2678,fractal_dimension_mean:.07371,radius_se:.3197,texture_se:1.426,perimeter_se:2.281,area_se:24.72,smoothness_se:.005427,compactness_se:.03633,concavity_se:.04649,concave_points_se:.01843,symmetry_se:.05628,fractal_dimension_se:.004635,radius_worst:13.74,texture_worst:26.38,perimeter_worst:91.93,area_worst:591.7,smoothness_worst:.1385,compactness_worst:.4092,concavity_worst:.4504,concave_points_worst:.1865,symmetry_worst:.5774,fractal_dimension_worst:.103,"":""},{id:86973701,diagnosis:"B",radius_mean:14.95,texture_mean:18.77,perimeter_mean:97.84,area_mean:689.5,smoothness_mean:.08138,compactness_mean:.1167,concavity_mean:.0905,concave_points_mean:.03562,symmetry_mean:.1744,fractal_dimension_mean:.06493,radius_se:.422,texture_se:1.909,perimeter_se:3.271,area_se:39.43,smoothness_se:.00579,compactness_se:.04877,concavity_se:.05303,concave_points_se:.01527,symmetry_se:.03356,fractal_dimension_se:.009368,radius_worst:16.25,texture_worst:25.47,perimeter_worst:107.1,area_worst:809.7,smoothness_worst:.0997,compactness_worst:.2521,concavity_worst:.25,concave_points_worst:.08405,symmetry_worst:.2852,fractal_dimension_worst:.09218,"":""},{id:86973702,diagnosis:"B",radius_mean:14.44,texture_mean:15.18,perimeter_mean:93.97,area_mean:640.1,smoothness_mean:.0997,compactness_mean:.1021,concavity_mean:.08487,concave_points_mean:.05532,symmetry_mean:.1724,fractal_dimension_mean:.06081,radius_se:.2406,texture_se:.7394,perimeter_se:2.12,area_se:21.2,smoothness_se:.005706,compactness_se:.02297,concavity_se:.03114,concave_points_se:.01493,symmetry_se:.01454,fractal_dimension_se:.002528,radius_worst:15.85,texture_worst:19.85,perimeter_worst:108.6,area_worst:766.9,smoothness_worst:.1316,compactness_worst:.2735,concavity_worst:.3103,concave_points_worst:.1599,symmetry_worst:.2691,fractal_dimension_worst:.07683,"":""},{id:869931,diagnosis:"B",radius_mean:13.74,texture_mean:17.91,perimeter_mean:88.12,area_mean:585,smoothness_mean:.07944,compactness_mean:.06376,concavity_mean:.02881,concave_points_mean:.01329,symmetry_mean:.1473,fractal_dimension_mean:.0558,radius_se:.25,texture_se:.7574,perimeter_se:1.573,area_se:21.47,smoothness_se:.002838,compactness_se:.01592,concavity_se:.0178,concave_points_se:.005828,symmetry_se:.01329,fractal_dimension_se:.001976,radius_worst:15.34,texture_worst:22.46,perimeter_worst:97.19,area_worst:725.9,smoothness_worst:.09711,compactness_worst:.1824,concavity_worst:.1564,concave_points_worst:.06019,symmetry_worst:.235,fractal_dimension_worst:.07014,"":""},{id:871001501,diagnosis:"B",radius_mean:13,texture_mean:20.78,perimeter_mean:83.51,area_mean:519.4,smoothness_mean:.1135,compactness_mean:.07589,concavity_mean:.03136,concave_points_mean:.02645,symmetry_mean:.254,fractal_dimension_mean:.06087,radius_se:.4202,texture_se:1.322,perimeter_se:2.873,area_se:34.78,smoothness_se:.007017,compactness_se:.01142,concavity_se:.01949,concave_points_se:.01153,symmetry_se:.02951,fractal_dimension_se:.001533,radius_worst:14.16,texture_worst:24.11,perimeter_worst:90.82,area_worst:616.7,smoothness_worst:.1297,compactness_worst:.1105,concavity_worst:.08112,concave_points_worst:.06296,symmetry_worst:.3196,fractal_dimension_worst:.06435,"":""},{id:871001502,diagnosis:"B",radius_mean:8.219,texture_mean:20.7,perimeter_mean:53.27,area_mean:203.9,smoothness_mean:.09405,compactness_mean:.1305,concavity_mean:.1321,concave_points_mean:.02168,symmetry_mean:.2222,fractal_dimension_mean:.08261,radius_se:.1935,texture_se:1.962,perimeter_se:1.243,area_se:10.21,smoothness_se:.01243,compactness_se:.05416,concavity_se:.07753,concave_points_se:.01022,symmetry_se:.02309,fractal_dimension_se:.01178,radius_worst:9.092,texture_worst:29.72,perimeter_worst:58.08,area_worst:249.8,smoothness_worst:.163,compactness_worst:.431,concavity_worst:.5381,concave_points_worst:.07879,symmetry_worst:.3322,fractal_dimension_worst:.1486,"":""},{id:8710441,diagnosis:"B",radius_mean:9.731,texture_mean:15.34,perimeter_mean:63.78,area_mean:300.2,smoothness_mean:.1072,compactness_mean:.1599,concavity_mean:.4108,concave_points_mean:.07857,symmetry_mean:.2548,fractal_dimension_mean:.09296,radius_se:.8245,texture_se:2.664,perimeter_se:4.073,area_se:49.85,smoothness_se:.01097,compactness_se:.09586,concavity_se:.396,concave_points_se:.05279,symmetry_se:.03546,fractal_dimension_se:.02984,radius_worst:11.02,texture_worst:19.49,perimeter_worst:71.04,area_worst:380.5,smoothness_worst:.1292,compactness_worst:.2772,concavity_worst:.8216,concave_points_worst:.1571,symmetry_worst:.3108,fractal_dimension_worst:.1259,"":""},{id:87106,diagnosis:"B",radius_mean:11.15,texture_mean:13.08,perimeter_mean:70.87,area_mean:381.9,smoothness_mean:.09754,compactness_mean:.05113,concavity_mean:.01982,concave_points_mean:.01786,symmetry_mean:.183,fractal_dimension_mean:.06105,radius_se:.2251,texture_se:.7815,perimeter_se:1.429,area_se:15.48,smoothness_se:.009019,compactness_se:.008985,concavity_se:.01196,concave_points_se:.008232,symmetry_se:.02388,fractal_dimension_se:.001619,radius_worst:11.99,texture_worst:16.3,perimeter_worst:76.25,area_worst:440.8,smoothness_worst:.1341,compactness_worst:.08971,concavity_worst:.07116,concave_points_worst:.05506,symmetry_worst:.2859,fractal_dimension_worst:.06772,"":""},{id:8711002,diagnosis:"B",radius_mean:13.15,texture_mean:15.34,perimeter_mean:85.31,area_mean:538.9,smoothness_mean:.09384,compactness_mean:.08498,concavity_mean:.09293,concave_points_mean:.03483,symmetry_mean:.1822,fractal_dimension_mean:.06207,radius_se:.271,texture_se:.7927,perimeter_se:1.819,area_se:22.79,smoothness_se:.008584,compactness_se:.02017,concavity_se:.03047,concave_points_se:.009536,symmetry_se:.02769,fractal_dimension_se:.003479,radius_worst:14.77,texture_worst:20.5,perimeter_worst:97.67,area_worst:677.3,smoothness_worst:.1478,compactness_worst:.2256,concavity_worst:.3009,concave_points_worst:.09722,symmetry_worst:.3849,fractal_dimension_worst:.08633,"":""},{id:8711003,diagnosis:"B",radius_mean:12.25,texture_mean:17.94,perimeter_mean:78.27,area_mean:460.3,smoothness_mean:.08654,compactness_mean:.06679,concavity_mean:.03885,concave_points_mean:.02331,symmetry_mean:.197,fractal_dimension_mean:.06228,radius_se:.22,texture_se:.9823,perimeter_se:1.484,area_se:16.51,smoothness_se:.005518,compactness_se:.01562,concavity_se:.01994,concave_points_se:.007924,symmetry_se:.01799,fractal_dimension_se:.002484,radius_worst:13.59,texture_worst:25.22,perimeter_worst:86.6,area_worst:564.2,smoothness_worst:.1217,compactness_worst:.1788,concavity_worst:.1943,concave_points_worst:.08211,symmetry_worst:.3113,fractal_dimension_worst:.08132,"":""},{id:8711202,diagnosis:"M",radius_mean:17.68,texture_mean:20.74,perimeter_mean:117.4,area_mean:963.7,smoothness_mean:.1115,compactness_mean:.1665,concavity_mean:.1855,concave_points_mean:.1054,symmetry_mean:.1971,fractal_dimension_mean:.06166,radius_se:.8113,texture_se:1.4,perimeter_se:5.54,area_se:93.91,smoothness_se:.009037,compactness_se:.04954,concavity_se:.05206,concave_points_se:.01841,symmetry_se:.01778,fractal_dimension_se:.004968,radius_worst:20.47,texture_worst:25.11,perimeter_worst:132.9,area_worst:1302,smoothness_worst:.1418,compactness_worst:.3498,concavity_worst:.3583,concave_points_worst:.1515,symmetry_worst:.2463,fractal_dimension_worst:.07738,"":""},{id:8711216,diagnosis:"B",radius_mean:16.84,texture_mean:19.46,perimeter_mean:108.4,area_mean:880.2,smoothness_mean:.07445,compactness_mean:.07223,concavity_mean:.0515,concave_points_mean:.02771,symmetry_mean:.1844,fractal_dimension_mean:.05268,radius_se:.4789,texture_se:2.06,perimeter_se:3.479,area_se:46.61,smoothness_se:.003443,compactness_se:.02661,concavity_se:.03056,concave_points_se:.0111,symmetry_se:.0152,fractal_dimension_se:.001519,radius_worst:18.22,texture_worst:28.07,perimeter_worst:120.3,area_worst:1032,smoothness_worst:.08774,compactness_worst:.171,concavity_worst:.1882,concave_points_worst:.08436,symmetry_worst:.2527,fractal_dimension_worst:.05972,"":""},{id:871122,diagnosis:"B",radius_mean:12.06,texture_mean:12.74,perimeter_mean:76.84,area_mean:448.6,smoothness_mean:.09311,compactness_mean:.05241,concavity_mean:.01972,concave_points_mean:.01963,symmetry_mean:.159,fractal_dimension_mean:.05907,radius_se:.1822,texture_se:.7285,perimeter_se:1.171,area_se:13.25,smoothness_se:.005528,compactness_se:.009789,concavity_se:.008342,concave_points_se:.006273,symmetry_se:.01465,fractal_dimension_se:.00253,radius_worst:13.14,texture_worst:18.41,perimeter_worst:84.08,area_worst:532.8,smoothness_worst:.1275,compactness_worst:.1232,concavity_worst:.08636,concave_points_worst:.07025,symmetry_worst:.2514,fractal_dimension_worst:.07898,"":""},{id:871149,diagnosis:"B",radius_mean:10.9,texture_mean:12.96,perimeter_mean:68.69,area_mean:366.8,smoothness_mean:.07515,compactness_mean:.03718,concavity_mean:.00309,concave_points_mean:.006588,symmetry_mean:.1442,fractal_dimension_mean:.05743,radius_se:.2818,texture_se:.7614,perimeter_se:1.808,area_se:18.54,smoothness_se:.006142,compactness_se:.006134,concavity_se:.001835,concave_points_se:.003576,symmetry_se:.01637,fractal_dimension_se:.002665,radius_worst:12.36,texture_worst:18.2,perimeter_worst:78.07,area_worst:470,smoothness_worst:.1171,compactness_worst:.08294,concavity_worst:.01854,concave_points_worst:.03953,symmetry_worst:.2738,fractal_dimension_worst:.07685,"":""},{id:8711561,diagnosis:"B",radius_mean:11.75,texture_mean:20.18,perimeter_mean:76.1,area_mean:419.8,smoothness_mean:.1089,compactness_mean:.1141,concavity_mean:.06843,concave_points_mean:.03738,symmetry_mean:.1993,fractal_dimension_mean:.06453,radius_se:.5018,texture_se:1.693,perimeter_se:3.926,area_se:38.34,smoothness_se:.009433,compactness_se:.02405,concavity_se:.04167,concave_points_se:.01152,symmetry_se:.03397,fractal_dimension_se:.005061,radius_worst:13.32,texture_worst:26.21,perimeter_worst:88.91,area_worst:543.9,smoothness_worst:.1358,compactness_worst:.1892,concavity_worst:.1956,concave_points_worst:.07909,symmetry_worst:.3168,fractal_dimension_worst:.07987,"":""},{id:8711803,diagnosis:"M",radius_mean:19.19,texture_mean:15.94,perimeter_mean:126.3,area_mean:1157,smoothness_mean:.08694,compactness_mean:.1185,concavity_mean:.1193,concave_points_mean:.09667,symmetry_mean:.1741,fractal_dimension_mean:.05176,radius_se:1,texture_se:.6336,perimeter_se:6.971,area_se:119.3,smoothness_se:.009406,compactness_se:.03055,concavity_se:.04344,concave_points_se:.02794,symmetry_se:.03156,fractal_dimension_se:.003362,radius_worst:22.03,texture_worst:17.81,perimeter_worst:146.6,area_worst:1495,smoothness_worst:.1124,compactness_worst:.2016,concavity_worst:.2264,concave_points_worst:.1777,symmetry_worst:.2443,fractal_dimension_worst:.06251,"":""},{id:871201,diagnosis:"M",radius_mean:19.59,texture_mean:18.15,perimeter_mean:130.7,area_mean:1214,smoothness_mean:.112,compactness_mean:.1666,concavity_mean:.2508,concave_points_mean:.1286,symmetry_mean:.2027,fractal_dimension_mean:.06082,radius_se:.7364,texture_se:1.048,perimeter_se:4.792,area_se:97.07,smoothness_se:.004057,compactness_se:.02277,concavity_se:.04029,concave_points_se:.01303,symmetry_se:.01686,fractal_dimension_se:.003318,radius_worst:26.73,texture_worst:26.39,perimeter_worst:174.9,area_worst:2232,smoothness_worst:.1438,compactness_worst:.3846,concavity_worst:.681,concave_points_worst:.2247,symmetry_worst:.3643,fractal_dimension_worst:.09223,"":""},{id:8712064,diagnosis:"B",radius_mean:12.34,texture_mean:22.22,perimeter_mean:79.85,area_mean:464.5,smoothness_mean:.1012,compactness_mean:.1015,concavity_mean:.0537,concave_points_mean:.02822,symmetry_mean:.1551,fractal_dimension_mean:.06761,radius_se:.2949,texture_se:1.656,perimeter_se:1.955,area_se:21.55,smoothness_se:.01134,compactness_se:.03175,concavity_se:.03125,concave_points_se:.01135,symmetry_se:.01879,fractal_dimension_se:.005348,radius_worst:13.58,texture_worst:28.68,perimeter_worst:87.36,area_worst:553,smoothness_worst:.1452,compactness_worst:.2338,concavity_worst:.1688,concave_points_worst:.08194,symmetry_worst:.2268,fractal_dimension_worst:.09082,"":""},{id:8712289,diagnosis:"M",radius_mean:23.27,texture_mean:22.04,perimeter_mean:152.1,area_mean:1686,smoothness_mean:.08439,compactness_mean:.1145,concavity_mean:.1324,concave_points_mean:.09702,symmetry_mean:.1801,fractal_dimension_mean:.05553,radius_se:.6642,texture_se:.8561,perimeter_se:4.603,area_se:97.85,smoothness_se:.00491,compactness_se:.02544,concavity_se:.02822,concave_points_se:.01623,symmetry_se:.01956,fractal_dimension_se:.00374,radius_worst:28.01,texture_worst:28.22,perimeter_worst:184.2,area_worst:2403,smoothness_worst:.1228,compactness_worst:.3583,concavity_worst:.3948,concave_points_worst:.2346,symmetry_worst:.3589,fractal_dimension_worst:.09187,"":""},{id:8712291,diagnosis:"B",radius_mean:14.97,texture_mean:19.76,perimeter_mean:95.5,area_mean:690.2,smoothness_mean:.08421,compactness_mean:.05352,concavity_mean:.01947,concave_points_mean:.01939,symmetry_mean:.1515,fractal_dimension_mean:.05266,radius_se:.184,texture_se:1.065,perimeter_se:1.286,area_se:16.64,smoothness_se:.003634,compactness_se:.007983,concavity_se:.008268,concave_points_se:.006432,symmetry_se:.01924,fractal_dimension_se:.00152,radius_worst:15.98,texture_worst:25.82,perimeter_worst:102.3,area_worst:782.1,smoothness_worst:.1045,compactness_worst:.09995,concavity_worst:.0775,concave_points_worst:.05754,symmetry_worst:.2646,fractal_dimension_worst:.06085,"":""},{id:87127,diagnosis:"B",radius_mean:10.8,texture_mean:9.71,perimeter_mean:68.77,area_mean:357.6,smoothness_mean:.09594,compactness_mean:.05736,concavity_mean:.02531,concave_points_mean:.01698,symmetry_mean:.1381,fractal_dimension_mean:.064,radius_se:.1728,texture_se:.4064,perimeter_se:1.126,area_se:11.48,smoothness_se:.007809,compactness_se:.009816,concavity_se:.01099,concave_points_se:.005344,symmetry_se:.01254,fractal_dimension_se:.00212,radius_worst:11.6,texture_worst:12.02,perimeter_worst:73.66,area_worst:414,smoothness_worst:.1436,compactness_worst:.1257,concavity_worst:.1047,concave_points_worst:.04603,symmetry_worst:.209,fractal_dimension_worst:.07699,"":""},{id:8712729,diagnosis:"M",radius_mean:16.78,texture_mean:18.8,perimeter_mean:109.3,area_mean:886.3,smoothness_mean:.08865,compactness_mean:.09182,concavity_mean:.08422,concave_points_mean:.06576,symmetry_mean:.1893,fractal_dimension_mean:.05534,radius_se:.599,texture_se:1.391,perimeter_se:4.129,area_se:67.34,smoothness_se:.006123,compactness_se:.0247,concavity_se:.02626,concave_points_se:.01604,symmetry_se:.02091,fractal_dimension_se:.003493,radius_worst:20.05,texture_worst:26.3,perimeter_worst:130.7,area_worst:1260,smoothness_worst:.1168,compactness_worst:.2119,concavity_worst:.2318,concave_points_worst:.1474,symmetry_worst:.281,fractal_dimension_worst:.07228,"":""},{id:8712766,diagnosis:"M",radius_mean:17.47,texture_mean:24.68,perimeter_mean:116.1,area_mean:984.6,smoothness_mean:.1049,compactness_mean:.1603,concavity_mean:.2159,concave_points_mean:.1043,symmetry_mean:.1538,fractal_dimension_mean:.06365,radius_se:1.088,texture_se:1.41,perimeter_se:7.337,area_se:122.3,smoothness_se:.006174,compactness_se:.03634,concavity_se:.04644,concave_points_se:.01569,symmetry_se:.01145,fractal_dimension_se:.00512,radius_worst:23.14,texture_worst:32.33,perimeter_worst:155.3,area_worst:1660,smoothness_worst:.1376,compactness_worst:.383,concavity_worst:.489,concave_points_worst:.1721,symmetry_worst:.216,fractal_dimension_worst:.093,"":""},{id:8712853,diagnosis:"B",radius_mean:14.97,texture_mean:16.95,perimeter_mean:96.22,area_mean:685.9,smoothness_mean:.09855,compactness_mean:.07885,concavity_mean:.02602,concave_points_mean:.03781,symmetry_mean:.178,fractal_dimension_mean:.0565,radius_se:.2713,texture_se:1.217,perimeter_se:1.893,area_se:24.28,smoothness_se:.00508,compactness_se:.0137,concavity_se:.007276,concave_points_se:.009073,symmetry_se:.0135,fractal_dimension_se:.001706,radius_worst:16.11,texture_worst:23,perimeter_worst:104.6,area_worst:793.7,smoothness_worst:.1216,compactness_worst:.1637,concavity_worst:.06648,concave_points_worst:.08485,symmetry_worst:.2404,fractal_dimension_worst:.06428,"":""},{id:87139402,diagnosis:"B",radius_mean:12.32,texture_mean:12.39,perimeter_mean:78.85,area_mean:464.1,smoothness_mean:.1028,compactness_mean:.06981,concavity_mean:.03987,concave_points_mean:.037,symmetry_mean:.1959,fractal_dimension_mean:.05955,radius_se:.236,texture_se:.6656,perimeter_se:1.67,area_se:17.43,smoothness_se:.008045,compactness_se:.0118,concavity_se:.01683,concave_points_se:.01241,symmetry_se:.01924,fractal_dimension_se:.002248,radius_worst:13.5,texture_worst:15.64,perimeter_worst:86.97,area_worst:549.1,smoothness_worst:.1385,compactness_worst:.1266,concavity_worst:.1242,concave_points_worst:.09391,symmetry_worst:.2827,fractal_dimension_worst:.06771,"":""},{id:87163,diagnosis:"M",radius_mean:13.43,texture_mean:19.63,perimeter_mean:85.84,area_mean:565.4,smoothness_mean:.09048,compactness_mean:.06288,concavity_mean:.05858,concave_points_mean:.03438,symmetry_mean:.1598,fractal_dimension_mean:.05671,radius_se:.4697,texture_se:1.147,perimeter_se:3.142,area_se:43.4,smoothness_se:.006003,compactness_se:.01063,concavity_se:.02151,concave_points_se:.009443,symmetry_se:.0152,fractal_dimension_se:.001868,radius_worst:17.98,texture_worst:29.87,perimeter_worst:116.6,area_worst:993.6,smoothness_worst:.1401,compactness_worst:.1546,concavity_worst:.2644,concave_points_worst:.116,symmetry_worst:.2884,fractal_dimension_worst:.07371,"":""},{id:87164,diagnosis:"M",radius_mean:15.46,texture_mean:11.89,perimeter_mean:102.5,area_mean:736.9,smoothness_mean:.1257,compactness_mean:.1555,concavity_mean:.2032,concave_points_mean:.1097,symmetry_mean:.1966,fractal_dimension_mean:.07069,radius_se:.4209,texture_se:.6583,perimeter_se:2.805,area_se:44.64,smoothness_se:.005393,compactness_se:.02321,concavity_se:.04303,concave_points_se:.0132,symmetry_se:.01792,fractal_dimension_se:.004168,radius_worst:18.79,texture_worst:17.04,perimeter_worst:125,area_worst:1102,smoothness_worst:.1531,compactness_worst:.3583,concavity_worst:.583,concave_points_worst:.1827,symmetry_worst:.3216,fractal_dimension_worst:.101,"":""},{id:871641,diagnosis:"B",radius_mean:11.08,texture_mean:14.71,perimeter_mean:70.21,area_mean:372.7,smoothness_mean:.1006,compactness_mean:.05743,concavity_mean:.02363,concave_points_mean:.02583,symmetry_mean:.1566,fractal_dimension_mean:.06669,radius_se:.2073,texture_se:1.805,perimeter_se:1.377,area_se:19.08,smoothness_se:.01496,compactness_se:.02121,concavity_se:.01453,concave_points_se:.01583,symmetry_se:.03082,fractal_dimension_se:.004785,radius_worst:11.35,texture_worst:16.82,perimeter_worst:72.01,area_worst:396.5,smoothness_worst:.1216,compactness_worst:.0824,concavity_worst:.03938,concave_points_worst:.04306,symmetry_worst:.1902,fractal_dimension_worst:.07313,"":""},{id:871642,diagnosis:"B",radius_mean:10.66,texture_mean:15.15,perimeter_mean:67.49,area_mean:349.6,smoothness_mean:.08792,compactness_mean:.04302,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1928,fractal_dimension_mean:.05975,radius_se:.3309,texture_se:1.925,perimeter_se:2.155,area_se:21.98,smoothness_se:.008713,compactness_se:.01017,concavity_se:0,concave_points_se:0,symmetry_se:.03265,fractal_dimension_se:.001002,radius_worst:11.54,texture_worst:19.2,perimeter_worst:73.2,area_worst:408.3,smoothness_worst:.1076,compactness_worst:.06791,concavity_worst:0,concave_points_worst:0,symmetry_worst:.271,fractal_dimension_worst:.06164,"":""},{id:872113,diagnosis:"B",radius_mean:8.671,texture_mean:14.45,perimeter_mean:54.42,area_mean:227.2,smoothness_mean:.09138,compactness_mean:.04276,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1722,fractal_dimension_mean:.06724,radius_se:.2204,texture_se:.7873,perimeter_se:1.435,area_se:11.36,smoothness_se:.009172,compactness_se:.008007,concavity_se:0,concave_points_se:0,symmetry_se:.02711,fractal_dimension_se:.003399,radius_worst:9.262,texture_worst:17.04,perimeter_worst:58.36,area_worst:259.2,smoothness_worst:.1162,compactness_worst:.07057,concavity_worst:0,concave_points_worst:0,symmetry_worst:.2592,fractal_dimension_worst:.07848,"":""},{id:872608,diagnosis:"B",radius_mean:9.904,texture_mean:18.06,perimeter_mean:64.6,area_mean:302.4,smoothness_mean:.09699,compactness_mean:.1294,concavity_mean:.1307,concave_points_mean:.03716,symmetry_mean:.1669,fractal_dimension_mean:.08116,radius_se:.4311,texture_se:2.261,perimeter_se:3.132,area_se:27.48,smoothness_se:.01286,compactness_se:.08808,concavity_se:.1197,concave_points_se:.0246,symmetry_se:.0388,fractal_dimension_se:.01792,radius_worst:11.26,texture_worst:24.39,perimeter_worst:73.07,area_worst:390.2,smoothness_worst:.1301,compactness_worst:.295,concavity_worst:.3486,concave_points_worst:.0991,symmetry_worst:.2614,fractal_dimension_worst:.1162,"":""},{id:87281702,diagnosis:"M",radius_mean:16.46,texture_mean:20.11,perimeter_mean:109.3,area_mean:832.9,smoothness_mean:.09831,compactness_mean:.1556,concavity_mean:.1793,concave_points_mean:.08866,symmetry_mean:.1794,fractal_dimension_mean:.06323,radius_se:.3037,texture_se:1.284,perimeter_se:2.482,area_se:31.59,smoothness_se:.006627,compactness_se:.04094,concavity_se:.05371,concave_points_se:.01813,symmetry_se:.01682,fractal_dimension_se:.004584,radius_worst:17.79,texture_worst:28.45,perimeter_worst:123.5,area_worst:981.2,smoothness_worst:.1415,compactness_worst:.4667,concavity_worst:.5862,concave_points_worst:.2035,symmetry_worst:.3054,fractal_dimension_worst:.09519,"":""},{id:873357,diagnosis:"B",radius_mean:13.01,texture_mean:22.22,perimeter_mean:82.01,area_mean:526.4,smoothness_mean:.06251,compactness_mean:.01938,concavity_mean:.001595,concave_points_mean:.001852,symmetry_mean:.1395,fractal_dimension_mean:.05234,radius_se:.1731,texture_se:1.142,perimeter_se:1.101,area_se:14.34,smoothness_se:.003418,compactness_se:.002252,concavity_se:.001595,concave_points_se:.001852,symmetry_se:.01613,fractal_dimension_se:9683e-7,radius_worst:14,texture_worst:29.02,perimeter_worst:88.18,area_worst:608.8,smoothness_worst:.08125,compactness_worst:.03432,concavity_worst:.007977,concave_points_worst:.009259,symmetry_worst:.2295,fractal_dimension_worst:.05843,"":""},{id:873586,diagnosis:"B",radius_mean:12.81,texture_mean:13.06,perimeter_mean:81.29,area_mean:508.8,smoothness_mean:.08739,compactness_mean:.03774,concavity_mean:.009193,concave_points_mean:.0133,symmetry_mean:.1466,fractal_dimension_mean:.06133,radius_se:.2889,texture_se:.9899,perimeter_se:1.778,area_se:21.79,smoothness_se:.008534,compactness_se:.006364,concavity_se:.00618,concave_points_se:.007408,symmetry_se:.01065,fractal_dimension_se:.003351,radius_worst:13.63,texture_worst:16.15,perimeter_worst:86.7,area_worst:570.7,smoothness_worst:.1162,compactness_worst:.05445,concavity_worst:.02758,concave_points_worst:.0399,symmetry_worst:.1783,fractal_dimension_worst:.07319,"":""},{id:873592,diagnosis:"M",radius_mean:27.22,texture_mean:21.87,perimeter_mean:182.1,area_mean:2250,smoothness_mean:.1094,compactness_mean:.1914,concavity_mean:.2871,concave_points_mean:.1878,symmetry_mean:.18,fractal_dimension_mean:.0577,radius_se:.8361,texture_se:1.481,perimeter_se:5.82,area_se:128.7,smoothness_se:.004631,compactness_se:.02537,concavity_se:.03109,concave_points_se:.01241,symmetry_se:.01575,fractal_dimension_se:.002747,radius_worst:33.12,texture_worst:32.85,perimeter_worst:220.8,area_worst:3216,smoothness_worst:.1472,compactness_worst:.4034,concavity_worst:.534,concave_points_worst:.2688,symmetry_worst:.2856,fractal_dimension_worst:.08082,"":""},{id:873593,diagnosis:"M",radius_mean:21.09,texture_mean:26.57,perimeter_mean:142.7,area_mean:1311,smoothness_mean:.1141,compactness_mean:.2832,concavity_mean:.2487,concave_points_mean:.1496,symmetry_mean:.2395,fractal_dimension_mean:.07398,radius_se:.6298,texture_se:.7629,perimeter_se:4.414,area_se:81.46,smoothness_se:.004253,compactness_se:.04759,concavity_se:.03872,concave_points_se:.01567,symmetry_se:.01798,fractal_dimension_se:.005295,radius_worst:26.68,texture_worst:33.48,perimeter_worst:176.5,area_worst:2089,smoothness_worst:.1491,compactness_worst:.7584,concavity_worst:.678,concave_points_worst:.2903,symmetry_worst:.4098,fractal_dimension_worst:.1284,"":""},{id:873701,diagnosis:"M",radius_mean:15.7,texture_mean:20.31,perimeter_mean:101.2,area_mean:766.6,smoothness_mean:.09597,compactness_mean:.08799,concavity_mean:.06593,concave_points_mean:.05189,symmetry_mean:.1618,fractal_dimension_mean:.05549,radius_se:.3699,texture_se:1.15,perimeter_se:2.406,area_se:40.98,smoothness_se:.004626,compactness_se:.02263,concavity_se:.01954,concave_points_se:.009767,symmetry_se:.01547,fractal_dimension_se:.00243,radius_worst:20.11,texture_worst:32.82,perimeter_worst:129.3,area_worst:1269,smoothness_worst:.1414,compactness_worst:.3547,concavity_worst:.2902,concave_points_worst:.1541,symmetry_worst:.3437,fractal_dimension_worst:.08631,"":""},{id:873843,diagnosis:"B",radius_mean:11.41,texture_mean:14.92,perimeter_mean:73.53,area_mean:402,smoothness_mean:.09059,compactness_mean:.08155,concavity_mean:.06181,concave_points_mean:.02361,symmetry_mean:.1167,fractal_dimension_mean:.06217,radius_se:.3344,texture_se:1.108,perimeter_se:1.902,area_se:22.77,smoothness_se:.007356,compactness_se:.03728,concavity_se:.05915,concave_points_se:.01712,symmetry_se:.02165,fractal_dimension_se:.004784,radius_worst:12.37,texture_worst:17.7,perimeter_worst:79.12,area_worst:467.2,smoothness_worst:.1121,compactness_worst:.161,concavity_worst:.1648,concave_points_worst:.06296,symmetry_worst:.1811,fractal_dimension_worst:.07427,"":""},{id:873885,diagnosis:"M",radius_mean:15.28,texture_mean:22.41,perimeter_mean:98.92,area_mean:710.6,smoothness_mean:.09057,compactness_mean:.1052,concavity_mean:.05375,concave_points_mean:.03263,symmetry_mean:.1727,fractal_dimension_mean:.06317,radius_se:.2054,texture_se:.4956,perimeter_se:1.344,area_se:19.53,smoothness_se:.00329,compactness_se:.01395,concavity_se:.01774,concave_points_se:.006009,symmetry_se:.01172,fractal_dimension_se:.002575,radius_worst:17.8,texture_worst:28.03,perimeter_worst:113.8,area_worst:973.1,smoothness_worst:.1301,compactness_worst:.3299,concavity_worst:.363,concave_points_worst:.1226,symmetry_worst:.3175,fractal_dimension_worst:.09772,"":""},{id:874158,diagnosis:"B",radius_mean:10.08,texture_mean:15.11,perimeter_mean:63.76,area_mean:317.5,smoothness_mean:.09267,compactness_mean:.04695,concavity_mean:.001597,concave_points_mean:.002404,symmetry_mean:.1703,fractal_dimension_mean:.06048,radius_se:.4245,texture_se:1.268,perimeter_se:2.68,area_se:26.43,smoothness_se:.01439,compactness_se:.012,concavity_se:.001597,concave_points_se:.002404,symmetry_se:.02538,fractal_dimension_se:.00347,radius_worst:11.87,texture_worst:21.18,perimeter_worst:75.39,area_worst:437,smoothness_worst:.1521,compactness_worst:.1019,concavity_worst:.00692,concave_points_worst:.01042,symmetry_worst:.2933,fractal_dimension_worst:.07697,"":""},{id:874217,diagnosis:"M",radius_mean:18.31,texture_mean:18.58,perimeter_mean:118.6,area_mean:1041,smoothness_mean:.08588,compactness_mean:.08468,concavity_mean:.08169,concave_points_mean:.05814,symmetry_mean:.1621,fractal_dimension_mean:.05425,radius_se:.2577,texture_se:.4757,perimeter_se:1.817,area_se:28.92,smoothness_se:.002866,compactness_se:.009181,concavity_se:.01412,concave_points_se:.006719,symmetry_se:.01069,fractal_dimension_se:.001087,radius_worst:21.31,texture_worst:26.36,perimeter_worst:139.2,area_worst:1410,smoothness_worst:.1234,compactness_worst:.2445,concavity_worst:.3538,concave_points_worst:.1571,symmetry_worst:.3206,fractal_dimension_worst:.06938,"":""},{id:874373,diagnosis:"B",radius_mean:11.71,texture_mean:17.19,perimeter_mean:74.68,area_mean:420.3,smoothness_mean:.09774,compactness_mean:.06141,concavity_mean:.03809,concave_points_mean:.03239,symmetry_mean:.1516,fractal_dimension_mean:.06095,radius_se:.2451,texture_se:.7655,perimeter_se:1.742,area_se:17.86,smoothness_se:.006905,compactness_se:.008704,concavity_se:.01978,concave_points_se:.01185,symmetry_se:.01897,fractal_dimension_se:.001671,radius_worst:13.01,texture_worst:21.39,perimeter_worst:84.42,area_worst:521.5,smoothness_worst:.1323,compactness_worst:.104,concavity_worst:.1521,concave_points_worst:.1099,symmetry_worst:.2572,fractal_dimension_worst:.07097,"":""},{id:874662,diagnosis:"B",radius_mean:11.81,texture_mean:17.39,perimeter_mean:75.27,area_mean:428.9,smoothness_mean:.1007,compactness_mean:.05562,concavity_mean:.02353,concave_points_mean:.01553,symmetry_mean:.1718,fractal_dimension_mean:.0578,radius_se:.1859,texture_se:1.926,perimeter_se:1.011,area_se:14.47,smoothness_se:.007831,compactness_se:.008776,concavity_se:.01556,concave_points_se:.00624,symmetry_se:.03139,fractal_dimension_se:.001988,radius_worst:12.57,texture_worst:26.48,perimeter_worst:79.57,area_worst:489.5,smoothness_worst:.1356,compactness_worst:.1,concavity_worst:.08803,concave_points_worst:.04306,symmetry_worst:.32,fractal_dimension_worst:.06576,"":""},{id:874839,diagnosis:"B",radius_mean:12.3,texture_mean:15.9,perimeter_mean:78.83,area_mean:463.7,smoothness_mean:.0808,compactness_mean:.07253,concavity_mean:.03844,concave_points_mean:.01654,symmetry_mean:.1667,fractal_dimension_mean:.05474,radius_se:.2382,texture_se:.8355,perimeter_se:1.687,area_se:18.32,smoothness_se:.005996,compactness_se:.02212,concavity_se:.02117,concave_points_se:.006433,symmetry_se:.02025,fractal_dimension_se:.001725,radius_worst:13.35,texture_worst:19.59,perimeter_worst:86.65,area_worst:546.7,smoothness_worst:.1096,compactness_worst:.165,concavity_worst:.1423,concave_points_worst:.04815,symmetry_worst:.2482,fractal_dimension_worst:.06306,"":""},{id:874858,diagnosis:"M",radius_mean:14.22,texture_mean:23.12,perimeter_mean:94.37,area_mean:609.9,smoothness_mean:.1075,compactness_mean:.2413,concavity_mean:.1981,concave_points_mean:.06618,symmetry_mean:.2384,fractal_dimension_mean:.07542,radius_se:.286,texture_se:2.11,perimeter_se:2.112,area_se:31.72,smoothness_se:.00797,compactness_se:.1354,concavity_se:.1166,concave_points_se:.01666,symmetry_se:.05113,fractal_dimension_se:.01172,radius_worst:15.74,texture_worst:37.18,perimeter_worst:106.4,area_worst:762.4,smoothness_worst:.1533,compactness_worst:.9327,concavity_worst:.8488,concave_points_worst:.1772,symmetry_worst:.5166,fractal_dimension_worst:.1446,"":""},{id:875093,diagnosis:"B",radius_mean:12.77,texture_mean:21.41,perimeter_mean:82.02,area_mean:507.4,smoothness_mean:.08749,compactness_mean:.06601,concavity_mean:.03112,concave_points_mean:.02864,symmetry_mean:.1694,fractal_dimension_mean:.06287,radius_se:.7311,texture_se:1.748,perimeter_se:5.118,area_se:53.65,smoothness_se:.004571,compactness_se:.0179,concavity_se:.02176,concave_points_se:.01757,symmetry_se:.03373,fractal_dimension_se:.005875,radius_worst:13.75,texture_worst:23.5,perimeter_worst:89.04,area_worst:579.5,smoothness_worst:.09388,compactness_worst:.08978,concavity_worst:.05186,concave_points_worst:.04773,symmetry_worst:.2179,fractal_dimension_worst:.06871,"":""},{id:875099,diagnosis:"B",radius_mean:9.72,texture_mean:18.22,perimeter_mean:60.73,area_mean:288.1,smoothness_mean:.0695,compactness_mean:.02344,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1653,fractal_dimension_mean:.06447,radius_se:.3539,texture_se:4.885,perimeter_se:2.23,area_se:21.69,smoothness_se:.001713,compactness_se:.006736,concavity_se:0,concave_points_se:0,symmetry_se:.03799,fractal_dimension_se:.001688,radius_worst:9.968,texture_worst:20.83,perimeter_worst:62.25,area_worst:303.8,smoothness_worst:.07117,compactness_worst:.02729,concavity_worst:0,concave_points_worst:0,symmetry_worst:.1909,fractal_dimension_worst:.06559,"":""},{id:875263,diagnosis:"M",radius_mean:12.34,texture_mean:26.86,perimeter_mean:81.15,area_mean:477.4,smoothness_mean:.1034,compactness_mean:.1353,concavity_mean:.1085,concave_points_mean:.04562,symmetry_mean:.1943,fractal_dimension_mean:.06937,radius_se:.4053,texture_se:1.809,perimeter_se:2.642,area_se:34.44,smoothness_se:.009098,compactness_se:.03845,concavity_se:.03763,concave_points_se:.01321,symmetry_se:.01878,fractal_dimension_se:.005672,radius_worst:15.65,texture_worst:39.34,perimeter_worst:101.7,area_worst:768.9,smoothness_worst:.1785,compactness_worst:.4706,concavity_worst:.4425,concave_points_worst:.1459,symmetry_worst:.3215,fractal_dimension_worst:.1205,"":""},{id:87556202,diagnosis:"M",radius_mean:14.86,texture_mean:23.21,perimeter_mean:100.4,area_mean:671.4,smoothness_mean:.1044,compactness_mean:.198,concavity_mean:.1697,concave_points_mean:.08878,symmetry_mean:.1737,fractal_dimension_mean:.06672,radius_se:.2796,texture_se:.9622,perimeter_se:3.591,area_se:25.2,smoothness_se:.008081,compactness_se:.05122,concavity_se:.05551,concave_points_se:.01883,symmetry_se:.02545,fractal_dimension_se:.004312,radius_worst:16.08,texture_worst:27.78,perimeter_worst:118.6,area_worst:784.7,smoothness_worst:.1316,compactness_worst:.4648,concavity_worst:.4589,concave_points_worst:.1727,symmetry_worst:.3,fractal_dimension_worst:.08701,"":""},{id:875878,diagnosis:"B",radius_mean:12.91,texture_mean:16.33,perimeter_mean:82.53,area_mean:516.4,smoothness_mean:.07941,compactness_mean:.05366,concavity_mean:.03873,concave_points_mean:.02377,symmetry_mean:.1829,fractal_dimension_mean:.05667,radius_se:.1942,texture_se:.9086,perimeter_se:1.493,area_se:15.75,smoothness_se:.005298,compactness_se:.01587,concavity_se:.02321,concave_points_se:.00842,symmetry_se:.01853,fractal_dimension_se:.002152,radius_worst:13.88,texture_worst:22,perimeter_worst:90.81,area_worst:600.6,smoothness_worst:.1097,compactness_worst:.1506,concavity_worst:.1764,concave_points_worst:.08235,symmetry_worst:.3024,fractal_dimension_worst:.06949,"":""},{id:875938,diagnosis:"M",radius_mean:13.77,texture_mean:22.29,perimeter_mean:90.63,area_mean:588.9,smoothness_mean:.12,compactness_mean:.1267,concavity_mean:.1385,concave_points_mean:.06526,symmetry_mean:.1834,fractal_dimension_mean:.06877,radius_se:.6191,texture_se:2.112,perimeter_se:4.906,area_se:49.7,smoothness_se:.0138,compactness_se:.03348,concavity_se:.04665,concave_points_se:.0206,symmetry_se:.02689,fractal_dimension_se:.004306,radius_worst:16.39,texture_worst:34.01,perimeter_worst:111.6,area_worst:806.9,smoothness_worst:.1737,compactness_worst:.3122,concavity_worst:.3809,concave_points_worst:.1673,symmetry_worst:.308,fractal_dimension_worst:.09333,"":""},{id:877159,diagnosis:"M",radius_mean:18.08,texture_mean:21.84,perimeter_mean:117.4,area_mean:1024,smoothness_mean:.07371,compactness_mean:.08642,concavity_mean:.1103,concave_points_mean:.05778,symmetry_mean:.177,fractal_dimension_mean:.0534,radius_se:.6362,texture_se:1.305,perimeter_se:4.312,area_se:76.36,smoothness_se:.00553,compactness_se:.05296,concavity_se:.0611,concave_points_se:.01444,symmetry_se:.0214,fractal_dimension_se:.005036,radius_worst:19.76,texture_worst:24.7,perimeter_worst:129.1,area_worst:1228,smoothness_worst:.08822,compactness_worst:.1963,concavity_worst:.2535,concave_points_worst:.09181,symmetry_worst:.2369,fractal_dimension_worst:.06558,"":""},{id:877486,diagnosis:"M",radius_mean:19.18,texture_mean:22.49,perimeter_mean:127.5,area_mean:1148,smoothness_mean:.08523,compactness_mean:.1428,concavity_mean:.1114,concave_points_mean:.06772,symmetry_mean:.1767,fractal_dimension_mean:.05529,radius_se:.4357,texture_se:1.073,perimeter_se:3.833,area_se:54.22,smoothness_se:.005524,compactness_se:.03698,concavity_se:.02706,concave_points_se:.01221,symmetry_se:.01415,fractal_dimension_se:.003397,radius_worst:23.36,texture_worst:32.06,perimeter_worst:166.4,area_worst:1688,smoothness_worst:.1322,compactness_worst:.5601,concavity_worst:.3865,concave_points_worst:.1708,symmetry_worst:.3193,fractal_dimension_worst:.09221,"":""},{id:877500,diagnosis:"M",radius_mean:14.45,texture_mean:20.22,perimeter_mean:94.49,area_mean:642.7,smoothness_mean:.09872,compactness_mean:.1206,concavity_mean:.118,concave_points_mean:.0598,symmetry_mean:.195,fractal_dimension_mean:.06466,radius_se:.2092,texture_se:.6509,perimeter_se:1.446,area_se:19.42,smoothness_se:.004044,compactness_se:.01597,concavity_se:.02,concave_points_se:.007303,symmetry_se:.01522,fractal_dimension_se:.001976,radius_worst:18.33,texture_worst:30.12,perimeter_worst:117.9,area_worst:1044,smoothness_worst:.1552,compactness_worst:.4056,concavity_worst:.4967,concave_points_worst:.1838,symmetry_worst:.4753,fractal_dimension_worst:.1013,"":""},{id:877501,diagnosis:"B",radius_mean:12.23,texture_mean:19.56,perimeter_mean:78.54,area_mean:461,smoothness_mean:.09586,compactness_mean:.08087,concavity_mean:.04187,concave_points_mean:.04107,symmetry_mean:.1979,fractal_dimension_mean:.06013,radius_se:.3534,texture_se:1.326,perimeter_se:2.308,area_se:27.24,smoothness_se:.007514,compactness_se:.01779,concavity_se:.01401,concave_points_se:.0114,symmetry_se:.01503,fractal_dimension_se:.003338,radius_worst:14.44,texture_worst:28.36,perimeter_worst:92.15,area_worst:638.4,smoothness_worst:.1429,compactness_worst:.2042,concavity_worst:.1377,concave_points_worst:.108,symmetry_worst:.2668,fractal_dimension_worst:.08174,"":""},{id:877989,diagnosis:"M",radius_mean:17.54,texture_mean:19.32,perimeter_mean:115.1,area_mean:951.6,smoothness_mean:.08968,compactness_mean:.1198,concavity_mean:.1036,concave_points_mean:.07488,symmetry_mean:.1506,fractal_dimension_mean:.05491,radius_se:.3971,texture_se:.8282,perimeter_se:3.088,area_se:40.73,smoothness_se:.00609,compactness_se:.02569,concavity_se:.02713,concave_points_se:.01345,symmetry_se:.01594,fractal_dimension_se:.002658,radius_worst:20.42,texture_worst:25.84,perimeter_worst:139.5,area_worst:1239,smoothness_worst:.1381,compactness_worst:.342,concavity_worst:.3508,concave_points_worst:.1939,symmetry_worst:.2928,fractal_dimension_worst:.07867,"":""},{id:878796,diagnosis:"M",radius_mean:23.29,texture_mean:26.67,perimeter_mean:158.9,area_mean:1685,smoothness_mean:.1141,compactness_mean:.2084,concavity_mean:.3523,concave_points_mean:.162,symmetry_mean:.22,fractal_dimension_mean:.06229,radius_se:.5539,texture_se:1.56,perimeter_se:4.667,area_se:83.16,smoothness_se:.009327,compactness_se:.05121,concavity_se:.08958,concave_points_se:.02465,symmetry_se:.02175,fractal_dimension_se:.005195,radius_worst:25.12,texture_worst:32.68,perimeter_worst:177,area_worst:1986,smoothness_worst:.1536,compactness_worst:.4167,concavity_worst:.7892,concave_points_worst:.2733,symmetry_worst:.3198,fractal_dimension_worst:.08762,"":""},{id:87880,diagnosis:"M",radius_mean:13.81,texture_mean:23.75,perimeter_mean:91.56,area_mean:597.8,smoothness_mean:.1323,compactness_mean:.1768,concavity_mean:.1558,concave_points_mean:.09176,symmetry_mean:.2251,fractal_dimension_mean:.07421,radius_se:.5648,texture_se:1.93,perimeter_se:3.909,area_se:52.72,smoothness_se:.008824,compactness_se:.03108,concavity_se:.03112,concave_points_se:.01291,symmetry_se:.01998,fractal_dimension_se:.004506,radius_worst:19.2,texture_worst:41.85,perimeter_worst:128.5,area_worst:1153,smoothness_worst:.2226,compactness_worst:.5209,concavity_worst:.4646,concave_points_worst:.2013,symmetry_worst:.4432,fractal_dimension_worst:.1086,"":""},{id:87930,diagnosis:"B",radius_mean:12.47,texture_mean:18.6,perimeter_mean:81.09,area_mean:481.9,smoothness_mean:.09965,compactness_mean:.1058,concavity_mean:.08005,concave_points_mean:.03821,symmetry_mean:.1925,fractal_dimension_mean:.06373,radius_se:.3961,texture_se:1.044,perimeter_se:2.497,area_se:30.29,smoothness_se:.006953,compactness_se:.01911,concavity_se:.02701,concave_points_se:.01037,symmetry_se:.01782,fractal_dimension_se:.003586,radius_worst:14.97,texture_worst:24.64,perimeter_worst:96.05,area_worst:677.9,smoothness_worst:.1426,compactness_worst:.2378,concavity_worst:.2671,concave_points_worst:.1015,symmetry_worst:.3014,fractal_dimension_worst:.0875,"":""},{id:879523,diagnosis:"M",radius_mean:15.12,texture_mean:16.68,perimeter_mean:98.78,area_mean:716.6,smoothness_mean:.08876,compactness_mean:.09588,concavity_mean:.0755,concave_points_mean:.04079,symmetry_mean:.1594,fractal_dimension_mean:.05986,radius_se:.2711,texture_se:.3621,perimeter_se:1.974,area_se:26.44,smoothness_se:.005472,compactness_se:.01919,concavity_se:.02039,concave_points_se:.00826,symmetry_se:.01523,fractal_dimension_se:.002881,radius_worst:17.77,texture_worst:20.24,perimeter_worst:117.7,area_worst:989.5,smoothness_worst:.1491,compactness_worst:.3331,concavity_worst:.3327,concave_points_worst:.1252,symmetry_worst:.3415,fractal_dimension_worst:.0974,"":""},{id:879804,diagnosis:"B",radius_mean:9.876,texture_mean:17.27,perimeter_mean:62.92,area_mean:295.4,smoothness_mean:.1089,compactness_mean:.07232,concavity_mean:.01756,concave_points_mean:.01952,symmetry_mean:.1934,fractal_dimension_mean:.06285,radius_se:.2137,texture_se:1.342,perimeter_se:1.517,area_se:12.33,smoothness_se:.009719,compactness_se:.01249,concavity_se:.007975,concave_points_se:.007527,symmetry_se:.0221,fractal_dimension_se:.002472,radius_worst:10.42,texture_worst:23.22,perimeter_worst:67.08,area_worst:331.6,smoothness_worst:.1415,compactness_worst:.1247,concavity_worst:.06213,concave_points_worst:.05588,symmetry_worst:.2989,fractal_dimension_worst:.0738,"":""},{id:879830,diagnosis:"M",radius_mean:17.01,texture_mean:20.26,perimeter_mean:109.7,area_mean:904.3,smoothness_mean:.08772,compactness_mean:.07304,concavity_mean:.0695,concave_points_mean:.0539,symmetry_mean:.2026,fractal_dimension_mean:.05223,radius_se:.5858,texture_se:.8554,perimeter_se:4.106,area_se:68.46,smoothness_se:.005038,compactness_se:.01503,concavity_se:.01946,concave_points_se:.01123,symmetry_se:.02294,fractal_dimension_se:.002581,radius_worst:19.8,texture_worst:25.05,perimeter_worst:130,area_worst:1210,smoothness_worst:.1111,compactness_worst:.1486,concavity_worst:.1932,concave_points_worst:.1096,symmetry_worst:.3275,fractal_dimension_worst:.06469,"":""},{id:8810158,diagnosis:"B",radius_mean:13.11,texture_mean:22.54,perimeter_mean:87.02,area_mean:529.4,smoothness_mean:.1002,compactness_mean:.1483,concavity_mean:.08705,concave_points_mean:.05102,symmetry_mean:.185,fractal_dimension_mean:.0731,radius_se:.1931,texture_se:.9223,perimeter_se:1.491,area_se:15.09,smoothness_se:.005251,compactness_se:.03041,concavity_se:.02526,concave_points_se:.008304,symmetry_se:.02514,fractal_dimension_se:.004198,radius_worst:14.55,texture_worst:29.16,perimeter_worst:99.48,area_worst:639.3,smoothness_worst:.1349,compactness_worst:.4402,concavity_worst:.3162,concave_points_worst:.1126,symmetry_worst:.4128,fractal_dimension_worst:.1076,"":""},{id:8810436,diagnosis:"B",radius_mean:15.27,texture_mean:12.91,perimeter_mean:98.17,area_mean:725.5,smoothness_mean:.08182,compactness_mean:.0623,concavity_mean:.05892,concave_points_mean:.03157,symmetry_mean:.1359,fractal_dimension_mean:.05526,radius_se:.2134,texture_se:.3628,perimeter_se:1.525,area_se:20,smoothness_se:.004291,compactness_se:.01236,concavity_se:.01841,concave_points_se:.007373,symmetry_se:.009539,fractal_dimension_se:.001656,radius_worst:17.38,texture_worst:15.92,perimeter_worst:113.7,area_worst:932.7,smoothness_worst:.1222,compactness_worst:.2186,concavity_worst:.2962,concave_points_worst:.1035,symmetry_worst:.232,fractal_dimension_worst:.07474,"":""},{id:881046502,diagnosis:"M",radius_mean:20.58,texture_mean:22.14,perimeter_mean:134.7,area_mean:1290,smoothness_mean:.0909,compactness_mean:.1348,concavity_mean:.164,concave_points_mean:.09561,symmetry_mean:.1765,fractal_dimension_mean:.05024,radius_se:.8601,texture_se:1.48,perimeter_se:7.029,area_se:111.7,smoothness_se:.008124,compactness_se:.03611,concavity_se:.05489,concave_points_se:.02765,symmetry_se:.03176,fractal_dimension_se:.002365,radius_worst:23.24,texture_worst:27.84,perimeter_worst:158.3,area_worst:1656,smoothness_worst:.1178,compactness_worst:.292,concavity_worst:.3861,concave_points_worst:.192,symmetry_worst:.2909,fractal_dimension_worst:.05865,"":""},{id:8810528,diagnosis:"B",radius_mean:11.84,texture_mean:18.94,perimeter_mean:75.51,area_mean:428,smoothness_mean:.08871,compactness_mean:.069,concavity_mean:.02669,concave_points_mean:.01393,symmetry_mean:.1533,fractal_dimension_mean:.06057,radius_se:.2222,texture_se:.8652,perimeter_se:1.444,area_se:17.12,smoothness_se:.005517,compactness_se:.01727,concavity_se:.02045,concave_points_se:.006747,symmetry_se:.01616,fractal_dimension_se:.002922,radius_worst:13.3,texture_worst:24.99,perimeter_worst:85.22,area_worst:546.3,smoothness_worst:.128,compactness_worst:.188,concavity_worst:.1471,concave_points_worst:.06913,symmetry_worst:.2535,fractal_dimension_worst:.07993,"":""},{id:8810703,diagnosis:"M",radius_mean:28.11,texture_mean:18.47,perimeter_mean:188.5,area_mean:2499,smoothness_mean:.1142,compactness_mean:.1516,concavity_mean:.3201,concave_points_mean:.1595,symmetry_mean:.1648,fractal_dimension_mean:.05525,radius_se:2.873,texture_se:1.476,perimeter_se:21.98,area_se:525.6,smoothness_se:.01345,compactness_se:.02772,concavity_se:.06389,concave_points_se:.01407,symmetry_se:.04783,fractal_dimension_se:.004476,radius_worst:28.11,texture_worst:18.47,perimeter_worst:188.5,area_worst:2499,smoothness_worst:.1142,compactness_worst:.1516,concavity_worst:.3201,concave_points_worst:.1595,symmetry_worst:.1648,fractal_dimension_worst:.05525,"":""},{id:881094802,diagnosis:"M",radius_mean:17.42,texture_mean:25.56,perimeter_mean:114.5,area_mean:948,smoothness_mean:.1006,compactness_mean:.1146,concavity_mean:.1682,concave_points_mean:.06597,symmetry_mean:.1308,fractal_dimension_mean:.05866,radius_se:.5296,texture_se:1.667,perimeter_se:3.767,area_se:58.53,smoothness_se:.03113,compactness_se:.08555,concavity_se:.1438,concave_points_se:.03927,symmetry_se:.02175,fractal_dimension_se:.01256,radius_worst:18.07,texture_worst:28.07,perimeter_worst:120.4,area_worst:1021,smoothness_worst:.1243,compactness_worst:.1793,concavity_worst:.2803,concave_points_worst:.1099,symmetry_worst:.1603,fractal_dimension_worst:.06818,"":""},{id:8810955,diagnosis:"M",radius_mean:14.19,texture_mean:23.81,perimeter_mean:92.87,area_mean:610.7,smoothness_mean:.09463,compactness_mean:.1306,concavity_mean:.1115,concave_points_mean:.06462,symmetry_mean:.2235,fractal_dimension_mean:.06433,radius_se:.4207,texture_se:1.845,perimeter_se:3.534,area_se:31,smoothness_se:.01088,compactness_se:.0371,concavity_se:.03688,concave_points_se:.01627,symmetry_se:.04499,fractal_dimension_se:.004768,radius_worst:16.86,texture_worst:34.85,perimeter_worst:115,area_worst:811.3,smoothness_worst:.1559,compactness_worst:.4059,concavity_worst:.3744,concave_points_worst:.1772,symmetry_worst:.4724,fractal_dimension_worst:.1026,"":""},{id:8810987,diagnosis:"M",radius_mean:13.86,texture_mean:16.93,perimeter_mean:90.96,area_mean:578.9,smoothness_mean:.1026,compactness_mean:.1517,concavity_mean:.09901,concave_points_mean:.05602,symmetry_mean:.2106,fractal_dimension_mean:.06916,radius_se:.2563,texture_se:1.194,perimeter_se:1.933,area_se:22.69,smoothness_se:.00596,compactness_se:.03438,concavity_se:.03909,concave_points_se:.01435,symmetry_se:.01939,fractal_dimension_se:.00456,radius_worst:15.75,texture_worst:26.93,perimeter_worst:104.4,area_worst:750.1,smoothness_worst:.146,compactness_worst:.437,concavity_worst:.4636,concave_points_worst:.1654,symmetry_worst:.363,fractal_dimension_worst:.1059,"":""},{id:8811523,diagnosis:"B",radius_mean:11.89,texture_mean:18.35,perimeter_mean:77.32,area_mean:432.2,smoothness_mean:.09363,compactness_mean:.1154,concavity_mean:.06636,concave_points_mean:.03142,symmetry_mean:.1967,fractal_dimension_mean:.06314,radius_se:.2963,texture_se:1.563,perimeter_se:2.087,area_se:21.46,smoothness_se:.008872,compactness_se:.04192,concavity_se:.05946,concave_points_se:.01785,symmetry_se:.02793,fractal_dimension_se:.004775,radius_worst:13.25,texture_worst:27.1,perimeter_worst:86.2,area_worst:531.2,smoothness_worst:.1405,compactness_worst:.3046,concavity_worst:.2806,concave_points_worst:.1138,symmetry_worst:.3397,fractal_dimension_worst:.08365,"":""},{id:8811779,diagnosis:"B",radius_mean:10.2,texture_mean:17.48,perimeter_mean:65.05,area_mean:321.2,smoothness_mean:.08054,compactness_mean:.05907,concavity_mean:.05774,concave_points_mean:.01071,symmetry_mean:.1964,fractal_dimension_mean:.06315,radius_se:.3567,texture_se:1.922,perimeter_se:2.747,area_se:22.79,smoothness_se:.00468,compactness_se:.0312,concavity_se:.05774,concave_points_se:.01071,symmetry_se:.0256,fractal_dimension_se:.004613,radius_worst:11.48,texture_worst:24.47,perimeter_worst:75.4,area_worst:403.7,smoothness_worst:.09527,compactness_worst:.1397,concavity_worst:.1925,concave_points_worst:.03571,symmetry_worst:.2868,fractal_dimension_worst:.07809,"":""},{id:8811842,diagnosis:"M",radius_mean:19.8,texture_mean:21.56,perimeter_mean:129.7,area_mean:1230,smoothness_mean:.09383,compactness_mean:.1306,concavity_mean:.1272,concave_points_mean:.08691,symmetry_mean:.2094,fractal_dimension_mean:.05581,radius_se:.9553,texture_se:1.186,perimeter_se:6.487,area_se:124.4,smoothness_se:.006804,compactness_se:.03169,concavity_se:.03446,concave_points_se:.01712,symmetry_se:.01897,fractal_dimension_se:.004045,radius_worst:25.73,texture_worst:28.64,perimeter_worst:170.3,area_worst:2009,smoothness_worst:.1353,compactness_worst:.3235,concavity_worst:.3617,concave_points_worst:.182,symmetry_worst:.307,fractal_dimension_worst:.08255,"":""},{id:88119002,diagnosis:"M",radius_mean:19.53,texture_mean:32.47,perimeter_mean:128,area_mean:1223,smoothness_mean:.0842,compactness_mean:.113,concavity_mean:.1145,concave_points_mean:.06637,symmetry_mean:.1428,fractal_dimension_mean:.05313,radius_se:.7392,texture_se:1.321,perimeter_se:4.722,area_se:109.9,smoothness_se:.005539,compactness_se:.02644,concavity_se:.02664,concave_points_se:.01078,symmetry_se:.01332,fractal_dimension_se:.002256,radius_worst:27.9,texture_worst:45.41,perimeter_worst:180.2,area_worst:2477,smoothness_worst:.1408,compactness_worst:.4097,concavity_worst:.3995,concave_points_worst:.1625,symmetry_worst:.2713,fractal_dimension_worst:.07568,"":""},{id:8812816,diagnosis:"B",radius_mean:13.65,texture_mean:13.16,perimeter_mean:87.88,area_mean:568.9,smoothness_mean:.09646,compactness_mean:.08711,concavity_mean:.03888,concave_points_mean:.02563,symmetry_mean:.136,fractal_dimension_mean:.06344,radius_se:.2102,texture_se:.4336,perimeter_se:1.391,area_se:17.4,smoothness_se:.004133,compactness_se:.01695,concavity_se:.01652,concave_points_se:.006659,symmetry_se:.01371,fractal_dimension_se:.002735,radius_worst:15.34,texture_worst:16.35,perimeter_worst:99.71,area_worst:706.2,smoothness_worst:.1311,compactness_worst:.2474,concavity_worst:.1759,concave_points_worst:.08056,symmetry_worst:.238,fractal_dimension_worst:.08718,"":""},{id:8812818,diagnosis:"B",radius_mean:13.56,texture_mean:13.9,perimeter_mean:88.59,area_mean:561.3,smoothness_mean:.1051,compactness_mean:.1192,concavity_mean:.0786,concave_points_mean:.04451,symmetry_mean:.1962,fractal_dimension_mean:.06303,radius_se:.2569,texture_se:.4981,perimeter_se:2.011,area_se:21.03,smoothness_se:.005851,compactness_se:.02314,concavity_se:.02544,concave_points_se:.00836,symmetry_se:.01842,fractal_dimension_se:.002918,radius_worst:14.98,texture_worst:17.13,perimeter_worst:101.1,area_worst:686.6,smoothness_worst:.1376,compactness_worst:.2698,concavity_worst:.2577,concave_points_worst:.0909,symmetry_worst:.3065,fractal_dimension_worst:.08177,"":""},{id:8812844,diagnosis:"B",radius_mean:10.18,texture_mean:17.53,perimeter_mean:65.12,area_mean:313.1,smoothness_mean:.1061,compactness_mean:.08502,concavity_mean:.01768,concave_points_mean:.01915,symmetry_mean:.191,fractal_dimension_mean:.06908,radius_se:.2467,texture_se:1.217,perimeter_se:1.641,area_se:15.05,smoothness_se:.007899,compactness_se:.014,concavity_se:.008534,concave_points_se:.007624,symmetry_se:.02637,fractal_dimension_se:.003761,radius_worst:11.17,texture_worst:22.84,perimeter_worst:71.94,area_worst:375.6,smoothness_worst:.1406,compactness_worst:.144,concavity_worst:.06572,concave_points_worst:.05575,symmetry_worst:.3055,fractal_dimension_worst:.08797,"":""},{id:8812877,diagnosis:"M",radius_mean:15.75,texture_mean:20.25,perimeter_mean:102.6,area_mean:761.3,smoothness_mean:.1025,compactness_mean:.1204,concavity_mean:.1147,concave_points_mean:.06462,symmetry_mean:.1935,fractal_dimension_mean:.06303,radius_se:.3473,texture_se:.9209,perimeter_se:2.244,area_se:32.19,smoothness_se:.004766,compactness_se:.02374,concavity_se:.02384,concave_points_se:.008637,symmetry_se:.01772,fractal_dimension_se:.003131,radius_worst:19.56,texture_worst:30.29,perimeter_worst:125.9,area_worst:1088,smoothness_worst:.1552,compactness_worst:.448,concavity_worst:.3976,concave_points_worst:.1479,symmetry_worst:.3993,fractal_dimension_worst:.1064,"":""},{id:8813129,diagnosis:"B",radius_mean:13.27,texture_mean:17.02,perimeter_mean:84.55,area_mean:546.4,smoothness_mean:.08445,compactness_mean:.04994,concavity_mean:.03554,concave_points_mean:.02456,symmetry_mean:.1496,fractal_dimension_mean:.05674,radius_se:.2927,texture_se:.8907,perimeter_se:2.044,area_se:24.68,smoothness_se:.006032,compactness_se:.01104,concavity_se:.02259,concave_points_se:.009057,symmetry_se:.01482,fractal_dimension_se:.002496,radius_worst:15.14,texture_worst:23.6,perimeter_worst:98.84,area_worst:708.8,smoothness_worst:.1276,compactness_worst:.1311,concavity_worst:.1786,concave_points_worst:.09678,symmetry_worst:.2506,fractal_dimension_worst:.07623,"":""},{id:88143502,diagnosis:"B",radius_mean:14.34,texture_mean:13.47,perimeter_mean:92.51,area_mean:641.2,smoothness_mean:.09906,compactness_mean:.07624,concavity_mean:.05724,concave_points_mean:.04603,symmetry_mean:.2075,fractal_dimension_mean:.05448,radius_se:.522,texture_se:.8121,perimeter_se:3.763,area_se:48.29,smoothness_se:.007089,compactness_se:.01428,concavity_se:.0236,concave_points_se:.01286,symmetry_se:.02266,fractal_dimension_se:.001463,radius_worst:16.77,texture_worst:16.9,perimeter_worst:110.4,area_worst:873.2,smoothness_worst:.1297,compactness_worst:.1525,concavity_worst:.1632,concave_points_worst:.1087,symmetry_worst:.3062,fractal_dimension_worst:.06072,"":""},{id:88147101,diagnosis:"B",radius_mean:10.44,texture_mean:15.46,perimeter_mean:66.62,area_mean:329.6,smoothness_mean:.1053,compactness_mean:.07722,concavity_mean:.006643,concave_points_mean:.01216,symmetry_mean:.1788,fractal_dimension_mean:.0645,radius_se:.1913,texture_se:.9027,perimeter_se:1.208,area_se:11.86,smoothness_se:.006513,compactness_se:.008061,concavity_se:.002817,concave_points_se:.004972,symmetry_se:.01502,fractal_dimension_se:.002821,radius_worst:11.52,texture_worst:19.8,perimeter_worst:73.47,area_worst:395.4,smoothness_worst:.1341,compactness_worst:.1153,concavity_worst:.02639,concave_points_worst:.04464,symmetry_worst:.2615,fractal_dimension_worst:.08269,"":""},{id:88147102,diagnosis:"B",radius_mean:15,texture_mean:15.51,perimeter_mean:97.45,area_mean:684.5,smoothness_mean:.08371,compactness_mean:.1096,concavity_mean:.06505,concave_points_mean:.0378,symmetry_mean:.1881,fractal_dimension_mean:.05907,radius_se:.2318,texture_se:.4966,perimeter_se:2.276,area_se:19.88,smoothness_se:.004119,compactness_se:.03207,concavity_se:.03644,concave_points_se:.01155,symmetry_se:.01391,fractal_dimension_se:.003204,radius_worst:16.41,texture_worst:19.31,perimeter_worst:114.2,area_worst:808.2,smoothness_worst:.1136,compactness_worst:.3627,concavity_worst:.3402,concave_points_worst:.1379,symmetry_worst:.2954,fractal_dimension_worst:.08362,"":""},{id:88147202,diagnosis:"B",radius_mean:12.62,texture_mean:23.97,perimeter_mean:81.35,area_mean:496.4,smoothness_mean:.07903,compactness_mean:.07529,concavity_mean:.05438,concave_points_mean:.02036,symmetry_mean:.1514,fractal_dimension_mean:.06019,radius_se:.2449,texture_se:1.066,perimeter_se:1.445,area_se:18.51,smoothness_se:.005169,compactness_se:.02294,concavity_se:.03016,concave_points_se:.008691,symmetry_se:.01365,fractal_dimension_se:.003407,radius_worst:14.2,texture_worst:31.31,perimeter_worst:90.67,area_worst:624,smoothness_worst:.1227,compactness_worst:.3454,concavity_worst:.3911,concave_points_worst:.118,symmetry_worst:.2826,fractal_dimension_worst:.09585,"":""},{id:881861,diagnosis:"M",radius_mean:12.83,texture_mean:22.33,perimeter_mean:85.26,area_mean:503.2,smoothness_mean:.1088,compactness_mean:.1799,concavity_mean:.1695,concave_points_mean:.06861,symmetry_mean:.2123,fractal_dimension_mean:.07254,radius_se:.3061,texture_se:1.069,perimeter_se:2.257,area_se:25.13,smoothness_se:.006983,compactness_se:.03858,concavity_se:.04683,concave_points_se:.01499,symmetry_se:.0168,fractal_dimension_se:.005617,radius_worst:15.2,texture_worst:30.15,perimeter_worst:105.3,area_worst:706,smoothness_worst:.1777,compactness_worst:.5343,concavity_worst:.6282,concave_points_worst:.1977,symmetry_worst:.3407,fractal_dimension_worst:.1243,"":""},{id:881972,diagnosis:"M",radius_mean:17.05,texture_mean:19.08,perimeter_mean:113.4,area_mean:895,smoothness_mean:.1141,compactness_mean:.1572,concavity_mean:.191,concave_points_mean:.109,symmetry_mean:.2131,fractal_dimension_mean:.06325,radius_se:.2959,texture_se:.679,perimeter_se:2.153,area_se:31.98,smoothness_se:.005532,compactness_se:.02008,concavity_se:.03055,concave_points_se:.01384,symmetry_se:.01177,fractal_dimension_se:.002336,radius_worst:19.59,texture_worst:24.89,perimeter_worst:133.5,area_worst:1189,smoothness_worst:.1703,compactness_worst:.3934,concavity_worst:.5018,concave_points_worst:.2543,symmetry_worst:.3109,fractal_dimension_worst:.09061,"":""},{id:88199202,diagnosis:"B",radius_mean:11.32,texture_mean:27.08,perimeter_mean:71.76,area_mean:395.7,smoothness_mean:.06883,compactness_mean:.03813,concavity_mean:.01633,concave_points_mean:.003125,symmetry_mean:.1869,fractal_dimension_mean:.05628,radius_se:.121,texture_se:.8927,perimeter_se:1.059,area_se:8.605,smoothness_se:.003653,compactness_se:.01647,concavity_se:.01633,concave_points_se:.003125,symmetry_se:.01537,fractal_dimension_se:.002052,radius_worst:12.08,texture_worst:33.75,perimeter_worst:79.82,area_worst:452.3,smoothness_worst:.09203,compactness_worst:.1432,concavity_worst:.1089,concave_points_worst:.02083,symmetry_worst:.2849,fractal_dimension_worst:.07087,"":""},{id:88203002,diagnosis:"B",radius_mean:11.22,texture_mean:33.81,perimeter_mean:70.79,area_mean:386.8,smoothness_mean:.0778,compactness_mean:.03574,concavity_mean:.004967,concave_points_mean:.006434,symmetry_mean:.1845,fractal_dimension_mean:.05828,radius_se:.2239,texture_se:1.647,perimeter_se:1.489,area_se:15.46,smoothness_se:.004359,compactness_se:.006813,concavity_se:.003223,concave_points_se:.003419,symmetry_se:.01916,fractal_dimension_se:.002534,radius_worst:12.36,texture_worst:41.78,perimeter_worst:78.44,area_worst:470.9,smoothness_worst:.09994,compactness_worst:.06885,concavity_worst:.02318,concave_points_worst:.03002,symmetry_worst:.2911,fractal_dimension_worst:.07307,"":""},{id:88206102,diagnosis:"M",radius_mean:20.51,texture_mean:27.81,perimeter_mean:134.4,area_mean:1319,smoothness_mean:.09159,compactness_mean:.1074,concavity_mean:.1554,concave_points_mean:.0834,symmetry_mean:.1448,fractal_dimension_mean:.05592,radius_se:.524,texture_se:1.189,perimeter_se:3.767,area_se:70.01,smoothness_se:.00502,compactness_se:.02062,concavity_se:.03457,concave_points_se:.01091,symmetry_se:.01298,fractal_dimension_se:.002887,radius_worst:24.47,texture_worst:37.38,perimeter_worst:162.7,area_worst:1872,smoothness_worst:.1223,compactness_worst:.2761,concavity_worst:.4146,concave_points_worst:.1563,symmetry_worst:.2437,fractal_dimension_worst:.08328,"":""},{id:882488,diagnosis:"B",radius_mean:9.567,texture_mean:15.91,perimeter_mean:60.21,area_mean:279.6,smoothness_mean:.08464,compactness_mean:.04087,concavity_mean:.01652,concave_points_mean:.01667,symmetry_mean:.1551,fractal_dimension_mean:.06403,radius_se:.2152,texture_se:.8301,perimeter_se:1.215,area_se:12.64,smoothness_se:.01164,compactness_se:.0104,concavity_se:.01186,concave_points_se:.009623,symmetry_se:.02383,fractal_dimension_se:.00354,radius_worst:10.51,texture_worst:19.16,perimeter_worst:65.74,area_worst:335.9,smoothness_worst:.1504,compactness_worst:.09515,concavity_worst:.07161,concave_points_worst:.07222,symmetry_worst:.2757,fractal_dimension_worst:.08178,"":""},{id:88249602,diagnosis:"B",radius_mean:14.03,texture_mean:21.25,perimeter_mean:89.79,area_mean:603.4,smoothness_mean:.0907,compactness_mean:.06945,concavity_mean:.01462,concave_points_mean:.01896,symmetry_mean:.1517,fractal_dimension_mean:.05835,radius_se:.2589,texture_se:1.503,perimeter_se:1.667,area_se:22.07,smoothness_se:.007389,compactness_se:.01383,concavity_se:.007302,concave_points_se:.01004,symmetry_se:.01263,fractal_dimension_se:.002925,radius_worst:15.33,texture_worst:30.28,perimeter_worst:98.27,area_worst:715.5,smoothness_worst:.1287,compactness_worst:.1513,concavity_worst:.06231,concave_points_worst:.07963,symmetry_worst:.2226,fractal_dimension_worst:.07617,"":""},{id:88299702,diagnosis:"M",radius_mean:23.21,texture_mean:26.97,perimeter_mean:153.5,area_mean:1670,smoothness_mean:.09509,compactness_mean:.1682,concavity_mean:.195,concave_points_mean:.1237,symmetry_mean:.1909,fractal_dimension_mean:.06309,radius_se:1.058,texture_se:.9635,perimeter_se:7.247,area_se:155.8,smoothness_se:.006428,compactness_se:.02863,concavity_se:.04497,concave_points_se:.01716,symmetry_se:.0159,fractal_dimension_se:.003053,radius_worst:31.01,texture_worst:34.51,perimeter_worst:206,area_worst:2944,smoothness_worst:.1481,compactness_worst:.4126,concavity_worst:.582,concave_points_worst:.2593,symmetry_worst:.3103,fractal_dimension_worst:.08677,"":""},{id:883263,diagnosis:"M",radius_mean:20.48,texture_mean:21.46,perimeter_mean:132.5,area_mean:1306,smoothness_mean:.08355,compactness_mean:.08348,concavity_mean:.09042,concave_points_mean:.06022,symmetry_mean:.1467,fractal_dimension_mean:.05177,radius_se:.6874,texture_se:1.041,perimeter_se:5.144,area_se:83.5,smoothness_se:.007959,compactness_se:.03133,concavity_se:.04257,concave_points_se:.01671,symmetry_se:.01341,fractal_dimension_se:.003933,radius_worst:24.22,texture_worst:26.17,perimeter_worst:161.7,area_worst:1750,smoothness_worst:.1228,compactness_worst:.2311,concavity_worst:.3158,concave_points_worst:.1445,symmetry_worst:.2238,fractal_dimension_worst:.07127,"":""},{id:883270,diagnosis:"B",radius_mean:14.22,texture_mean:27.85,perimeter_mean:92.55,area_mean:623.9,smoothness_mean:.08223,compactness_mean:.1039,concavity_mean:.1103,concave_points_mean:.04408,symmetry_mean:.1342,fractal_dimension_mean:.06129,radius_se:.3354,texture_se:2.324,perimeter_se:2.105,area_se:29.96,smoothness_se:.006307,compactness_se:.02845,concavity_se:.0385,concave_points_se:.01011,symmetry_se:.01185,fractal_dimension_se:.003589,radius_worst:15.75,texture_worst:40.54,perimeter_worst:102.5,area_worst:764,smoothness_worst:.1081,compactness_worst:.2426,concavity_worst:.3064,concave_points_worst:.08219,symmetry_worst:.189,fractal_dimension_worst:.07796,"":""},{id:88330202,diagnosis:"M",radius_mean:17.46,texture_mean:39.28,perimeter_mean:113.4,area_mean:920.6,smoothness_mean:.09812,compactness_mean:.1298,concavity_mean:.1417,concave_points_mean:.08811,symmetry_mean:.1809,fractal_dimension_mean:.05966,radius_se:.5366,texture_se:.8561,perimeter_se:3.002,area_se:49,smoothness_se:.00486,compactness_se:.02785,concavity_se:.02602,concave_points_se:.01374,symmetry_se:.01226,fractal_dimension_se:.002759,radius_worst:22.51,texture_worst:44.87,perimeter_worst:141.2,area_worst:1408,smoothness_worst:.1365,compactness_worst:.3735,concavity_worst:.3241,concave_points_worst:.2066,symmetry_worst:.2853,fractal_dimension_worst:.08496,"":""},{id:88350402,diagnosis:"B",radius_mean:13.64,texture_mean:15.6,perimeter_mean:87.38,area_mean:575.3,smoothness_mean:.09423,compactness_mean:.0663,concavity_mean:.04705,concave_points_mean:.03731,symmetry_mean:.1717,fractal_dimension_mean:.0566,radius_se:.3242,texture_se:.6612,perimeter_se:1.996,area_se:27.19,smoothness_se:.00647,compactness_se:.01248,concavity_se:.0181,concave_points_se:.01103,symmetry_se:.01898,fractal_dimension_se:.001794,radius_worst:14.85,texture_worst:19.05,perimeter_worst:94.11,area_worst:683.4,smoothness_worst:.1278,compactness_worst:.1291,concavity_worst:.1533,concave_points_worst:.09222,symmetry_worst:.253,fractal_dimension_worst:.0651,"":""},{id:883539,diagnosis:"B",radius_mean:12.42,texture_mean:15.04,perimeter_mean:78.61,area_mean:476.5,smoothness_mean:.07926,compactness_mean:.03393,concavity_mean:.01053,concave_points_mean:.01108,symmetry_mean:.1546,fractal_dimension_mean:.05754,radius_se:.1153,texture_se:.6745,perimeter_se:.757,area_se:9.006,smoothness_se:.003265,compactness_se:.00493,concavity_se:.006493,concave_points_se:.003762,symmetry_se:.0172,fractal_dimension_se:.00136,radius_worst:13.2,texture_worst:20.37,perimeter_worst:83.85,area_worst:543.4,smoothness_worst:.1037,compactness_worst:.07776,concavity_worst:.06243,concave_points_worst:.04052,symmetry_worst:.2901,fractal_dimension_worst:.06783,"":""},{id:883852,diagnosis:"B",radius_mean:11.3,texture_mean:18.19,perimeter_mean:73.93,area_mean:389.4,smoothness_mean:.09592,compactness_mean:.1325,concavity_mean:.1548,concave_points_mean:.02854,symmetry_mean:.2054,fractal_dimension_mean:.07669,radius_se:.2428,texture_se:1.642,perimeter_se:2.369,area_se:16.39,smoothness_se:.006663,compactness_se:.05914,concavity_se:.0888,concave_points_se:.01314,symmetry_se:.01995,fractal_dimension_se:.008675,radius_worst:12.58,texture_worst:27.96,perimeter_worst:87.16,area_worst:472.9,smoothness_worst:.1347,compactness_worst:.4848,concavity_worst:.7436,concave_points_worst:.1218,symmetry_worst:.3308,fractal_dimension_worst:.1297,"":""},{id:88411702,diagnosis:"B",radius_mean:13.75,texture_mean:23.77,perimeter_mean:88.54,area_mean:590,smoothness_mean:.08043,compactness_mean:.06807,concavity_mean:.04697,concave_points_mean:.02344,symmetry_mean:.1773,fractal_dimension_mean:.05429,radius_se:.4347,texture_se:1.057,perimeter_se:2.829,area_se:39.93,smoothness_se:.004351,compactness_se:.02667,concavity_se:.03371,concave_points_se:.01007,symmetry_se:.02598,fractal_dimension_se:.003087,radius_worst:15.01,texture_worst:26.34,perimeter_worst:98,area_worst:706,smoothness_worst:.09368,compactness_worst:.1442,concavity_worst:.1359,concave_points_worst:.06106,symmetry_worst:.2663,fractal_dimension_worst:.06321,"":""},{id:884180,diagnosis:"M",radius_mean:19.4,texture_mean:23.5,perimeter_mean:129.1,area_mean:1155,smoothness_mean:.1027,compactness_mean:.1558,concavity_mean:.2049,concave_points_mean:.08886,symmetry_mean:.1978,fractal_dimension_mean:.06,radius_se:.5243,texture_se:1.802,perimeter_se:4.037,area_se:60.41,smoothness_se:.01061,compactness_se:.03252,concavity_se:.03915,concave_points_se:.01559,symmetry_se:.02186,fractal_dimension_se:.003949,radius_worst:21.65,texture_worst:30.53,perimeter_worst:144.9,area_worst:1417,smoothness_worst:.1463,compactness_worst:.2968,concavity_worst:.3458,concave_points_worst:.1564,symmetry_worst:.292,fractal_dimension_worst:.07614,"":""},{id:884437,diagnosis:"B",radius_mean:10.48,texture_mean:19.86,perimeter_mean:66.72,area_mean:337.7,smoothness_mean:.107,compactness_mean:.05971,concavity_mean:.04831,concave_points_mean:.0307,symmetry_mean:.1737,fractal_dimension_mean:.0644,radius_se:.3719,texture_se:2.612,perimeter_se:2.517,area_se:23.22,smoothness_se:.01604,compactness_se:.01386,concavity_se:.01865,concave_points_se:.01133,symmetry_se:.03476,fractal_dimension_se:.00356,radius_worst:11.48,texture_worst:29.46,perimeter_worst:73.68,area_worst:402.8,smoothness_worst:.1515,compactness_worst:.1026,concavity_worst:.1181,concave_points_worst:.06736,symmetry_worst:.2883,fractal_dimension_worst:.07748,"":""},{id:884448,diagnosis:"B",radius_mean:13.2,texture_mean:17.43,perimeter_mean:84.13,area_mean:541.6,smoothness_mean:.07215,compactness_mean:.04524,concavity_mean:.04336,concave_points_mean:.01105,symmetry_mean:.1487,fractal_dimension_mean:.05635,radius_se:.163,texture_se:1.601,perimeter_se:.873,area_se:13.56,smoothness_se:.006261,compactness_se:.01569,concavity_se:.03079,concave_points_se:.005383,symmetry_se:.01962,fractal_dimension_se:.00225,radius_worst:13.94,texture_worst:27.82,perimeter_worst:88.28,area_worst:602,smoothness_worst:.1101,compactness_worst:.1508,concavity_worst:.2298,concave_points_worst:.0497,symmetry_worst:.2767,fractal_dimension_worst:.07198,"":""},{id:884626,diagnosis:"B",radius_mean:12.89,texture_mean:14.11,perimeter_mean:84.95,area_mean:512.2,smoothness_mean:.0876,compactness_mean:.1346,concavity_mean:.1374,concave_points_mean:.0398,symmetry_mean:.1596,fractal_dimension_mean:.06409,radius_se:.2025,texture_se:.4402,perimeter_se:2.393,area_se:16.35,smoothness_se:.005501,compactness_se:.05592,concavity_se:.08158,concave_points_se:.0137,symmetry_se:.01266,fractal_dimension_se:.007555,radius_worst:14.39,texture_worst:17.7,perimeter_worst:105,area_worst:639.1,smoothness_worst:.1254,compactness_worst:.5849,concavity_worst:.7727,concave_points_worst:.1561,symmetry_worst:.2639,fractal_dimension_worst:.1178,"":""},{id:88466802,diagnosis:"B",radius_mean:10.65,texture_mean:25.22,perimeter_mean:68.01,area_mean:347,smoothness_mean:.09657,compactness_mean:.07234,concavity_mean:.02379,concave_points_mean:.01615,symmetry_mean:.1897,fractal_dimension_mean:.06329,radius_se:.2497,texture_se:1.493,perimeter_se:1.497,area_se:16.64,smoothness_se:.007189,compactness_se:.01035,concavity_se:.01081,concave_points_se:.006245,symmetry_se:.02158,fractal_dimension_se:.002619,radius_worst:12.25,texture_worst:35.19,perimeter_worst:77.98,area_worst:455.7,smoothness_worst:.1499,compactness_worst:.1398,concavity_worst:.1125,concave_points_worst:.06136,symmetry_worst:.3409,fractal_dimension_worst:.08147,"":""},{id:884689,diagnosis:"B",radius_mean:11.52,texture_mean:14.93,perimeter_mean:73.87,area_mean:406.3,smoothness_mean:.1013,compactness_mean:.07808,concavity_mean:.04328,concave_points_mean:.02929,symmetry_mean:.1883,fractal_dimension_mean:.06168,radius_se:.2562,texture_se:1.038,perimeter_se:1.686,area_se:18.62,smoothness_se:.006662,compactness_se:.01228,concavity_se:.02105,concave_points_se:.01006,symmetry_se:.01677,fractal_dimension_se:.002784,radius_worst:12.65,texture_worst:21.19,perimeter_worst:80.88,area_worst:491.8,smoothness_worst:.1389,compactness_worst:.1582,concavity_worst:.1804,concave_points_worst:.09608,symmetry_worst:.2664,fractal_dimension_worst:.07809,"":""},{id:884948,diagnosis:"M",radius_mean:20.94,texture_mean:23.56,perimeter_mean:138.9,area_mean:1364,smoothness_mean:.1007,compactness_mean:.1606,concavity_mean:.2712,concave_points_mean:.131,symmetry_mean:.2205,fractal_dimension_mean:.05898,radius_se:1.004,texture_se:.8208,perimeter_se:6.372,area_se:137.9,smoothness_se:.005283,compactness_se:.03908,concavity_se:.09518,concave_points_se:.01864,symmetry_se:.02401,fractal_dimension_se:.005002,radius_worst:25.58,texture_worst:27,perimeter_worst:165.3,area_worst:2010,smoothness_worst:.1211,compactness_worst:.3172,concavity_worst:.6991,concave_points_worst:.2105,symmetry_worst:.3126,fractal_dimension_worst:.07849,"":""},{id:88518501,diagnosis:"B",radius_mean:11.5,texture_mean:18.45,perimeter_mean:73.28,area_mean:407.4,smoothness_mean:.09345,compactness_mean:.05991,concavity_mean:.02638,concave_points_mean:.02069,symmetry_mean:.1834,fractal_dimension_mean:.05934,radius_se:.3927,texture_se:.8429,perimeter_se:2.684,area_se:26.99,smoothness_se:.00638,compactness_se:.01065,concavity_se:.01245,concave_points_se:.009175,symmetry_se:.02292,fractal_dimension_se:.001461,radius_worst:12.97,texture_worst:22.46,perimeter_worst:83.12,area_worst:508.9,smoothness_worst:.1183,compactness_worst:.1049,concavity_worst:.08105,concave_points_worst:.06544,symmetry_worst:.274,fractal_dimension_worst:.06487,"":""},{id:885429,diagnosis:"M",radius_mean:19.73,texture_mean:19.82,perimeter_mean:130.7,area_mean:1206,smoothness_mean:.1062,compactness_mean:.1849,concavity_mean:.2417,concave_points_mean:.0974,symmetry_mean:.1733,fractal_dimension_mean:.06697,radius_se:.7661,texture_se:.78,perimeter_se:4.115,area_se:92.81,smoothness_se:.008482,compactness_se:.05057,concavity_se:.068,concave_points_se:.01971,symmetry_se:.01467,fractal_dimension_se:.007259,radius_worst:25.28,texture_worst:25.59,perimeter_worst:159.8,area_worst:1933,smoothness_worst:.171,compactness_worst:.5955,concavity_worst:.8489,concave_points_worst:.2507,symmetry_worst:.2749,fractal_dimension_worst:.1297,"":""},{id:8860702,diagnosis:"M",radius_mean:17.3,texture_mean:17.08,perimeter_mean:113,area_mean:928.2,smoothness_mean:.1008,compactness_mean:.1041,concavity_mean:.1266,concave_points_mean:.08353,symmetry_mean:.1813,fractal_dimension_mean:.05613,radius_se:.3093,texture_se:.8568,perimeter_se:2.193,area_se:33.63,smoothness_se:.004757,compactness_se:.01503,concavity_se:.02332,concave_points_se:.01262,symmetry_se:.01394,fractal_dimension_se:.002362,radius_worst:19.85,texture_worst:25.09,perimeter_worst:130.9,area_worst:1222,smoothness_worst:.1416,compactness_worst:.2405,concavity_worst:.3378,concave_points_worst:.1857,symmetry_worst:.3138,fractal_dimension_worst:.08113,"":""},{id:886226,diagnosis:"M",radius_mean:19.45,texture_mean:19.33,perimeter_mean:126.5,area_mean:1169,smoothness_mean:.1035,compactness_mean:.1188,concavity_mean:.1379,concave_points_mean:.08591,symmetry_mean:.1776,fractal_dimension_mean:.05647,radius_se:.5959,texture_se:.6342,perimeter_se:3.797,area_se:71,smoothness_se:.004649,compactness_se:.018,concavity_se:.02749,concave_points_se:.01267,symmetry_se:.01365,fractal_dimension_se:.00255,radius_worst:25.7,texture_worst:24.57,perimeter_worst:163.1,area_worst:1972,smoothness_worst:.1497,compactness_worst:.3161,concavity_worst:.4317,concave_points_worst:.1999,symmetry_worst:.3379,fractal_dimension_worst:.0895,"":""},{id:886452,diagnosis:"M",radius_mean:13.96,texture_mean:17.05,perimeter_mean:91.43,area_mean:602.4,smoothness_mean:.1096,compactness_mean:.1279,concavity_mean:.09789,concave_points_mean:.05246,symmetry_mean:.1908,fractal_dimension_mean:.0613,radius_se:.425,texture_se:.8098,perimeter_se:2.563,area_se:35.74,smoothness_se:.006351,compactness_se:.02679,concavity_se:.03119,concave_points_se:.01342,symmetry_se:.02062,fractal_dimension_se:.002695,radius_worst:16.39,texture_worst:22.07,perimeter_worst:108.1,area_worst:826,smoothness_worst:.1512,compactness_worst:.3262,concavity_worst:.3209,concave_points_worst:.1374,symmetry_worst:.3068,fractal_dimension_worst:.07957,"":""},{id:88649001,diagnosis:"M",radius_mean:19.55,texture_mean:28.77,perimeter_mean:133.6,area_mean:1207,smoothness_mean:.0926,compactness_mean:.2063,concavity_mean:.1784,concave_points_mean:.1144,symmetry_mean:.1893,fractal_dimension_mean:.06232,radius_se:.8426,texture_se:1.199,perimeter_se:7.158,area_se:106.4,smoothness_se:.006356,compactness_se:.04765,concavity_se:.03863,concave_points_se:.01519,symmetry_se:.01936,fractal_dimension_se:.005252,radius_worst:25.05,texture_worst:36.27,perimeter_worst:178.6,area_worst:1926,smoothness_worst:.1281,compactness_worst:.5329,concavity_worst:.4251,concave_points_worst:.1941,symmetry_worst:.2818,fractal_dimension_worst:.1005,"":""},{id:886776,diagnosis:"M",radius_mean:15.32,texture_mean:17.27,perimeter_mean:103.2,area_mean:713.3,smoothness_mean:.1335,compactness_mean:.2284,concavity_mean:.2448,concave_points_mean:.1242,symmetry_mean:.2398,fractal_dimension_mean:.07596,radius_se:.6592,texture_se:1.059,perimeter_se:4.061,area_se:59.46,smoothness_se:.01015,compactness_se:.04588,concavity_se:.04983,concave_points_se:.02127,symmetry_se:.01884,fractal_dimension_se:.00866,radius_worst:17.73,texture_worst:22.66,perimeter_worst:119.8,area_worst:928.8,smoothness_worst:.1765,compactness_worst:.4503,concavity_worst:.4429,concave_points_worst:.2229,symmetry_worst:.3258,fractal_dimension_worst:.1191,"":""},{id:887181,diagnosis:"M",radius_mean:15.66,texture_mean:23.2,perimeter_mean:110.2,area_mean:773.5,smoothness_mean:.1109,compactness_mean:.3114,concavity_mean:.3176,concave_points_mean:.1377,symmetry_mean:.2495,fractal_dimension_mean:.08104,radius_se:1.292,texture_se:2.454,perimeter_se:10.12,area_se:138.5,smoothness_se:.01236,compactness_se:.05995,concavity_se:.08232,concave_points_se:.03024,symmetry_se:.02337,fractal_dimension_se:.006042,radius_worst:19.85,texture_worst:31.64,perimeter_worst:143.7,area_worst:1226,smoothness_worst:.1504,compactness_worst:.5172,concavity_worst:.6181,concave_points_worst:.2462,symmetry_worst:.3277,fractal_dimension_worst:.1019,"":""},{id:88725602,diagnosis:"M",radius_mean:15.53,texture_mean:33.56,perimeter_mean:103.7,area_mean:744.9,smoothness_mean:.1063,compactness_mean:.1639,concavity_mean:.1751,concave_points_mean:.08399,symmetry_mean:.2091,fractal_dimension_mean:.0665,radius_se:.2419,texture_se:1.278,perimeter_se:1.903,area_se:23.02,smoothness_se:.005345,compactness_se:.02556,concavity_se:.02889,concave_points_se:.01022,symmetry_se:.009947,fractal_dimension_se:.003359,radius_worst:18.49,texture_worst:49.54,perimeter_worst:126.3,area_worst:1035,smoothness_worst:.1883,compactness_worst:.5564,concavity_worst:.5703,concave_points_worst:.2014,symmetry_worst:.3512,fractal_dimension_worst:.1204,"":""},{id:887549,diagnosis:"M",radius_mean:20.31,texture_mean:27.06,perimeter_mean:132.9,area_mean:1288,smoothness_mean:.1,compactness_mean:.1088,concavity_mean:.1519,concave_points_mean:.09333,symmetry_mean:.1814,fractal_dimension_mean:.05572,radius_se:.3977,texture_se:1.033,perimeter_se:2.587,area_se:52.34,smoothness_se:.005043,compactness_se:.01578,concavity_se:.02117,concave_points_se:.008185,symmetry_se:.01282,fractal_dimension_se:.001892,radius_worst:24.33,texture_worst:39.16,perimeter_worst:162.3,area_worst:1844,smoothness_worst:.1522,compactness_worst:.2945,concavity_worst:.3788,concave_points_worst:.1697,symmetry_worst:.3151,fractal_dimension_worst:.07999,"":""},{id:888264,diagnosis:"M",radius_mean:17.35,texture_mean:23.06,perimeter_mean:111,area_mean:933.1,smoothness_mean:.08662,compactness_mean:.0629,concavity_mean:.02891,concave_points_mean:.02837,symmetry_mean:.1564,fractal_dimension_mean:.05307,radius_se:.4007,texture_se:1.317,perimeter_se:2.577,area_se:44.41,smoothness_se:.005726,compactness_se:.01106,concavity_se:.01246,concave_points_se:.007671,symmetry_se:.01411,fractal_dimension_se:.001578,radius_worst:19.85,texture_worst:31.47,perimeter_worst:128.2,area_worst:1218,smoothness_worst:.124,compactness_worst:.1486,concavity_worst:.1211,concave_points_worst:.08235,symmetry_worst:.2452,fractal_dimension_worst:.06515,"":""},{id:888570,diagnosis:"M",radius_mean:17.29,texture_mean:22.13,perimeter_mean:114.4,area_mean:947.8,smoothness_mean:.08999,compactness_mean:.1273,concavity_mean:.09697,concave_points_mean:.07507,symmetry_mean:.2108,fractal_dimension_mean:.05464,radius_se:.8348,texture_se:1.633,perimeter_se:6.146,area_se:90.94,smoothness_se:.006717,compactness_se:.05981,concavity_se:.04638,concave_points_se:.02149,symmetry_se:.02747,fractal_dimension_se:.005838,radius_worst:20.39,texture_worst:27.24,perimeter_worst:137.9,area_worst:1295,smoothness_worst:.1134,compactness_worst:.2867,concavity_worst:.2298,concave_points_worst:.1528,symmetry_worst:.3067,fractal_dimension_worst:.07484,"":""},{id:889403,diagnosis:"M",radius_mean:15.61,texture_mean:19.38,perimeter_mean:100,area_mean:758.6,smoothness_mean:.0784,compactness_mean:.05616,concavity_mean:.04209,concave_points_mean:.02847,symmetry_mean:.1547,fractal_dimension_mean:.05443,radius_se:.2298,texture_se:.9988,perimeter_se:1.534,area_se:22.18,smoothness_se:.002826,compactness_se:.009105,concavity_se:.01311,concave_points_se:.005174,symmetry_se:.01013,fractal_dimension_se:.001345,radius_worst:17.91,texture_worst:31.67,perimeter_worst:115.9,area_worst:988.6,smoothness_worst:.1084,compactness_worst:.1807,concavity_worst:.226,concave_points_worst:.08568,symmetry_worst:.2683,fractal_dimension_worst:.06829,"":""},{id:889719,diagnosis:"M",radius_mean:17.19,texture_mean:22.07,perimeter_mean:111.6,area_mean:928.3,smoothness_mean:.09726,compactness_mean:.08995,concavity_mean:.09061,concave_points_mean:.06527,symmetry_mean:.1867,fractal_dimension_mean:.0558,radius_se:.4203,texture_se:.7383,perimeter_se:2.819,area_se:45.42,smoothness_se:.004493,compactness_se:.01206,concavity_se:.02048,concave_points_se:.009875,symmetry_se:.01144,fractal_dimension_se:.001575,radius_worst:21.58,texture_worst:29.33,perimeter_worst:140.5,area_worst:1436,smoothness_worst:.1558,compactness_worst:.2567,concavity_worst:.3889,concave_points_worst:.1984,symmetry_worst:.3216,fractal_dimension_worst:.0757,"":""},{id:88995002,diagnosis:"M",radius_mean:20.73,texture_mean:31.12,perimeter_mean:135.7,area_mean:1419,smoothness_mean:.09469,compactness_mean:.1143,concavity_mean:.1367,concave_points_mean:.08646,symmetry_mean:.1769,fractal_dimension_mean:.05674,radius_se:1.172,texture_se:1.617,perimeter_se:7.749,area_se:199.7,smoothness_se:.004551,compactness_se:.01478,concavity_se:.02143,concave_points_se:.00928,symmetry_se:.01367,fractal_dimension_se:.002299,radius_worst:32.49,texture_worst:47.16,perimeter_worst:214,area_worst:3432,smoothness_worst:.1401,compactness_worst:.2644,concavity_worst:.3442,concave_points_worst:.1659,symmetry_worst:.2868,fractal_dimension_worst:.08218,"":""},{id:8910251,diagnosis:"B",radius_mean:10.6,texture_mean:18.95,perimeter_mean:69.28,area_mean:346.4,smoothness_mean:.09688,compactness_mean:.1147,concavity_mean:.06387,concave_points_mean:.02642,symmetry_mean:.1922,fractal_dimension_mean:.06491,radius_se:.4505,texture_se:1.197,perimeter_se:3.43,area_se:27.1,smoothness_se:.00747,compactness_se:.03581,concavity_se:.03354,concave_points_se:.01365,symmetry_se:.03504,fractal_dimension_se:.003318,radius_worst:11.88,texture_worst:22.94,perimeter_worst:78.28,area_worst:424.8,smoothness_worst:.1213,compactness_worst:.2515,concavity_worst:.1916,concave_points_worst:.07926,symmetry_worst:.294,fractal_dimension_worst:.07587,"":""},{id:8910499,diagnosis:"B",radius_mean:13.59,texture_mean:21.84,perimeter_mean:87.16,area_mean:561,smoothness_mean:.07956,compactness_mean:.08259,concavity_mean:.04072,concave_points_mean:.02142,symmetry_mean:.1635,fractal_dimension_mean:.05859,radius_se:.338,texture_se:1.916,perimeter_se:2.591,area_se:26.76,smoothness_se:.005436,compactness_se:.02406,concavity_se:.03099,concave_points_se:.009919,symmetry_se:.0203,fractal_dimension_se:.003009,radius_worst:14.8,texture_worst:30.04,perimeter_worst:97.66,area_worst:661.5,smoothness_worst:.1005,compactness_worst:.173,concavity_worst:.1453,concave_points_worst:.06189,symmetry_worst:.2446,fractal_dimension_worst:.07024,"":""},{id:8910506,diagnosis:"B",radius_mean:12.87,texture_mean:16.21,perimeter_mean:82.38,area_mean:512.2,smoothness_mean:.09425,compactness_mean:.06219,concavity_mean:.039,concave_points_mean:.01615,symmetry_mean:.201,fractal_dimension_mean:.05769,radius_se:.2345,texture_se:1.219,perimeter_se:1.546,area_se:18.24,smoothness_se:.005518,compactness_se:.02178,concavity_se:.02589,concave_points_se:.00633,symmetry_se:.02593,fractal_dimension_se:.002157,radius_worst:13.9,texture_worst:23.64,perimeter_worst:89.27,area_worst:597.5,smoothness_worst:.1256,compactness_worst:.1808,concavity_worst:.1992,concave_points_worst:.0578,symmetry_worst:.3604,fractal_dimension_worst:.07062,"":""},{id:8910720,diagnosis:"B",radius_mean:10.71,texture_mean:20.39,perimeter_mean:69.5,area_mean:344.9,smoothness_mean:.1082,compactness_mean:.1289,concavity_mean:.08448,concave_points_mean:.02867,symmetry_mean:.1668,fractal_dimension_mean:.06862,radius_se:.3198,texture_se:1.489,perimeter_se:2.23,area_se:20.74,smoothness_se:.008902,compactness_se:.04785,concavity_se:.07339,concave_points_se:.01745,symmetry_se:.02728,fractal_dimension_se:.00761,radius_worst:11.69,texture_worst:25.21,perimeter_worst:76.51,area_worst:410.4,smoothness_worst:.1335,compactness_worst:.255,concavity_worst:.2534,concave_points_worst:.086,symmetry_worst:.2605,fractal_dimension_worst:.08701,"":""},{id:8910721,diagnosis:"B",radius_mean:14.29,texture_mean:16.82,perimeter_mean:90.3,area_mean:632.6,smoothness_mean:.06429,compactness_mean:.02675,concavity_mean:.00725,concave_points_mean:.00625,symmetry_mean:.1508,fractal_dimension_mean:.05376,radius_se:.1302,texture_se:.7198,perimeter_se:.8439,area_se:10.77,smoothness_se:.003492,compactness_se:.00371,concavity_se:.004826,concave_points_se:.003608,symmetry_se:.01536,fractal_dimension_se:.001381,radius_worst:14.91,texture_worst:20.65,perimeter_worst:94.44,area_worst:684.6,smoothness_worst:.08567,compactness_worst:.05036,concavity_worst:.03866,concave_points_worst:.03333,symmetry_worst:.2458,fractal_dimension_worst:.0612,"":""},{id:8910748,diagnosis:"B",radius_mean:11.29,texture_mean:13.04,perimeter_mean:72.23,area_mean:388,smoothness_mean:.09834,compactness_mean:.07608,concavity_mean:.03265,concave_points_mean:.02755,symmetry_mean:.1769,fractal_dimension_mean:.0627,radius_se:.1904,texture_se:.5293,perimeter_se:1.164,area_se:13.17,smoothness_se:.006472,compactness_se:.01122,concavity_se:.01282,concave_points_se:.008849,symmetry_se:.01692,fractal_dimension_se:.002817,radius_worst:12.32,texture_worst:16.18,perimeter_worst:78.27,area_worst:457.5,smoothness_worst:.1358,compactness_worst:.1507,concavity_worst:.1275,concave_points_worst:.0875,symmetry_worst:.2733,fractal_dimension_worst:.08022,"":""},{id:8910988,diagnosis:"M",radius_mean:21.75,texture_mean:20.99,perimeter_mean:147.3,area_mean:1491,smoothness_mean:.09401,compactness_mean:.1961,concavity_mean:.2195,concave_points_mean:.1088,symmetry_mean:.1721,fractal_dimension_mean:.06194,radius_se:1.167,texture_se:1.352,perimeter_se:8.867,area_se:156.8,smoothness_se:.005687,compactness_se:.0496,concavity_se:.06329,concave_points_se:.01561,symmetry_se:.01924,fractal_dimension_se:.004614,radius_worst:28.19,texture_worst:28.18,perimeter_worst:195.9,area_worst:2384,smoothness_worst:.1272,compactness_worst:.4725,concavity_worst:.5807,concave_points_worst:.1841,symmetry_worst:.2833,fractal_dimension_worst:.08858,"":""},{id:8910996,diagnosis:"B",radius_mean:9.742,texture_mean:15.67,perimeter_mean:61.5,area_mean:289.9,smoothness_mean:.09037,compactness_mean:.04689,concavity_mean:.01103,concave_points_mean:.01407,symmetry_mean:.2081,fractal_dimension_mean:.06312,radius_se:.2684,texture_se:1.409,perimeter_se:1.75,area_se:16.39,smoothness_se:.0138,compactness_se:.01067,concavity_se:.008347,concave_points_se:.009472,symmetry_se:.01798,fractal_dimension_se:.004261,radius_worst:10.75,texture_worst:20.88,perimeter_worst:68.09,area_worst:355.2,smoothness_worst:.1467,compactness_worst:.0937,concavity_worst:.04043,concave_points_worst:.05159,symmetry_worst:.2841,fractal_dimension_worst:.08175,"":""},{id:8911163,diagnosis:"M",radius_mean:17.93,texture_mean:24.48,perimeter_mean:115.2,area_mean:998.9,smoothness_mean:.08855,compactness_mean:.07027,concavity_mean:.05699,concave_points_mean:.04744,symmetry_mean:.1538,fractal_dimension_mean:.0551,radius_se:.4212,texture_se:1.433,perimeter_se:2.765,area_se:45.81,smoothness_se:.005444,compactness_se:.01169,concavity_se:.01622,concave_points_se:.008522,symmetry_se:.01419,fractal_dimension_se:.002751,radius_worst:20.92,texture_worst:34.69,perimeter_worst:135.1,area_worst:1320,smoothness_worst:.1315,compactness_worst:.1806,concavity_worst:.208,concave_points_worst:.1136,symmetry_worst:.2504,fractal_dimension_worst:.07948,"":""},{id:8911164,diagnosis:"B",radius_mean:11.89,texture_mean:17.36,perimeter_mean:76.2,area_mean:435.6,smoothness_mean:.1225,compactness_mean:.0721,concavity_mean:.05929,concave_points_mean:.07404,symmetry_mean:.2015,fractal_dimension_mean:.05875,radius_se:.6412,texture_se:2.293,perimeter_se:4.021,area_se:48.84,smoothness_se:.01418,compactness_se:.01489,concavity_se:.01267,concave_points_se:.0191,symmetry_se:.02678,fractal_dimension_se:.003002,radius_worst:12.4,texture_worst:18.99,perimeter_worst:79.46,area_worst:472.4,smoothness_worst:.1359,compactness_worst:.08368,concavity_worst:.07153,concave_points_worst:.08946,symmetry_worst:.222,fractal_dimension_worst:.06033,"":""},{id:8911230,diagnosis:"B",radius_mean:11.33,texture_mean:14.16,perimeter_mean:71.79,area_mean:396.6,smoothness_mean:.09379,compactness_mean:.03872,concavity_mean:.001487,concave_points_mean:.003333,symmetry_mean:.1954,fractal_dimension_mean:.05821,radius_se:.2375,texture_se:1.28,perimeter_se:1.565,area_se:17.09,smoothness_se:.008426,compactness_se:.008998,concavity_se:.001487,concave_points_se:.003333,symmetry_se:.02358,fractal_dimension_se:.001627,radius_worst:12.2,texture_worst:18.99,perimeter_worst:77.37,area_worst:458,smoothness_worst:.1259,compactness_worst:.07348,concavity_worst:.004955,concave_points_worst:.01111,symmetry_worst:.2758,fractal_dimension_worst:.06386,"":""},{id:8911670,diagnosis:"M",radius_mean:18.81,texture_mean:19.98,perimeter_mean:120.9,area_mean:1102,smoothness_mean:.08923,compactness_mean:.05884,concavity_mean:.0802,concave_points_mean:.05843,symmetry_mean:.155,fractal_dimension_mean:.04996,radius_se:.3283,texture_se:.828,perimeter_se:2.363,area_se:36.74,smoothness_se:.007571,compactness_se:.01114,concavity_se:.02623,concave_points_se:.01463,symmetry_se:.0193,fractal_dimension_se:.001676,radius_worst:19.96,texture_worst:24.3,perimeter_worst:129,area_worst:1236,smoothness_worst:.1243,compactness_worst:.116,concavity_worst:.221,concave_points_worst:.1294,symmetry_worst:.2567,fractal_dimension_worst:.05737,"":""},{id:8911800,diagnosis:"B",radius_mean:13.59,texture_mean:17.84,perimeter_mean:86.24,area_mean:572.3,smoothness_mean:.07948,compactness_mean:.04052,concavity_mean:.01997,concave_points_mean:.01238,symmetry_mean:.1573,fractal_dimension_mean:.0552,radius_se:.258,texture_se:1.166,perimeter_se:1.683,area_se:22.22,smoothness_se:.003741,compactness_se:.005274,concavity_se:.01065,concave_points_se:.005044,symmetry_se:.01344,fractal_dimension_se:.001126,radius_worst:15.5,texture_worst:26.1,perimeter_worst:98.91,area_worst:739.1,smoothness_worst:.105,compactness_worst:.07622,concavity_worst:.106,concave_points_worst:.05185,symmetry_worst:.2335,fractal_dimension_worst:.06263,"":""},{id:8911834,diagnosis:"B",radius_mean:13.85,texture_mean:15.18,perimeter_mean:88.99,area_mean:587.4,smoothness_mean:.09516,compactness_mean:.07688,concavity_mean:.04479,concave_points_mean:.03711,symmetry_mean:.211,fractal_dimension_mean:.05853,radius_se:.2479,texture_se:.9195,perimeter_se:1.83,area_se:19.41,smoothness_se:.004235,compactness_se:.01541,concavity_se:.01457,concave_points_se:.01043,symmetry_se:.01528,fractal_dimension_se:.001593,radius_worst:14.98,texture_worst:21.74,perimeter_worst:98.37,area_worst:670,smoothness_worst:.1185,compactness_worst:.1724,concavity_worst:.1456,concave_points_worst:.09993,symmetry_worst:.2955,fractal_dimension_worst:.06912,"":""},{id:8912049,diagnosis:"M",radius_mean:19.16,texture_mean:26.6,perimeter_mean:126.2,area_mean:1138,smoothness_mean:.102,compactness_mean:.1453,concavity_mean:.1921,concave_points_mean:.09664,symmetry_mean:.1902,fractal_dimension_mean:.0622,radius_se:.6361,texture_se:1.001,perimeter_se:4.321,area_se:69.65,smoothness_se:.007392,compactness_se:.02449,concavity_se:.03988,concave_points_se:.01293,symmetry_se:.01435,fractal_dimension_se:.003446,radius_worst:23.72,texture_worst:35.9,perimeter_worst:159.8,area_worst:1724,smoothness_worst:.1782,compactness_worst:.3841,concavity_worst:.5754,concave_points_worst:.1872,symmetry_worst:.3258,fractal_dimension_worst:.0972,"":""},{id:8912055,diagnosis:"B",radius_mean:11.74,texture_mean:14.02,perimeter_mean:74.24,area_mean:427.3,smoothness_mean:.07813,compactness_mean:.0434,concavity_mean:.02245,concave_points_mean:.02763,symmetry_mean:.2101,fractal_dimension_mean:.06113,radius_se:.5619,texture_se:1.268,perimeter_se:3.717,area_se:37.83,smoothness_se:.008034,compactness_se:.01442,concavity_se:.01514,concave_points_se:.01846,symmetry_se:.02921,fractal_dimension_se:.002005,radius_worst:13.31,texture_worst:18.26,perimeter_worst:84.7,area_worst:533.7,smoothness_worst:.1036,compactness_worst:.085,concavity_worst:.06735,concave_points_worst:.0829,symmetry_worst:.3101,fractal_dimension_worst:.06688,"":""},{id:89122,diagnosis:"M",radius_mean:19.4,texture_mean:18.18,perimeter_mean:127.2,area_mean:1145,smoothness_mean:.1037,compactness_mean:.1442,concavity_mean:.1626,concave_points_mean:.09464,symmetry_mean:.1893,fractal_dimension_mean:.05892,radius_se:.4709,texture_se:.9951,perimeter_se:2.903,area_se:53.16,smoothness_se:.005654,compactness_se:.02199,concavity_se:.03059,concave_points_se:.01499,symmetry_se:.01623,fractal_dimension_se:.001965,radius_worst:23.79,texture_worst:28.65,perimeter_worst:152.4,area_worst:1628,smoothness_worst:.1518,compactness_worst:.3749,concavity_worst:.4316,concave_points_worst:.2252,symmetry_worst:.359,fractal_dimension_worst:.07787,"":""},{id:8912280,diagnosis:"M",radius_mean:16.24,texture_mean:18.77,perimeter_mean:108.8,area_mean:805.1,smoothness_mean:.1066,compactness_mean:.1802,concavity_mean:.1948,concave_points_mean:.09052,symmetry_mean:.1876,fractal_dimension_mean:.06684,radius_se:.2873,texture_se:.9173,perimeter_se:2.464,area_se:28.09,smoothness_se:.004563,compactness_se:.03481,concavity_se:.03872,concave_points_se:.01209,symmetry_se:.01388,fractal_dimension_se:.004081,radius_worst:18.55,texture_worst:25.09,perimeter_worst:126.9,area_worst:1031,smoothness_worst:.1365,compactness_worst:.4706,concavity_worst:.5026,concave_points_worst:.1732,symmetry_worst:.277,fractal_dimension_worst:.1063,"":""},{id:8912284,diagnosis:"B",radius_mean:12.89,texture_mean:15.7,perimeter_mean:84.08,area_mean:516.6,smoothness_mean:.07818,compactness_mean:.0958,concavity_mean:.1115,concave_points_mean:.0339,symmetry_mean:.1432,fractal_dimension_mean:.05935,radius_se:.2913,texture_se:1.389,perimeter_se:2.347,area_se:23.29,smoothness_se:.006418,compactness_se:.03961,concavity_se:.07927,concave_points_se:.01774,symmetry_se:.01878,fractal_dimension_se:.003696,radius_worst:13.9,texture_worst:19.69,perimeter_worst:92.12,area_worst:595.6,smoothness_worst:.09926,compactness_worst:.2317,concavity_worst:.3344,concave_points_worst:.1017,symmetry_worst:.1999,fractal_dimension_worst:.07127,"":""},{id:8912521,diagnosis:"B",radius_mean:12.58,texture_mean:18.4,perimeter_mean:79.83,area_mean:489,smoothness_mean:.08393,compactness_mean:.04216,concavity_mean:.00186,concave_points_mean:.002924,symmetry_mean:.1697,fractal_dimension_mean:.05855,radius_se:.2719,texture_se:1.35,perimeter_se:1.721,area_se:22.45,smoothness_se:.006383,compactness_se:.008008,concavity_se:.00186,concave_points_se:.002924,symmetry_se:.02571,fractal_dimension_se:.002015,radius_worst:13.5,texture_worst:23.08,perimeter_worst:85.56,area_worst:564.1,smoothness_worst:.1038,compactness_worst:.06624,concavity_worst:.005579,concave_points_worst:.008772,symmetry_worst:.2505,fractal_dimension_worst:.06431,"":""},{id:8912909,diagnosis:"B",radius_mean:11.94,texture_mean:20.76,perimeter_mean:77.87,area_mean:441,smoothness_mean:.08605,compactness_mean:.1011,concavity_mean:.06574,concave_points_mean:.03791,symmetry_mean:.1588,fractal_dimension_mean:.06766,radius_se:.2742,texture_se:1.39,perimeter_se:3.198,area_se:21.91,smoothness_se:.006719,compactness_se:.05156,concavity_se:.04387,concave_points_se:.01633,symmetry_se:.01872,fractal_dimension_se:.008015,radius_worst:13.24,texture_worst:27.29,perimeter_worst:92.2,area_worst:546.1,smoothness_worst:.1116,compactness_worst:.2813,concavity_worst:.2365,concave_points_worst:.1155,symmetry_worst:.2465,fractal_dimension_worst:.09981,"":""},{id:8913,diagnosis:"B",radius_mean:12.89,texture_mean:13.12,perimeter_mean:81.89,area_mean:515.9,smoothness_mean:.06955,compactness_mean:.03729,concavity_mean:.0226,concave_points_mean:.01171,symmetry_mean:.1337,fractal_dimension_mean:.05581,radius_se:.1532,texture_se:.469,perimeter_se:1.115,area_se:12.68,smoothness_se:.004731,compactness_se:.01345,concavity_se:.01652,concave_points_se:.005905,symmetry_se:.01619,fractal_dimension_se:.002081,radius_worst:13.62,texture_worst:15.54,perimeter_worst:87.4,area_worst:577,smoothness_worst:.09616,compactness_worst:.1147,concavity_worst:.1186,concave_points_worst:.05366,symmetry_worst:.2309,fractal_dimension_worst:.06915,"":""},{id:8913049,diagnosis:"B",radius_mean:11.26,texture_mean:19.96,perimeter_mean:73.72,area_mean:394.1,smoothness_mean:.0802,compactness_mean:.1181,concavity_mean:.09274,concave_points_mean:.05588,symmetry_mean:.2595,fractal_dimension_mean:.06233,radius_se:.4866,texture_se:1.905,perimeter_se:2.877,area_se:34.68,smoothness_se:.01574,compactness_se:.08262,concavity_se:.08099,concave_points_se:.03487,symmetry_se:.03418,fractal_dimension_se:.006517,radius_worst:11.86,texture_worst:22.33,perimeter_worst:78.27,area_worst:437.6,smoothness_worst:.1028,compactness_worst:.1843,concavity_worst:.1546,concave_points_worst:.09314,symmetry_worst:.2955,fractal_dimension_worst:.07009,"":""},{id:89143601,diagnosis:"B",radius_mean:11.37,texture_mean:18.89,perimeter_mean:72.17,area_mean:396,smoothness_mean:.08713,compactness_mean:.05008,concavity_mean:.02399,concave_points_mean:.02173,symmetry_mean:.2013,fractal_dimension_mean:.05955,radius_se:.2656,texture_se:1.974,perimeter_se:1.954,area_se:17.49,smoothness_se:.006538,compactness_se:.01395,concavity_se:.01376,concave_points_se:.009924,symmetry_se:.03416,fractal_dimension_se:.002928,radius_worst:12.36,texture_worst:26.14,perimeter_worst:79.29,area_worst:459.3,smoothness_worst:.1118,compactness_worst:.09708,concavity_worst:.07529,concave_points_worst:.06203,symmetry_worst:.3267,fractal_dimension_worst:.06994,"":""},{id:89143602,diagnosis:"B",radius_mean:14.41,texture_mean:19.73,perimeter_mean:96.03,area_mean:651,smoothness_mean:.08757,compactness_mean:.1676,concavity_mean:.1362,concave_points_mean:.06602,symmetry_mean:.1714,fractal_dimension_mean:.07192,radius_se:.8811,texture_se:1.77,perimeter_se:4.36,area_se:77.11,smoothness_se:.007762,compactness_se:.1064,concavity_se:.0996,concave_points_se:.02771,symmetry_se:.04077,fractal_dimension_se:.02286,radius_worst:15.77,texture_worst:22.13,perimeter_worst:101.7,area_worst:767.3,smoothness_worst:.09983,compactness_worst:.2472,concavity_worst:.222,concave_points_worst:.1021,symmetry_worst:.2272,fractal_dimension_worst:.08799,"":""},{id:8915,diagnosis:"B",radius_mean:14.96,texture_mean:19.1,perimeter_mean:97.03,area_mean:687.3,smoothness_mean:.08992,compactness_mean:.09823,concavity_mean:.0594,concave_points_mean:.04819,symmetry_mean:.1879,fractal_dimension_mean:.05852,radius_se:.2877,texture_se:.948,perimeter_se:2.171,area_se:24.87,smoothness_se:.005332,compactness_se:.02115,concavity_se:.01536,concave_points_se:.01187,symmetry_se:.01522,fractal_dimension_se:.002815,radius_worst:16.25,texture_worst:26.19,perimeter_worst:109.1,area_worst:809.8,smoothness_worst:.1313,compactness_worst:.303,concavity_worst:.1804,concave_points_worst:.1489,symmetry_worst:.2962,fractal_dimension_worst:.08472,"":""},{id:891670,diagnosis:"B",radius_mean:12.95,texture_mean:16.02,perimeter_mean:83.14,area_mean:513.7,smoothness_mean:.1005,compactness_mean:.07943,concavity_mean:.06155,concave_points_mean:.0337,symmetry_mean:.173,fractal_dimension_mean:.0647,radius_se:.2094,texture_se:.7636,perimeter_se:1.231,area_se:17.67,smoothness_se:.008725,compactness_se:.02003,concavity_se:.02335,concave_points_se:.01132,symmetry_se:.02625,fractal_dimension_se:.004726,radius_worst:13.74,texture_worst:19.93,perimeter_worst:88.81,area_worst:585.4,smoothness_worst:.1483,compactness_worst:.2068,concavity_worst:.2241,concave_points_worst:.1056,symmetry_worst:.338,fractal_dimension_worst:.09584,"":""},{id:891703,diagnosis:"B",radius_mean:11.85,texture_mean:17.46,perimeter_mean:75.54,area_mean:432.7,smoothness_mean:.08372,compactness_mean:.05642,concavity_mean:.02688,concave_points_mean:.0228,symmetry_mean:.1875,fractal_dimension_mean:.05715,radius_se:.207,texture_se:1.238,perimeter_se:1.234,area_se:13.88,smoothness_se:.007595,compactness_se:.015,concavity_se:.01412,concave_points_se:.008578,symmetry_se:.01792,fractal_dimension_se:.001784,radius_worst:13.06,texture_worst:25.75,perimeter_worst:84.35,area_worst:517.8,smoothness_worst:.1369,compactness_worst:.1758,concavity_worst:.1316,concave_points_worst:.0914,symmetry_worst:.3101,fractal_dimension_worst:.07007,"":""},{id:891716,diagnosis:"B",radius_mean:12.72,texture_mean:13.78,perimeter_mean:81.78,area_mean:492.1,smoothness_mean:.09667,compactness_mean:.08393,concavity_mean:.01288,concave_points_mean:.01924,symmetry_mean:.1638,fractal_dimension_mean:.061,radius_se:.1807,texture_se:.6931,perimeter_se:1.34,area_se:13.38,smoothness_se:.006064,compactness_se:.0118,concavity_se:.006564,concave_points_se:.007978,symmetry_se:.01374,fractal_dimension_se:.001392,radius_worst:13.5,texture_worst:17.48,perimeter_worst:88.54,area_worst:553.7,smoothness_worst:.1298,compactness_worst:.1472,concavity_worst:.05233,concave_points_worst:.06343,symmetry_worst:.2369,fractal_dimension_worst:.06922,"":""},{id:891923,diagnosis:"B",radius_mean:13.77,texture_mean:13.27,perimeter_mean:88.06,area_mean:582.7,smoothness_mean:.09198,compactness_mean:.06221,concavity_mean:.01063,concave_points_mean:.01917,symmetry_mean:.1592,fractal_dimension_mean:.05912,radius_se:.2191,texture_se:.6946,perimeter_se:1.479,area_se:17.74,smoothness_se:.004348,compactness_se:.008153,concavity_se:.004272,concave_points_se:.006829,symmetry_se:.02154,fractal_dimension_se:.001802,radius_worst:14.67,texture_worst:16.93,perimeter_worst:94.17,area_worst:661.1,smoothness_worst:.117,compactness_worst:.1072,concavity_worst:.03732,concave_points_worst:.05802,symmetry_worst:.2823,fractal_dimension_worst:.06794,"":""},{id:891936,diagnosis:"B",radius_mean:10.91,texture_mean:12.35,perimeter_mean:69.14,area_mean:363.7,smoothness_mean:.08518,compactness_mean:.04721,concavity_mean:.01236,concave_points_mean:.01369,symmetry_mean:.1449,fractal_dimension_mean:.06031,radius_se:.1753,texture_se:1.027,perimeter_se:1.267,area_se:11.09,smoothness_se:.003478,compactness_se:.01221,concavity_se:.01072,concave_points_se:.009393,symmetry_se:.02941,fractal_dimension_se:.003428,radius_worst:11.37,texture_worst:14.82,perimeter_worst:72.42,area_worst:392.2,smoothness_worst:.09312,compactness_worst:.07506,concavity_worst:.02884,concave_points_worst:.03194,symmetry_worst:.2143,fractal_dimension_worst:.06643,"":""},{id:892189,diagnosis:"M",radius_mean:11.76,texture_mean:18.14,perimeter_mean:75,area_mean:431.1,smoothness_mean:.09968,compactness_mean:.05914,concavity_mean:.02685,concave_points_mean:.03515,symmetry_mean:.1619,fractal_dimension_mean:.06287,radius_se:.645,texture_se:2.105,perimeter_se:4.138,area_se:49.11,smoothness_se:.005596,compactness_se:.01005,concavity_se:.01272,concave_points_se:.01432,symmetry_se:.01575,fractal_dimension_se:.002758,radius_worst:13.36,texture_worst:23.39,perimeter_worst:85.1,area_worst:553.6,smoothness_worst:.1137,compactness_worst:.07974,concavity_worst:.0612,concave_points_worst:.0716,symmetry_worst:.1978,fractal_dimension_worst:.06915,"":""},{id:892214,diagnosis:"B",radius_mean:14.26,texture_mean:18.17,perimeter_mean:91.22,area_mean:633.1,smoothness_mean:.06576,compactness_mean:.0522,concavity_mean:.02475,concave_points_mean:.01374,symmetry_mean:.1635,fractal_dimension_mean:.05586,radius_se:.23,texture_se:.669,perimeter_se:1.661,area_se:20.56,smoothness_se:.003169,compactness_se:.01377,concavity_se:.01079,concave_points_se:.005243,symmetry_se:.01103,fractal_dimension_se:.001957,radius_worst:16.22,texture_worst:25.26,perimeter_worst:105.8,area_worst:819.7,smoothness_worst:.09445,compactness_worst:.2167,concavity_worst:.1565,concave_points_worst:.0753,symmetry_worst:.2636,fractal_dimension_worst:.07676,"":""},{id:892399,diagnosis:"B",radius_mean:10.51,texture_mean:23.09,perimeter_mean:66.85,area_mean:334.2,smoothness_mean:.1015,compactness_mean:.06797,concavity_mean:.02495,concave_points_mean:.01875,symmetry_mean:.1695,fractal_dimension_mean:.06556,radius_se:.2868,texture_se:1.143,perimeter_se:2.289,area_se:20.56,smoothness_se:.01017,compactness_se:.01443,concavity_se:.01861,concave_points_se:.0125,symmetry_se:.03464,fractal_dimension_se:.001971,radius_worst:10.93,texture_worst:24.22,perimeter_worst:70.1,area_worst:362.7,smoothness_worst:.1143,compactness_worst:.08614,concavity_worst:.04158,concave_points_worst:.03125,symmetry_worst:.2227,fractal_dimension_worst:.06777,"":""},{id:892438,diagnosis:"M",radius_mean:19.53,texture_mean:18.9,perimeter_mean:129.5,area_mean:1217,smoothness_mean:.115,compactness_mean:.1642,concavity_mean:.2197,concave_points_mean:.1062,symmetry_mean:.1792,fractal_dimension_mean:.06552,radius_se:1.111,texture_se:1.161,perimeter_se:7.237,area_se:133,smoothness_se:.006056,compactness_se:.03203,concavity_se:.05638,concave_points_se:.01733,symmetry_se:.01884,fractal_dimension_se:.004787,radius_worst:25.93,texture_worst:26.24,perimeter_worst:171.1,area_worst:2053,smoothness_worst:.1495,compactness_worst:.4116,concavity_worst:.6121,concave_points_worst:.198,symmetry_worst:.2968,fractal_dimension_worst:.09929,"":""},{id:892604,diagnosis:"B",radius_mean:12.46,texture_mean:19.89,perimeter_mean:80.43,area_mean:471.3,smoothness_mean:.08451,compactness_mean:.1014,concavity_mean:.0683,concave_points_mean:.03099,symmetry_mean:.1781,fractal_dimension_mean:.06249,radius_se:.3642,texture_se:1.04,perimeter_se:2.579,area_se:28.32,smoothness_se:.00653,compactness_se:.03369,concavity_se:.04712,concave_points_se:.01403,symmetry_se:.0274,fractal_dimension_se:.004651,radius_worst:13.46,texture_worst:23.07,perimeter_worst:88.13,area_worst:551.3,smoothness_worst:.105,compactness_worst:.2158,concavity_worst:.1904,concave_points_worst:.07625,symmetry_worst:.2685,fractal_dimension_worst:.07764,"":""},{id:89263202,diagnosis:"M",radius_mean:20.09,texture_mean:23.86,perimeter_mean:134.7,area_mean:1247,smoothness_mean:.108,compactness_mean:.1838,concavity_mean:.2283,concave_points_mean:.128,symmetry_mean:.2249,fractal_dimension_mean:.07469,radius_se:1.072,texture_se:1.743,perimeter_se:7.804,area_se:130.8,smoothness_se:.007964,compactness_se:.04732,concavity_se:.07649,concave_points_se:.01936,symmetry_se:.02736,fractal_dimension_se:.005928,radius_worst:23.68,texture_worst:29.43,perimeter_worst:158.8,area_worst:1696,smoothness_worst:.1347,compactness_worst:.3391,concavity_worst:.4932,concave_points_worst:.1923,symmetry_worst:.3294,fractal_dimension_worst:.09469,"":""},{id:892657,diagnosis:"B",radius_mean:10.49,texture_mean:18.61,perimeter_mean:66.86,area_mean:334.3,smoothness_mean:.1068,compactness_mean:.06678,concavity_mean:.02297,concave_points_mean:.0178,symmetry_mean:.1482,fractal_dimension_mean:.066,radius_se:.1485,texture_se:1.563,perimeter_se:1.035,area_se:10.08,smoothness_se:.008875,compactness_se:.009362,concavity_se:.01808,concave_points_se:.009199,symmetry_se:.01791,fractal_dimension_se:.003317,radius_worst:11.06,texture_worst:24.54,perimeter_worst:70.76,area_worst:375.4,smoothness_worst:.1413,compactness_worst:.1044,concavity_worst:.08423,concave_points_worst:.06528,symmetry_worst:.2213,fractal_dimension_worst:.07842,"":""},{id:89296,diagnosis:"B",radius_mean:11.46,texture_mean:18.16,perimeter_mean:73.59,area_mean:403.1,smoothness_mean:.08853,compactness_mean:.07694,concavity_mean:.03344,concave_points_mean:.01502,symmetry_mean:.1411,fractal_dimension_mean:.06243,radius_se:.3278,texture_se:1.059,perimeter_se:2.475,area_se:22.93,smoothness_se:.006652,compactness_se:.02652,concavity_se:.02221,concave_points_se:.007807,symmetry_se:.01894,fractal_dimension_se:.003411,radius_worst:12.68,texture_worst:21.61,perimeter_worst:82.69,area_worst:489.8,smoothness_worst:.1144,compactness_worst:.1789,concavity_worst:.1226,concave_points_worst:.05509,symmetry_worst:.2208,fractal_dimension_worst:.07638,"":""},{id:893061,diagnosis:"B",radius_mean:11.6,texture_mean:24.49,perimeter_mean:74.23,area_mean:417.2,smoothness_mean:.07474,compactness_mean:.05688,concavity_mean:.01974,concave_points_mean:.01313,symmetry_mean:.1935,fractal_dimension_mean:.05878,radius_se:.2512,texture_se:1.786,perimeter_se:1.961,area_se:18.21,smoothness_se:.006122,compactness_se:.02337,concavity_se:.01596,concave_points_se:.006998,symmetry_se:.03194,fractal_dimension_se:.002211,radius_worst:12.44,texture_worst:31.62,perimeter_worst:81.39,area_worst:476.5,smoothness_worst:.09545,compactness_worst:.1361,concavity_worst:.07239,concave_points_worst:.04815,symmetry_worst:.3244,fractal_dimension_worst:.06745,"":""},{id:89344,diagnosis:"B",radius_mean:13.2,texture_mean:15.82,perimeter_mean:84.07,area_mean:537.3,smoothness_mean:.08511,compactness_mean:.05251,concavity_mean:.001461,concave_points_mean:.003261,symmetry_mean:.1632,fractal_dimension_mean:.05894,radius_se:.1903,texture_se:.5735,perimeter_se:1.204,area_se:15.5,smoothness_se:.003632,compactness_se:.007861,concavity_se:.001128,concave_points_se:.002386,symmetry_se:.01344,fractal_dimension_se:.002585,radius_worst:14.41,texture_worst:20.45,perimeter_worst:92,area_worst:636.9,smoothness_worst:.1128,compactness_worst:.1346,concavity_worst:.0112,concave_points_worst:.025,symmetry_worst:.2651,fractal_dimension_worst:.08385,"":""},{id:89346,diagnosis:"B",radius_mean:9,texture_mean:14.4,perimeter_mean:56.36,area_mean:246.3,smoothness_mean:.07005,compactness_mean:.03116,concavity_mean:.003681,concave_points_mean:.003472,symmetry_mean:.1788,fractal_dimension_mean:.06833,radius_se:.1746,texture_se:1.305,perimeter_se:1.144,area_se:9.789,smoothness_se:.007389,compactness_se:.004883,concavity_se:.003681,concave_points_se:.003472,symmetry_se:.02701,fractal_dimension_se:.002153,radius_worst:9.699,texture_worst:20.07,perimeter_worst:60.9,area_worst:285.5,smoothness_worst:.09861,compactness_worst:.05232,concavity_worst:.01472,concave_points_worst:.01389,symmetry_worst:.2991,fractal_dimension_worst:.07804,"":""},{id:893526,diagnosis:"B",radius_mean:13.5,texture_mean:12.71,perimeter_mean:85.69,area_mean:566.2,smoothness_mean:.07376,compactness_mean:.03614,concavity_mean:.002758,concave_points_mean:.004419,symmetry_mean:.1365,fractal_dimension_mean:.05335,radius_se:.2244,texture_se:.6864,perimeter_se:1.509,area_se:20.39,smoothness_se:.003338,compactness_se:.003746,concavity_se:.00203,concave_points_se:.003242,symmetry_se:.0148,fractal_dimension_se:.001566,radius_worst:14.97,texture_worst:16.94,perimeter_worst:95.48,area_worst:698.7,smoothness_worst:.09023,compactness_worst:.05836,concavity_worst:.01379,concave_points_worst:.0221,symmetry_worst:.2267,fractal_dimension_worst:.06192,"":""},{id:893548,diagnosis:"B",radius_mean:13.05,texture_mean:13.84,perimeter_mean:82.71,area_mean:530.6,smoothness_mean:.08352,compactness_mean:.03735,concavity_mean:.004559,concave_points_mean:.008829,symmetry_mean:.1453,fractal_dimension_mean:.05518,radius_se:.3975,texture_se:.8285,perimeter_se:2.567,area_se:33.01,smoothness_se:.004148,compactness_se:.004711,concavity_se:.002831,concave_points_se:.004821,symmetry_se:.01422,fractal_dimension_se:.002273,radius_worst:14.73,texture_worst:17.4,perimeter_worst:93.96,area_worst:672.4,smoothness_worst:.1016,compactness_worst:.05847,concavity_worst:.01824,concave_points_worst:.03532,symmetry_worst:.2107,fractal_dimension_worst:.0658,"":""},{id:893783,diagnosis:"B",radius_mean:11.7,texture_mean:19.11,perimeter_mean:74.33,area_mean:418.7,smoothness_mean:.08814,compactness_mean:.05253,concavity_mean:.01583,concave_points_mean:.01148,symmetry_mean:.1936,fractal_dimension_mean:.06128,radius_se:.1601,texture_se:1.43,perimeter_se:1.109,area_se:11.28,smoothness_se:.006064,compactness_se:.00911,concavity_se:.01042,concave_points_se:.007638,symmetry_se:.02349,fractal_dimension_se:.001661,radius_worst:12.61,texture_worst:26.55,perimeter_worst:80.92,area_worst:483.1,smoothness_worst:.1223,compactness_worst:.1087,concavity_worst:.07915,concave_points_worst:.05741,symmetry_worst:.3487,fractal_dimension_worst:.06958,"":""},{id:89382601,diagnosis:"B",radius_mean:14.61,texture_mean:15.69,perimeter_mean:92.68,area_mean:664.9,smoothness_mean:.07618,compactness_mean:.03515,concavity_mean:.01447,concave_points_mean:.01877,symmetry_mean:.1632,fractal_dimension_mean:.05255,radius_se:.316,texture_se:.9115,perimeter_se:1.954,area_se:28.9,smoothness_se:.005031,compactness_se:.006021,concavity_se:.005325,concave_points_se:.006324,symmetry_se:.01494,fractal_dimension_se:8948e-7,radius_worst:16.46,texture_worst:21.75,perimeter_worst:103.7,area_worst:840.8,smoothness_worst:.1011,compactness_worst:.07087,concavity_worst:.04746,concave_points_worst:.05813,symmetry_worst:.253,fractal_dimension_worst:.05695,"":""},{id:89382602,diagnosis:"B",radius_mean:12.76,texture_mean:13.37,perimeter_mean:82.29,area_mean:504.1,smoothness_mean:.08794,compactness_mean:.07948,concavity_mean:.04052,concave_points_mean:.02548,symmetry_mean:.1601,fractal_dimension_mean:.0614,radius_se:.3265,texture_se:.6594,perimeter_se:2.346,area_se:25.18,smoothness_se:.006494,compactness_se:.02768,concavity_se:.03137,concave_points_se:.01069,symmetry_se:.01731,fractal_dimension_se:.004392,radius_worst:14.19,texture_worst:16.4,perimeter_worst:92.04,area_worst:618.8,smoothness_worst:.1194,compactness_worst:.2208,concavity_worst:.1769,concave_points_worst:.08411,symmetry_worst:.2564,fractal_dimension_worst:.08253,"":""},{id:893988,diagnosis:"B",radius_mean:11.54,texture_mean:10.72,perimeter_mean:73.73,area_mean:409.1,smoothness_mean:.08597,compactness_mean:.05969,concavity_mean:.01367,concave_points_mean:.008907,symmetry_mean:.1833,fractal_dimension_mean:.061,radius_se:.1312,texture_se:.3602,perimeter_se:1.107,area_se:9.438,smoothness_se:.004124,compactness_se:.0134,concavity_se:.01003,concave_points_se:.004667,symmetry_se:.02032,fractal_dimension_se:.001952,radius_worst:12.34,texture_worst:12.87,perimeter_worst:81.23,area_worst:467.8,smoothness_worst:.1092,compactness_worst:.1626,concavity_worst:.08324,concave_points_worst:.04715,symmetry_worst:.339,fractal_dimension_worst:.07434,"":""},{id:894047,diagnosis:"B",radius_mean:8.597,texture_mean:18.6,perimeter_mean:54.09,area_mean:221.2,smoothness_mean:.1074,compactness_mean:.05847,concavity_mean:0,concave_points_mean:0,symmetry_mean:.2163,fractal_dimension_mean:.07359,radius_se:.3368,texture_se:2.777,perimeter_se:2.222,area_se:17.81,smoothness_se:.02075,compactness_se:.01403,concavity_se:0,concave_points_se:0,symmetry_se:.06146,fractal_dimension_se:.00682,radius_worst:8.952,texture_worst:22.44,perimeter_worst:56.65,area_worst:240.1,smoothness_worst:.1347,compactness_worst:.07767,concavity_worst:0,concave_points_worst:0,symmetry_worst:.3142,fractal_dimension_worst:.08116,"":""},{id:894089,diagnosis:"B",radius_mean:12.49,texture_mean:16.85,perimeter_mean:79.19,area_mean:481.6,smoothness_mean:.08511,compactness_mean:.03834,concavity_mean:.004473,concave_points_mean:.006423,symmetry_mean:.1215,fractal_dimension_mean:.05673,radius_se:.1716,texture_se:.7151,perimeter_se:1.047,area_se:12.69,smoothness_se:.004928,compactness_se:.003012,concavity_se:.00262,concave_points_se:.00339,symmetry_se:.01393,fractal_dimension_se:.001344,radius_worst:13.34,texture_worst:19.71,perimeter_worst:84.48,area_worst:544.2,smoothness_worst:.1104,compactness_worst:.04953,concavity_worst:.01938,concave_points_worst:.02784,symmetry_worst:.1917,fractal_dimension_worst:.06174,"":""},{id:894090,diagnosis:"B",radius_mean:12.18,texture_mean:14.08,perimeter_mean:77.25,area_mean:461.4,smoothness_mean:.07734,compactness_mean:.03212,concavity_mean:.01123,concave_points_mean:.005051,symmetry_mean:.1673,fractal_dimension_mean:.05649,radius_se:.2113,texture_se:.5996,perimeter_se:1.438,area_se:15.82,smoothness_se:.005343,compactness_se:.005767,concavity_se:.01123,concave_points_se:.005051,symmetry_se:.01977,fractal_dimension_se:9502e-7,radius_worst:12.85,texture_worst:16.47,perimeter_worst:81.6,area_worst:513.1,smoothness_worst:.1001,compactness_worst:.05332,concavity_worst:.04116,concave_points_worst:.01852,symmetry_worst:.2293,fractal_dimension_worst:.06037,"":""},{id:894326,diagnosis:"M",radius_mean:18.22,texture_mean:18.87,perimeter_mean:118.7,area_mean:1027,smoothness_mean:.09746,compactness_mean:.1117,concavity_mean:.113,concave_points_mean:.0795,symmetry_mean:.1807,fractal_dimension_mean:.05664,radius_se:.4041,texture_se:.5503,perimeter_se:2.547,area_se:48.9,smoothness_se:.004821,compactness_se:.01659,concavity_se:.02408,concave_points_se:.01143,symmetry_se:.01275,fractal_dimension_se:.002451,radius_worst:21.84,texture_worst:25,perimeter_worst:140.9,area_worst:1485,smoothness_worst:.1434,compactness_worst:.2763,concavity_worst:.3853,concave_points_worst:.1776,symmetry_worst:.2812,fractal_dimension_worst:.08198,"":""},{id:894329,diagnosis:"B",radius_mean:9.042,texture_mean:18.9,perimeter_mean:60.07,area_mean:244.5,smoothness_mean:.09968,compactness_mean:.1972,concavity_mean:.1975,concave_points_mean:.04908,symmetry_mean:.233,fractal_dimension_mean:.08743,radius_se:.4653,texture_se:1.911,perimeter_se:3.769,area_se:24.2,smoothness_se:.009845,compactness_se:.0659,concavity_se:.1027,concave_points_se:.02527,symmetry_se:.03491,fractal_dimension_se:.007877,radius_worst:10.06,texture_worst:23.4,perimeter_worst:68.62,area_worst:297.1,smoothness_worst:.1221,compactness_worst:.3748,concavity_worst:.4609,concave_points_worst:.1145,symmetry_worst:.3135,fractal_dimension_worst:.1055,"":""},{id:894335,diagnosis:"B",radius_mean:12.43,texture_mean:17,perimeter_mean:78.6,area_mean:477.3,smoothness_mean:.07557,compactness_mean:.03454,concavity_mean:.01342,concave_points_mean:.01699,symmetry_mean:.1472,fractal_dimension_mean:.05561,radius_se:.3778,texture_se:2.2,perimeter_se:2.487,area_se:31.16,smoothness_se:.007357,compactness_se:.01079,concavity_se:.009959,concave_points_se:.0112,symmetry_se:.03433,fractal_dimension_se:.002961,radius_worst:12.9,texture_worst:20.21,perimeter_worst:81.76,area_worst:515.9,smoothness_worst:.08409,compactness_worst:.04712,concavity_worst:.02237,concave_points_worst:.02832,symmetry_worst:.1901,fractal_dimension_worst:.05932,"":""},{id:894604,diagnosis:"B",radius_mean:10.25,texture_mean:16.18,perimeter_mean:66.52,area_mean:324.2,smoothness_mean:.1061,compactness_mean:.1111,concavity_mean:.06726,concave_points_mean:.03965,symmetry_mean:.1743,fractal_dimension_mean:.07279,radius_se:.3677,texture_se:1.471,perimeter_se:1.597,area_se:22.68,smoothness_se:.01049,compactness_se:.04265,concavity_se:.04004,concave_points_se:.01544,symmetry_se:.02719,fractal_dimension_se:.007596,radius_worst:11.28,texture_worst:20.61,perimeter_worst:71.53,area_worst:390.4,smoothness_worst:.1402,compactness_worst:.236,concavity_worst:.1898,concave_points_worst:.09744,symmetry_worst:.2608,fractal_dimension_worst:.09702,"":""},{id:894618,diagnosis:"M",radius_mean:20.16,texture_mean:19.66,perimeter_mean:131.1,area_mean:1274,smoothness_mean:.0802,compactness_mean:.08564,concavity_mean:.1155,concave_points_mean:.07726,symmetry_mean:.1928,fractal_dimension_mean:.05096,radius_se:.5925,texture_se:.6863,perimeter_se:3.868,area_se:74.85,smoothness_se:.004536,compactness_se:.01376,concavity_se:.02645,concave_points_se:.01247,symmetry_se:.02193,fractal_dimension_se:.001589,radius_worst:23.06,texture_worst:23.03,perimeter_worst:150.2,area_worst:1657,smoothness_worst:.1054,compactness_worst:.1537,concavity_worst:.2606,concave_points_worst:.1425,symmetry_worst:.3055,fractal_dimension_worst:.05933,"":""},{id:894855,diagnosis:"B",radius_mean:12.86,texture_mean:13.32,perimeter_mean:82.82,area_mean:504.8,smoothness_mean:.1134,compactness_mean:.08834,concavity_mean:.038,concave_points_mean:.034,symmetry_mean:.1543,fractal_dimension_mean:.06476,radius_se:.2212,texture_se:1.042,perimeter_se:1.614,area_se:16.57,smoothness_se:.00591,compactness_se:.02016,concavity_se:.01902,concave_points_se:.01011,symmetry_se:.01202,fractal_dimension_se:.003107,radius_worst:14.04,texture_worst:21.08,perimeter_worst:92.8,area_worst:599.5,smoothness_worst:.1547,compactness_worst:.2231,concavity_worst:.1791,concave_points_worst:.1155,symmetry_worst:.2382,fractal_dimension_worst:.08553,"":""},{id:895100,diagnosis:"M",radius_mean:20.34,texture_mean:21.51,perimeter_mean:135.9,area_mean:1264,smoothness_mean:.117,compactness_mean:.1875,concavity_mean:.2565,concave_points_mean:.1504,symmetry_mean:.2569,fractal_dimension_mean:.0667,radius_se:.5702,texture_se:1.023,perimeter_se:4.012,area_se:69.06,smoothness_se:.005485,compactness_se:.02431,concavity_se:.0319,concave_points_se:.01369,symmetry_se:.02768,fractal_dimension_se:.003345,radius_worst:25.3,texture_worst:31.86,perimeter_worst:171.1,area_worst:1938,smoothness_worst:.1592,compactness_worst:.4492,concavity_worst:.5344,concave_points_worst:.2685,symmetry_worst:.5558,fractal_dimension_worst:.1024,"":""},{id:89511501,diagnosis:"B",radius_mean:12.2,texture_mean:15.21,perimeter_mean:78.01,area_mean:457.9,smoothness_mean:.08673,compactness_mean:.06545,concavity_mean:.01994,concave_points_mean:.01692,symmetry_mean:.1638,fractal_dimension_mean:.06129,radius_se:.2575,texture_se:.8073,perimeter_se:1.959,area_se:19.01,smoothness_se:.005403,compactness_se:.01418,concavity_se:.01051,concave_points_se:.005142,symmetry_se:.01333,fractal_dimension_se:.002065,radius_worst:13.75,texture_worst:21.38,perimeter_worst:91.11,area_worst:583.1,smoothness_worst:.1256,compactness_worst:.1928,concavity_worst:.1167,concave_points_worst:.05556,symmetry_worst:.2661,fractal_dimension_worst:.07961,"":""},{id:89511502,diagnosis:"B",radius_mean:12.67,texture_mean:17.3,perimeter_mean:81.25,area_mean:489.9,smoothness_mean:.1028,compactness_mean:.07664,concavity_mean:.03193,concave_points_mean:.02107,symmetry_mean:.1707,fractal_dimension_mean:.05984,radius_se:.21,texture_se:.9505,perimeter_se:1.566,area_se:17.61,smoothness_se:.006809,compactness_se:.009514,concavity_se:.01329,concave_points_se:.006474,symmetry_se:.02057,fractal_dimension_se:.001784,radius_worst:13.71,texture_worst:21.1,perimeter_worst:88.7,area_worst:574.4,smoothness_worst:.1384,compactness_worst:.1212,concavity_worst:.102,concave_points_worst:.05602,symmetry_worst:.2688,fractal_dimension_worst:.06888,"":""},{id:89524,diagnosis:"B",radius_mean:14.11,texture_mean:12.88,perimeter_mean:90.03,area_mean:616.5,smoothness_mean:.09309,compactness_mean:.05306,concavity_mean:.01765,concave_points_mean:.02733,symmetry_mean:.1373,fractal_dimension_mean:.057,radius_se:.2571,texture_se:1.081,perimeter_se:1.558,area_se:23.92,smoothness_se:.006692,compactness_se:.01132,concavity_se:.005717,concave_points_se:.006627,symmetry_se:.01416,fractal_dimension_se:.002476,radius_worst:15.53,texture_worst:18,perimeter_worst:98.4,area_worst:749.9,smoothness_worst:.1281,compactness_worst:.1109,concavity_worst:.05307,concave_points_worst:.0589,symmetry_worst:.21,fractal_dimension_worst:.07083,"":""},{id:895299,diagnosis:"B",radius_mean:12.03,texture_mean:17.93,perimeter_mean:76.09,area_mean:446,smoothness_mean:.07683,compactness_mean:.03892,concavity_mean:.001546,concave_points_mean:.005592,symmetry_mean:.1382,fractal_dimension_mean:.0607,radius_se:.2335,texture_se:.9097,perimeter_se:1.466,area_se:16.97,smoothness_se:.004729,compactness_se:.006887,concavity_se:.001184,concave_points_se:.003951,symmetry_se:.01466,fractal_dimension_se:.001755,radius_worst:13.07,texture_worst:22.25,perimeter_worst:82.74,area_worst:523.4,smoothness_worst:.1013,compactness_worst:.0739,concavity_worst:.007732,concave_points_worst:.02796,symmetry_worst:.2171,fractal_dimension_worst:.07037,"":""},{id:8953902,diagnosis:"M",radius_mean:16.27,texture_mean:20.71,perimeter_mean:106.9,area_mean:813.7,smoothness_mean:.1169,compactness_mean:.1319,concavity_mean:.1478,concave_points_mean:.08488,symmetry_mean:.1948,fractal_dimension_mean:.06277,radius_se:.4375,texture_se:1.232,perimeter_se:3.27,area_se:44.41,smoothness_se:.006697,compactness_se:.02083,concavity_se:.03248,concave_points_se:.01392,symmetry_se:.01536,fractal_dimension_se:.002789,radius_worst:19.28,texture_worst:30.38,perimeter_worst:129.8,area_worst:1121,smoothness_worst:.159,compactness_worst:.2947,concavity_worst:.3597,concave_points_worst:.1583,symmetry_worst:.3103,fractal_dimension_worst:.082,"":""},{id:895633,diagnosis:"M",radius_mean:16.26,texture_mean:21.88,perimeter_mean:107.5,area_mean:826.8,smoothness_mean:.1165,compactness_mean:.1283,concavity_mean:.1799,concave_points_mean:.07981,symmetry_mean:.1869,fractal_dimension_mean:.06532,radius_se:.5706,texture_se:1.457,perimeter_se:2.961,area_se:57.72,smoothness_se:.01056,compactness_se:.03756,concavity_se:.05839,concave_points_se:.01186,symmetry_se:.04022,fractal_dimension_se:.006187,radius_worst:17.73,texture_worst:25.21,perimeter_worst:113.7,area_worst:975.2,smoothness_worst:.1426,compactness_worst:.2116,concavity_worst:.3344,concave_points_worst:.1047,symmetry_worst:.2736,fractal_dimension_worst:.07953,"":""},{id:896839,diagnosis:"M",radius_mean:16.03,texture_mean:15.51,perimeter_mean:105.8,area_mean:793.2,smoothness_mean:.09491,compactness_mean:.1371,concavity_mean:.1204,concave_points_mean:.07041,symmetry_mean:.1782,fractal_dimension_mean:.05976,radius_se:.3371,texture_se:.7476,perimeter_se:2.629,area_se:33.27,smoothness_se:.005839,compactness_se:.03245,concavity_se:.03715,concave_points_se:.01459,symmetry_se:.01467,fractal_dimension_se:.003121,radius_worst:18.76,texture_worst:21.98,perimeter_worst:124.3,area_worst:1070,smoothness_worst:.1435,compactness_worst:.4478,concavity_worst:.4956,concave_points_worst:.1981,symmetry_worst:.3019,fractal_dimension_worst:.09124,"":""},{id:896864,diagnosis:"B",radius_mean:12.98,texture_mean:19.35,perimeter_mean:84.52,area_mean:514,smoothness_mean:.09579,compactness_mean:.1125,concavity_mean:.07107,concave_points_mean:.0295,symmetry_mean:.1761,fractal_dimension_mean:.0654,radius_se:.2684,texture_se:.5664,perimeter_se:2.465,area_se:20.65,smoothness_se:.005727,compactness_se:.03255,concavity_se:.04393,concave_points_se:.009811,symmetry_se:.02751,fractal_dimension_se:.004572,radius_worst:14.42,texture_worst:21.95,perimeter_worst:99.21,area_worst:634.3,smoothness_worst:.1288,compactness_worst:.3253,concavity_worst:.3439,concave_points_worst:.09858,symmetry_worst:.3596,fractal_dimension_worst:.09166,"":""},{id:897132,diagnosis:"B",radius_mean:11.22,texture_mean:19.86,perimeter_mean:71.94,area_mean:387.3,smoothness_mean:.1054,compactness_mean:.06779,concavity_mean:.005006,concave_points_mean:.007583,symmetry_mean:.194,fractal_dimension_mean:.06028,radius_se:.2976,texture_se:1.966,perimeter_se:1.959,area_se:19.62,smoothness_se:.01289,compactness_se:.01104,concavity_se:.003297,concave_points_se:.004967,symmetry_se:.04243,fractal_dimension_se:.001963,radius_worst:11.98,texture_worst:25.78,perimeter_worst:76.91,area_worst:436.1,smoothness_worst:.1424,compactness_worst:.09669,concavity_worst:.01335,concave_points_worst:.02022,symmetry_worst:.3292,fractal_dimension_worst:.06522,"":""},{id:897137,diagnosis:"B",radius_mean:11.25,texture_mean:14.78,perimeter_mean:71.38,area_mean:390,smoothness_mean:.08306,compactness_mean:.04458,concavity_mean:9737e-7,concave_points_mean:.002941,symmetry_mean:.1773,fractal_dimension_mean:.06081,radius_se:.2144,texture_se:.9961,perimeter_se:1.529,area_se:15.07,smoothness_se:.005617,compactness_se:.007124,concavity_se:9737e-7,concave_points_se:.002941,symmetry_se:.017,fractal_dimension_se:.00203,radius_worst:12.76,texture_worst:22.06,perimeter_worst:82.08,area_worst:492.7,smoothness_worst:.1166,compactness_worst:.09794,concavity_worst:.005518,concave_points_worst:.01667,symmetry_worst:.2815,fractal_dimension_worst:.07418,"":""},{id:897374,diagnosis:"B",radius_mean:12.3,texture_mean:19.02,perimeter_mean:77.88,area_mean:464.4,smoothness_mean:.08313,compactness_mean:.04202,concavity_mean:.007756,concave_points_mean:.008535,symmetry_mean:.1539,fractal_dimension_mean:.05945,radius_se:.184,texture_se:1.532,perimeter_se:1.199,area_se:13.24,smoothness_se:.007881,compactness_se:.008432,concavity_se:.007004,concave_points_se:.006522,symmetry_se:.01939,fractal_dimension_se:.002222,radius_worst:13.35,texture_worst:28.46,perimeter_worst:84.53,area_worst:544.3,smoothness_worst:.1222,compactness_worst:.09052,concavity_worst:.03619,concave_points_worst:.03983,symmetry_worst:.2554,fractal_dimension_worst:.07207,"":""},{id:89742801,diagnosis:"M",radius_mean:17.06,texture_mean:21,perimeter_mean:111.8,area_mean:918.6,smoothness_mean:.1119,compactness_mean:.1056,concavity_mean:.1508,concave_points_mean:.09934,symmetry_mean:.1727,fractal_dimension_mean:.06071,radius_se:.8161,texture_se:2.129,perimeter_se:6.076,area_se:87.17,smoothness_se:.006455,compactness_se:.01797,concavity_se:.04502,concave_points_se:.01744,symmetry_se:.01829,fractal_dimension_se:.003733,radius_worst:20.99,texture_worst:33.15,perimeter_worst:143.2,area_worst:1362,smoothness_worst:.1449,compactness_worst:.2053,concavity_worst:.392,concave_points_worst:.1827,symmetry_worst:.2623,fractal_dimension_worst:.07599,"":""},{id:897604,diagnosis:"B",radius_mean:12.99,texture_mean:14.23,perimeter_mean:84.08,area_mean:514.3,smoothness_mean:.09462,compactness_mean:.09965,concavity_mean:.03738,concave_points_mean:.02098,symmetry_mean:.1652,fractal_dimension_mean:.07238,radius_se:.1814,texture_se:.6412,perimeter_se:.9219,area_se:14.41,smoothness_se:.005231,compactness_se:.02305,concavity_se:.03113,concave_points_se:.007315,symmetry_se:.01639,fractal_dimension_se:.005701,radius_worst:13.72,texture_worst:16.91,perimeter_worst:87.38,area_worst:576,smoothness_worst:.1142,compactness_worst:.1975,concavity_worst:.145,concave_points_worst:.0585,symmetry_worst:.2432,fractal_dimension_worst:.1009,"":""},{id:897630,diagnosis:"M",radius_mean:18.77,texture_mean:21.43,perimeter_mean:122.9,area_mean:1092,smoothness_mean:.09116,compactness_mean:.1402,concavity_mean:.106,concave_points_mean:.0609,symmetry_mean:.1953,fractal_dimension_mean:.06083,radius_se:.6422,texture_se:1.53,perimeter_se:4.369,area_se:88.25,smoothness_se:.007548,compactness_se:.03897,concavity_se:.03914,concave_points_se:.01816,symmetry_se:.02168,fractal_dimension_se:.004445,radius_worst:24.54,texture_worst:34.37,perimeter_worst:161.1,area_worst:1873,smoothness_worst:.1498,compactness_worst:.4827,concavity_worst:.4634,concave_points_worst:.2048,symmetry_worst:.3679,fractal_dimension_worst:.0987,"":""},{id:897880,diagnosis:"B",radius_mean:10.05,texture_mean:17.53,perimeter_mean:64.41,area_mean:310.8,smoothness_mean:.1007,compactness_mean:.07326,concavity_mean:.02511,concave_points_mean:.01775,symmetry_mean:.189,fractal_dimension_mean:.06331,radius_se:.2619,texture_se:2.015,perimeter_se:1.778,area_se:16.85,smoothness_se:.007803,compactness_se:.01449,concavity_se:.0169,concave_points_se:.008043,symmetry_se:.021,fractal_dimension_se:.002778,radius_worst:11.16,texture_worst:26.84,perimeter_worst:71.98,area_worst:384,smoothness_worst:.1402,compactness_worst:.1402,concavity_worst:.1055,concave_points_worst:.06499,symmetry_worst:.2894,fractal_dimension_worst:.07664,"":""},{id:89812,diagnosis:"M",radius_mean:23.51,texture_mean:24.27,perimeter_mean:155.1,area_mean:1747,smoothness_mean:.1069,compactness_mean:.1283,concavity_mean:.2308,concave_points_mean:.141,symmetry_mean:.1797,fractal_dimension_mean:.05506,radius_se:1.009,texture_se:.9245,perimeter_se:6.462,area_se:164.1,smoothness_se:.006292,compactness_se:.01971,concavity_se:.03582,concave_points_se:.01301,symmetry_se:.01479,fractal_dimension_se:.003118,radius_worst:30.67,texture_worst:30.73,perimeter_worst:202.4,area_worst:2906,smoothness_worst:.1515,compactness_worst:.2678,concavity_worst:.4819,concave_points_worst:.2089,symmetry_worst:.2593,fractal_dimension_worst:.07738,"":""},{id:89813,diagnosis:"B",radius_mean:14.42,texture_mean:16.54,perimeter_mean:94.15,area_mean:641.2,smoothness_mean:.09751,compactness_mean:.1139,concavity_mean:.08007,concave_points_mean:.04223,symmetry_mean:.1912,fractal_dimension_mean:.06412,radius_se:.3491,texture_se:.7706,perimeter_se:2.677,area_se:32.14,smoothness_se:.004577,compactness_se:.03053,concavity_se:.0384,concave_points_se:.01243,symmetry_se:.01873,fractal_dimension_se:.003373,radius_worst:16.67,texture_worst:21.51,perimeter_worst:111.4,area_worst:862.1,smoothness_worst:.1294,compactness_worst:.3371,concavity_worst:.3755,concave_points_worst:.1414,symmetry_worst:.3053,fractal_dimension_worst:.08764,"":""},{id:898143,diagnosis:"B",radius_mean:9.606,texture_mean:16.84,perimeter_mean:61.64,area_mean:280.5,smoothness_mean:.08481,compactness_mean:.09228,concavity_mean:.08422,concave_points_mean:.02292,symmetry_mean:.2036,fractal_dimension_mean:.07125,radius_se:.1844,texture_se:.9429,perimeter_se:1.429,area_se:12.07,smoothness_se:.005954,compactness_se:.03471,concavity_se:.05028,concave_points_se:.00851,symmetry_se:.0175,fractal_dimension_se:.004031,radius_worst:10.75,texture_worst:23.07,perimeter_worst:71.25,area_worst:353.6,smoothness_worst:.1233,compactness_worst:.3416,concavity_worst:.4341,concave_points_worst:.0812,symmetry_worst:.2982,fractal_dimension_worst:.09825,"":""},{id:89827,diagnosis:"B",radius_mean:11.06,texture_mean:14.96,perimeter_mean:71.49,area_mean:373.9,smoothness_mean:.1033,compactness_mean:.09097,concavity_mean:.05397,concave_points_mean:.03341,symmetry_mean:.1776,fractal_dimension_mean:.06907,radius_se:.1601,texture_se:.8225,perimeter_se:1.355,area_se:10.8,smoothness_se:.007416,compactness_se:.01877,concavity_se:.02758,concave_points_se:.0101,symmetry_se:.02348,fractal_dimension_se:.002917,radius_worst:11.92,texture_worst:19.9,perimeter_worst:79.76,area_worst:440,smoothness_worst:.1418,compactness_worst:.221,concavity_worst:.2299,concave_points_worst:.1075,symmetry_worst:.3301,fractal_dimension_worst:.0908,"":""},{id:898431,diagnosis:"M",radius_mean:19.68,texture_mean:21.68,perimeter_mean:129.9,area_mean:1194,smoothness_mean:.09797,compactness_mean:.1339,concavity_mean:.1863,concave_points_mean:.1103,symmetry_mean:.2082,fractal_dimension_mean:.05715,radius_se:.6226,texture_se:2.284,perimeter_se:5.173,area_se:67.66,smoothness_se:.004756,compactness_se:.03368,concavity_se:.04345,concave_points_se:.01806,symmetry_se:.03756,fractal_dimension_se:.003288,radius_worst:22.75,texture_worst:34.66,perimeter_worst:157.6,area_worst:1540,smoothness_worst:.1218,compactness_worst:.3458,concavity_worst:.4734,concave_points_worst:.2255,symmetry_worst:.4045,fractal_dimension_worst:.07918,"":""},{id:89864002,diagnosis:"B",radius_mean:11.71,texture_mean:15.45,perimeter_mean:75.03,area_mean:420.3,smoothness_mean:.115,compactness_mean:.07281,concavity_mean:.04006,concave_points_mean:.0325,symmetry_mean:.2009,fractal_dimension_mean:.06506,radius_se:.3446,texture_se:.7395,perimeter_se:2.355,area_se:24.53,smoothness_se:.009536,compactness_se:.01097,concavity_se:.01651,concave_points_se:.01121,symmetry_se:.01953,fractal_dimension_se:.0031,radius_worst:13.06,texture_worst:18.16,perimeter_worst:84.16,area_worst:516.4,smoothness_worst:.146,compactness_worst:.1115,concavity_worst:.1087,concave_points_worst:.07864,symmetry_worst:.2765,fractal_dimension_worst:.07806,"":""},{id:898677,diagnosis:"B",radius_mean:10.26,texture_mean:14.71,perimeter_mean:66.2,area_mean:321.6,smoothness_mean:.09882,compactness_mean:.09159,concavity_mean:.03581,concave_points_mean:.02037,symmetry_mean:.1633,fractal_dimension_mean:.07005,radius_se:.338,texture_se:2.509,perimeter_se:2.394,area_se:19.33,smoothness_se:.01736,compactness_se:.04671,concavity_se:.02611,concave_points_se:.01296,symmetry_se:.03675,fractal_dimension_se:.006758,radius_worst:10.88,texture_worst:19.48,perimeter_worst:70.89,area_worst:357.1,smoothness_worst:.136,compactness_worst:.1636,concavity_worst:.07162,concave_points_worst:.04074,symmetry_worst:.2434,fractal_dimension_worst:.08488,"":""},{id:898678,diagnosis:"B",radius_mean:12.06,texture_mean:18.9,perimeter_mean:76.66,area_mean:445.3,smoothness_mean:.08386,compactness_mean:.05794,concavity_mean:.00751,concave_points_mean:.008488,symmetry_mean:.1555,fractal_dimension_mean:.06048,radius_se:.243,texture_se:1.152,perimeter_se:1.559,area_se:18.02,smoothness_se:.00718,compactness_se:.01096,concavity_se:.005832,concave_points_se:.005495,symmetry_se:.01982,fractal_dimension_se:.002754,radius_worst:13.64,texture_worst:27.06,perimeter_worst:86.54,area_worst:562.6,smoothness_worst:.1289,compactness_worst:.1352,concavity_worst:.04506,concave_points_worst:.05093,symmetry_worst:.288,fractal_dimension_worst:.08083,"":""},{id:89869,diagnosis:"B",radius_mean:14.76,texture_mean:14.74,perimeter_mean:94.87,area_mean:668.7,smoothness_mean:.08875,compactness_mean:.0778,concavity_mean:.04608,concave_points_mean:.03528,symmetry_mean:.1521,fractal_dimension_mean:.05912,radius_se:.3428,texture_se:.3981,perimeter_se:2.537,area_se:29.06,smoothness_se:.004732,compactness_se:.01506,concavity_se:.01855,concave_points_se:.01067,symmetry_se:.02163,fractal_dimension_se:.002783,radius_worst:17.27,texture_worst:17.93,perimeter_worst:114.2,area_worst:880.8,smoothness_worst:.122,compactness_worst:.2009,concavity_worst:.2151,concave_points_worst:.1251,symmetry_worst:.3109,fractal_dimension_worst:.08187,"":""},{id:898690,diagnosis:"B",radius_mean:11.47,texture_mean:16.03,perimeter_mean:73.02,area_mean:402.7,smoothness_mean:.09076,compactness_mean:.05886,concavity_mean:.02587,concave_points_mean:.02322,symmetry_mean:.1634,fractal_dimension_mean:.06372,radius_se:.1707,texture_se:.7615,perimeter_se:1.09,area_se:12.25,smoothness_se:.009191,compactness_se:.008548,concavity_se:.0094,concave_points_se:.006315,symmetry_se:.01755,fractal_dimension_se:.003009,radius_worst:12.51,texture_worst:20.79,perimeter_worst:79.67,area_worst:475.8,smoothness_worst:.1531,compactness_worst:.112,concavity_worst:.09823,concave_points_worst:.06548,symmetry_worst:.2851,fractal_dimension_worst:.08763,"":""},{id:899147,diagnosis:"B",radius_mean:11.95,texture_mean:14.96,perimeter_mean:77.23,area_mean:426.7,smoothness_mean:.1158,compactness_mean:.1206,concavity_mean:.01171,concave_points_mean:.01787,symmetry_mean:.2459,fractal_dimension_mean:.06581,radius_se:.361,texture_se:1.05,perimeter_se:2.455,area_se:26.65,smoothness_se:.0058,compactness_se:.02417,concavity_se:.007816,concave_points_se:.01052,symmetry_se:.02734,fractal_dimension_se:.003114,radius_worst:12.81,texture_worst:17.72,perimeter_worst:83.09,area_worst:496.2,smoothness_worst:.1293,compactness_worst:.1885,concavity_worst:.03122,concave_points_worst:.04766,symmetry_worst:.3124,fractal_dimension_worst:.0759,"":""},{id:899187,diagnosis:"B",radius_mean:11.66,texture_mean:17.07,perimeter_mean:73.7,area_mean:421,smoothness_mean:.07561,compactness_mean:.0363,concavity_mean:.008306,concave_points_mean:.01162,symmetry_mean:.1671,fractal_dimension_mean:.05731,radius_se:.3534,texture_se:.6724,perimeter_se:2.225,area_se:26.03,smoothness_se:.006583,compactness_se:.006991,concavity_se:.005949,concave_points_se:.006296,symmetry_se:.02216,fractal_dimension_se:.002668,radius_worst:13.28,texture_worst:19.74,perimeter_worst:83.61,area_worst:542.5,smoothness_worst:.09958,compactness_worst:.06476,concavity_worst:.03046,concave_points_worst:.04262,symmetry_worst:.2731,fractal_dimension_worst:.06825,"":""},{id:899667,diagnosis:"M",radius_mean:15.75,texture_mean:19.22,perimeter_mean:107.1,area_mean:758.6,smoothness_mean:.1243,compactness_mean:.2364,concavity_mean:.2914,concave_points_mean:.1242,symmetry_mean:.2375,fractal_dimension_mean:.07603,radius_se:.5204,texture_se:1.324,perimeter_se:3.477,area_se:51.22,smoothness_se:.009329,compactness_se:.06559,concavity_se:.09953,concave_points_se:.02283,symmetry_se:.05543,fractal_dimension_se:.00733,radius_worst:17.36,texture_worst:24.17,perimeter_worst:119.4,area_worst:915.3,smoothness_worst:.155,compactness_worst:.5046,concavity_worst:.6872,concave_points_worst:.2135,symmetry_worst:.4245,fractal_dimension_worst:.105,"":""},{id:899987,diagnosis:"M",radius_mean:25.73,texture_mean:17.46,perimeter_mean:174.2,area_mean:2010,smoothness_mean:.1149,compactness_mean:.2363,concavity_mean:.3368,concave_points_mean:.1913,symmetry_mean:.1956,fractal_dimension_mean:.06121,radius_se:.9948,texture_se:.8509,perimeter_se:7.222,area_se:153.1,smoothness_se:.006369,compactness_se:.04243,concavity_se:.04266,concave_points_se:.01508,symmetry_se:.02335,fractal_dimension_se:.003385,radius_worst:33.13,texture_worst:23.58,perimeter_worst:229.3,area_worst:3234,smoothness_worst:.153,compactness_worst:.5937,concavity_worst:.6451,concave_points_worst:.2756,symmetry_worst:.369,fractal_dimension_worst:.08815,"":""},{id:9010018,diagnosis:"M",radius_mean:15.08,texture_mean:25.74,perimeter_mean:98,area_mean:716.6,smoothness_mean:.1024,compactness_mean:.09769,concavity_mean:.1235,concave_points_mean:.06553,symmetry_mean:.1647,fractal_dimension_mean:.06464,radius_se:.6534,texture_se:1.506,perimeter_se:4.174,area_se:63.37,smoothness_se:.01052,compactness_se:.02431,concavity_se:.04912,concave_points_se:.01746,symmetry_se:.0212,fractal_dimension_se:.004867,radius_worst:18.51,texture_worst:33.22,perimeter_worst:121.2,area_worst:1050,smoothness_worst:.166,compactness_worst:.2356,concavity_worst:.4029,concave_points_worst:.1526,symmetry_worst:.2654,fractal_dimension_worst:.09438,"":""},{id:901011,diagnosis:"B",radius_mean:11.14,texture_mean:14.07,perimeter_mean:71.24,area_mean:384.6,smoothness_mean:.07274,compactness_mean:.06064,concavity_mean:.04505,concave_points_mean:.01471,symmetry_mean:.169,fractal_dimension_mean:.06083,radius_se:.4222,texture_se:.8092,perimeter_se:3.33,area_se:28.84,smoothness_se:.005541,compactness_se:.03387,concavity_se:.04505,concave_points_se:.01471,symmetry_se:.03102,fractal_dimension_se:.004831,radius_worst:12.12,texture_worst:15.82,perimeter_worst:79.62,area_worst:453.5,smoothness_worst:.08864,compactness_worst:.1256,concavity_worst:.1201,concave_points_worst:.03922,symmetry_worst:.2576,fractal_dimension_worst:.07018,"":""},{id:9010258,diagnosis:"B",radius_mean:12.56,texture_mean:19.07,perimeter_mean:81.92,area_mean:485.8,smoothness_mean:.0876,compactness_mean:.1038,concavity_mean:.103,concave_points_mean:.04391,symmetry_mean:.1533,fractal_dimension_mean:.06184,radius_se:.3602,texture_se:1.478,perimeter_se:3.212,area_se:27.49,smoothness_se:.009853,compactness_se:.04235,concavity_se:.06271,concave_points_se:.01966,symmetry_se:.02639,fractal_dimension_se:.004205,radius_worst:13.37,texture_worst:22.43,perimeter_worst:89.02,area_worst:547.4,smoothness_worst:.1096,compactness_worst:.2002,concavity_worst:.2388,concave_points_worst:.09265,symmetry_worst:.2121,fractal_dimension_worst:.07188,"":""},{id:9010259,diagnosis:"B",radius_mean:13.05,texture_mean:18.59,perimeter_mean:85.09,area_mean:512,smoothness_mean:.1082,compactness_mean:.1304,concavity_mean:.09603,concave_points_mean:.05603,symmetry_mean:.2035,fractal_dimension_mean:.06501,radius_se:.3106,texture_se:1.51,perimeter_se:2.59,area_se:21.57,smoothness_se:.007807,compactness_se:.03932,concavity_se:.05112,concave_points_se:.01876,symmetry_se:.0286,fractal_dimension_se:.005715,radius_worst:14.19,texture_worst:24.85,perimeter_worst:94.22,area_worst:591.2,smoothness_worst:.1343,compactness_worst:.2658,concavity_worst:.2573,concave_points_worst:.1258,symmetry_worst:.3113,fractal_dimension_worst:.08317,"":""},{id:901028,diagnosis:"B",radius_mean:13.87,texture_mean:16.21,perimeter_mean:88.52,area_mean:593.7,smoothness_mean:.08743,compactness_mean:.05492,concavity_mean:.01502,concave_points_mean:.02088,symmetry_mean:.1424,fractal_dimension_mean:.05883,radius_se:.2543,texture_se:1.363,perimeter_se:1.737,area_se:20.74,smoothness_se:.005638,compactness_se:.007939,concavity_se:.005254,concave_points_se:.006042,symmetry_se:.01544,fractal_dimension_se:.002087,radius_worst:15.11,texture_worst:25.58,perimeter_worst:96.74,area_worst:694.4,smoothness_worst:.1153,compactness_worst:.1008,concavity_worst:.05285,concave_points_worst:.05556,symmetry_worst:.2362,fractal_dimension_worst:.07113,"":""},{id:9010333,diagnosis:"B",radius_mean:8.878,texture_mean:15.49,perimeter_mean:56.74,area_mean:241,smoothness_mean:.08293,compactness_mean:.07698,concavity_mean:.04721,concave_points_mean:.02381,symmetry_mean:.193,fractal_dimension_mean:.06621,radius_se:.5381,texture_se:1.2,perimeter_se:4.277,area_se:30.18,smoothness_se:.01093,compactness_se:.02899,concavity_se:.03214,concave_points_se:.01506,symmetry_se:.02837,fractal_dimension_se:.004174,radius_worst:9.981,texture_worst:17.7,perimeter_worst:65.27,area_worst:302,smoothness_worst:.1015,compactness_worst:.1248,concavity_worst:.09441,concave_points_worst:.04762,symmetry_worst:.2434,fractal_dimension_worst:.07431,"":""},{id:901034301,diagnosis:"B",radius_mean:9.436,texture_mean:18.32,perimeter_mean:59.82,area_mean:278.6,smoothness_mean:.1009,compactness_mean:.05956,concavity_mean:.0271,concave_points_mean:.01406,symmetry_mean:.1506,fractal_dimension_mean:.06959,radius_se:.5079,texture_se:1.247,perimeter_se:3.267,area_se:30.48,smoothness_se:.006836,compactness_se:.008982,concavity_se:.02348,concave_points_se:.006565,symmetry_se:.01942,fractal_dimension_se:.002713,radius_worst:12.02,texture_worst:25.02,perimeter_worst:75.79,area_worst:439.6,smoothness_worst:.1333,compactness_worst:.1049,concavity_worst:.1144,concave_points_worst:.05052,symmetry_worst:.2454,fractal_dimension_worst:.08136,"":""},{id:901034302,diagnosis:"B",radius_mean:12.54,texture_mean:18.07,perimeter_mean:79.42,area_mean:491.9,smoothness_mean:.07436,compactness_mean:.0265,concavity_mean:.001194,concave_points_mean:.005449,symmetry_mean:.1528,fractal_dimension_mean:.05185,radius_se:.3511,texture_se:.9527,perimeter_se:2.329,area_se:28.3,smoothness_se:.005783,compactness_se:.004693,concavity_se:7929e-7,concave_points_se:.003617,symmetry_se:.02043,fractal_dimension_se:.001058,radius_worst:13.72,texture_worst:20.98,perimeter_worst:86.82,area_worst:585.7,smoothness_worst:.09293,compactness_worst:.04327,concavity_worst:.003581,concave_points_worst:.01635,symmetry_worst:.2233,fractal_dimension_worst:.05521,"":""},{id:901041,diagnosis:"B",radius_mean:13.3,texture_mean:21.57,perimeter_mean:85.24,area_mean:546.1,smoothness_mean:.08582,compactness_mean:.06373,concavity_mean:.03344,concave_points_mean:.02424,symmetry_mean:.1815,fractal_dimension_mean:.05696,radius_se:.2621,texture_se:1.539,perimeter_se:2.028,area_se:20.98,smoothness_se:.005498,compactness_se:.02045,concavity_se:.01795,concave_points_se:.006399,symmetry_se:.01829,fractal_dimension_se:.001956,radius_worst:14.2,texture_worst:29.2,perimeter_worst:92.94,area_worst:621.2,smoothness_worst:.114,compactness_worst:.1667,concavity_worst:.1212,concave_points_worst:.05614,symmetry_worst:.2637,fractal_dimension_worst:.06658,"":""},{id:9010598,diagnosis:"B",radius_mean:12.76,texture_mean:18.84,perimeter_mean:81.87,area_mean:496.6,smoothness_mean:.09676,compactness_mean:.07952,concavity_mean:.02688,concave_points_mean:.01781,symmetry_mean:.1759,fractal_dimension_mean:.06183,radius_se:.2213,texture_se:1.285,perimeter_se:1.535,area_se:17.26,smoothness_se:.005608,compactness_se:.01646,concavity_se:.01529,concave_points_se:.009997,symmetry_se:.01909,fractal_dimension_se:.002133,radius_worst:13.75,texture_worst:25.99,perimeter_worst:87.82,area_worst:579.7,smoothness_worst:.1298,compactness_worst:.1839,concavity_worst:.1255,concave_points_worst:.08312,symmetry_worst:.2744,fractal_dimension_worst:.07238,"":""},{id:9010872,diagnosis:"B",radius_mean:16.5,texture_mean:18.29,perimeter_mean:106.6,area_mean:838.1,smoothness_mean:.09686,compactness_mean:.08468,concavity_mean:.05862,concave_points_mean:.04835,symmetry_mean:.1495,fractal_dimension_mean:.05593,radius_se:.3389,texture_se:1.439,perimeter_se:2.344,area_se:33.58,smoothness_se:.007257,compactness_se:.01805,concavity_se:.01832,concave_points_se:.01033,symmetry_se:.01694,fractal_dimension_se:.002001,radius_worst:18.13,texture_worst:25.45,perimeter_worst:117.2,area_worst:1009,smoothness_worst:.1338,compactness_worst:.1679,concavity_worst:.1663,concave_points_worst:.09123,symmetry_worst:.2394,fractal_dimension_worst:.06469,"":""},{id:9010877,diagnosis:"B",radius_mean:13.4,texture_mean:16.95,perimeter_mean:85.48,area_mean:552.4,smoothness_mean:.07937,compactness_mean:.05696,concavity_mean:.02181,concave_points_mean:.01473,symmetry_mean:.165,fractal_dimension_mean:.05701,radius_se:.1584,texture_se:.6124,perimeter_se:1.036,area_se:13.22,smoothness_se:.004394,compactness_se:.0125,concavity_se:.01451,concave_points_se:.005484,symmetry_se:.01291,fractal_dimension_se:.002074,radius_worst:14.73,texture_worst:21.7,perimeter_worst:93.76,area_worst:663.5,smoothness_worst:.1213,compactness_worst:.1676,concavity_worst:.1364,concave_points_worst:.06987,symmetry_worst:.2741,fractal_dimension_worst:.07582,"":""},{id:901088,diagnosis:"M",radius_mean:20.44,texture_mean:21.78,perimeter_mean:133.8,area_mean:1293,smoothness_mean:.0915,compactness_mean:.1131,concavity_mean:.09799,concave_points_mean:.07785,symmetry_mean:.1618,fractal_dimension_mean:.05557,radius_se:.5781,texture_se:.9168,perimeter_se:4.218,area_se:72.44,smoothness_se:.006208,compactness_se:.01906,concavity_se:.02375,concave_points_se:.01461,symmetry_se:.01445,fractal_dimension_se:.001906,radius_worst:24.31,texture_worst:26.37,perimeter_worst:161.2,area_worst:1780,smoothness_worst:.1327,compactness_worst:.2376,concavity_worst:.2702,concave_points_worst:.1765,symmetry_worst:.2609,fractal_dimension_worst:.06735,"":""},{id:9011494,diagnosis:"M",radius_mean:20.2,texture_mean:26.83,perimeter_mean:133.7,area_mean:1234,smoothness_mean:.09905,compactness_mean:.1669,concavity_mean:.1641,concave_points_mean:.1265,symmetry_mean:.1875,fractal_dimension_mean:.0602,radius_se:.9761,texture_se:1.892,perimeter_se:7.128,area_se:103.6,smoothness_se:.008439,compactness_se:.04674,concavity_se:.05904,concave_points_se:.02536,symmetry_se:.0371,fractal_dimension_se:.004286,radius_worst:24.19,texture_worst:33.81,perimeter_worst:160,area_worst:1671,smoothness_worst:.1278,compactness_worst:.3416,concavity_worst:.3703,concave_points_worst:.2152,symmetry_worst:.3271,fractal_dimension_worst:.07632,"":""},{id:9011495,diagnosis:"B",radius_mean:12.21,texture_mean:18.02,perimeter_mean:78.31,area_mean:458.4,smoothness_mean:.09231,compactness_mean:.07175,concavity_mean:.04392,concave_points_mean:.02027,symmetry_mean:.1695,fractal_dimension_mean:.05916,radius_se:.2527,texture_se:.7786,perimeter_se:1.874,area_se:18.57,smoothness_se:.005833,compactness_se:.01388,concavity_se:.02,concave_points_se:.007087,symmetry_se:.01938,fractal_dimension_se:.00196,radius_worst:14.29,texture_worst:24.04,perimeter_worst:93.85,area_worst:624.6,smoothness_worst:.1368,compactness_worst:.217,concavity_worst:.2413,concave_points_worst:.08829,symmetry_worst:.3218,fractal_dimension_worst:.0747,"":""},{id:9011971,diagnosis:"M",radius_mean:21.71,texture_mean:17.25,perimeter_mean:140.9,area_mean:1546,smoothness_mean:.09384,compactness_mean:.08562,concavity_mean:.1168,concave_points_mean:.08465,symmetry_mean:.1717,fractal_dimension_mean:.05054,radius_se:1.207,texture_se:1.051,perimeter_se:7.733,area_se:224.1,smoothness_se:.005568,compactness_se:.01112,concavity_se:.02096,concave_points_se:.01197,symmetry_se:.01263,fractal_dimension_se:.001803,radius_worst:30.75,texture_worst:26.44,perimeter_worst:199.5,area_worst:3143,smoothness_worst:.1363,compactness_worst:.1628,concavity_worst:.2861,concave_points_worst:.182,symmetry_worst:.251,fractal_dimension_worst:.06494,"":""},{id:9012e3,diagnosis:"M",radius_mean:22.01,texture_mean:21.9,perimeter_mean:147.2,area_mean:1482,smoothness_mean:.1063,compactness_mean:.1954,concavity_mean:.2448,concave_points_mean:.1501,symmetry_mean:.1824,fractal_dimension_mean:.0614,radius_se:1.008,texture_se:.6999,perimeter_se:7.561,area_se:130.2,smoothness_se:.003978,compactness_se:.02821,concavity_se:.03576,concave_points_se:.01471,symmetry_se:.01518,fractal_dimension_se:.003796,radius_worst:27.66,texture_worst:25.8,perimeter_worst:195,area_worst:2227,smoothness_worst:.1294,compactness_worst:.3885,concavity_worst:.4756,concave_points_worst:.2432,symmetry_worst:.2741,fractal_dimension_worst:.08574,"":""},{id:9012315,diagnosis:"M",radius_mean:16.35,texture_mean:23.29,perimeter_mean:109,area_mean:840.4,smoothness_mean:.09742,compactness_mean:.1497,concavity_mean:.1811,concave_points_mean:.08773,symmetry_mean:.2175,fractal_dimension_mean:.06218,radius_se:.4312,texture_se:1.022,perimeter_se:2.972,area_se:45.5,smoothness_se:.005635,compactness_se:.03917,concavity_se:.06072,concave_points_se:.01656,symmetry_se:.03197,fractal_dimension_se:.004085,radius_worst:19.38,texture_worst:31.03,perimeter_worst:129.3,area_worst:1165,smoothness_worst:.1415,compactness_worst:.4665,concavity_worst:.7087,concave_points_worst:.2248,symmetry_worst:.4824,fractal_dimension_worst:.09614,"":""},{id:9012568,diagnosis:"B",radius_mean:15.19,texture_mean:13.21,perimeter_mean:97.65,area_mean:711.8,smoothness_mean:.07963,compactness_mean:.06934,concavity_mean:.03393,concave_points_mean:.02657,symmetry_mean:.1721,fractal_dimension_mean:.05544,radius_se:.1783,texture_se:.4125,perimeter_se:1.338,area_se:17.72,smoothness_se:.005012,compactness_se:.01485,concavity_se:.01551,concave_points_se:.009155,symmetry_se:.01647,fractal_dimension_se:.001767,radius_worst:16.2,texture_worst:15.73,perimeter_worst:104.5,area_worst:819.1,smoothness_worst:.1126,compactness_worst:.1737,concavity_worst:.1362,concave_points_worst:.08178,symmetry_worst:.2487,fractal_dimension_worst:.06766,"":""},{id:9012795,diagnosis:"M",radius_mean:21.37,texture_mean:15.1,perimeter_mean:141.3,area_mean:1386,smoothness_mean:.1001,compactness_mean:.1515,concavity_mean:.1932,concave_points_mean:.1255,symmetry_mean:.1973,fractal_dimension_mean:.06183,radius_se:.3414,texture_se:1.309,perimeter_se:2.407,area_se:39.06,smoothness_se:.004426,compactness_se:.02675,concavity_se:.03437,concave_points_se:.01343,symmetry_se:.01675,fractal_dimension_se:.004367,radius_worst:22.69,texture_worst:21.84,perimeter_worst:152.1,area_worst:1535,smoothness_worst:.1192,compactness_worst:.284,concavity_worst:.4024,concave_points_worst:.1966,symmetry_worst:.273,fractal_dimension_worst:.08666,"":""},{id:901288,diagnosis:"M",radius_mean:20.64,texture_mean:17.35,perimeter_mean:134.8,area_mean:1335,smoothness_mean:.09446,compactness_mean:.1076,concavity_mean:.1527,concave_points_mean:.08941,symmetry_mean:.1571,fractal_dimension_mean:.05478,radius_se:.6137,texture_se:.6575,perimeter_se:4.119,area_se:77.02,smoothness_se:.006211,compactness_se:.01895,concavity_se:.02681,concave_points_se:.01232,symmetry_se:.01276,fractal_dimension_se:.001711,radius_worst:25.37,texture_worst:23.17,perimeter_worst:166.8,area_worst:1946,smoothness_worst:.1562,compactness_worst:.3055,concavity_worst:.4159,concave_points_worst:.2112,symmetry_worst:.2689,fractal_dimension_worst:.07055,"":""},{id:9013005,diagnosis:"B",radius_mean:13.69,texture_mean:16.07,perimeter_mean:87.84,area_mean:579.1,smoothness_mean:.08302,compactness_mean:.06374,concavity_mean:.02556,concave_points_mean:.02031,symmetry_mean:.1872,fractal_dimension_mean:.05669,radius_se:.1705,texture_se:.5066,perimeter_se:1.372,area_se:14,smoothness_se:.00423,compactness_se:.01587,concavity_se:.01169,concave_points_se:.006335,symmetry_se:.01943,fractal_dimension_se:.002177,radius_worst:14.84,texture_worst:20.21,perimeter_worst:99.16,area_worst:670.6,smoothness_worst:.1105,compactness_worst:.2096,concavity_worst:.1346,concave_points_worst:.06987,symmetry_worst:.3323,fractal_dimension_worst:.07701,"":""},{id:901303,diagnosis:"B",radius_mean:16.17,texture_mean:16.07,perimeter_mean:106.3,area_mean:788.5,smoothness_mean:.0988,compactness_mean:.1438,concavity_mean:.06651,concave_points_mean:.05397,symmetry_mean:.199,fractal_dimension_mean:.06572,radius_se:.1745,texture_se:.489,perimeter_se:1.349,area_se:14.91,smoothness_se:.00451,compactness_se:.01812,concavity_se:.01951,concave_points_se:.01196,symmetry_se:.01934,fractal_dimension_se:.003696,radius_worst:16.97,texture_worst:19.14,perimeter_worst:113.1,area_worst:861.5,smoothness_worst:.1235,compactness_worst:.255,concavity_worst:.2114,concave_points_worst:.1251,symmetry_worst:.3153,fractal_dimension_worst:.0896,"":""},{id:901315,diagnosis:"B",radius_mean:10.57,texture_mean:20.22,perimeter_mean:70.15,area_mean:338.3,smoothness_mean:.09073,compactness_mean:.166,concavity_mean:.228,concave_points_mean:.05941,symmetry_mean:.2188,fractal_dimension_mean:.0845,radius_se:.1115,texture_se:1.231,perimeter_se:2.363,area_se:7.228,smoothness_se:.008499,compactness_se:.07643,concavity_se:.1535,concave_points_se:.02919,symmetry_se:.01617,fractal_dimension_se:.0122,radius_worst:10.85,texture_worst:22.82,perimeter_worst:76.51,area_worst:351.9,smoothness_worst:.1143,compactness_worst:.3619,concavity_worst:.603,concave_points_worst:.1465,symmetry_worst:.2597,fractal_dimension_worst:.12,"":""},{id:9013579,diagnosis:"B",radius_mean:13.46,texture_mean:28.21,perimeter_mean:85.89,area_mean:562.1,smoothness_mean:.07517,compactness_mean:.04726,concavity_mean:.01271,concave_points_mean:.01117,symmetry_mean:.1421,fractal_dimension_mean:.05763,radius_se:.1689,texture_se:1.15,perimeter_se:1.4,area_se:14.91,smoothness_se:.004942,compactness_se:.01203,concavity_se:.007508,concave_points_se:.005179,symmetry_se:.01442,fractal_dimension_se:.001684,radius_worst:14.69,texture_worst:35.63,perimeter_worst:97.11,area_worst:680.6,smoothness_worst:.1108,compactness_worst:.1457,concavity_worst:.07934,concave_points_worst:.05781,symmetry_worst:.2694,fractal_dimension_worst:.07061,"":""},{id:9013594,diagnosis:"B",radius_mean:13.66,texture_mean:15.15,perimeter_mean:88.27,area_mean:580.6,smoothness_mean:.08268,compactness_mean:.07548,concavity_mean:.04249,concave_points_mean:.02471,symmetry_mean:.1792,fractal_dimension_mean:.05897,radius_se:.1402,texture_se:.5417,perimeter_se:1.101,area_se:11.35,smoothness_se:.005212,compactness_se:.02984,concavity_se:.02443,concave_points_se:.008356,symmetry_se:.01818,fractal_dimension_se:.004868,radius_worst:14.54,texture_worst:19.64,perimeter_worst:97.96,area_worst:657,smoothness_worst:.1275,compactness_worst:.3104,concavity_worst:.2569,concave_points_worst:.1054,symmetry_worst:.3387,fractal_dimension_worst:.09638,"":""},{id:9013838,diagnosis:"M",radius_mean:11.08,texture_mean:18.83,perimeter_mean:73.3,area_mean:361.6,smoothness_mean:.1216,compactness_mean:.2154,concavity_mean:.1689,concave_points_mean:.06367,symmetry_mean:.2196,fractal_dimension_mean:.0795,radius_se:.2114,texture_se:1.027,perimeter_se:1.719,area_se:13.99,smoothness_se:.007405,compactness_se:.04549,concavity_se:.04588,concave_points_se:.01339,symmetry_se:.01738,fractal_dimension_se:.004435,radius_worst:13.24,texture_worst:32.82,perimeter_worst:91.76,area_worst:508.1,smoothness_worst:.2184,compactness_worst:.9379,concavity_worst:.8402,concave_points_worst:.2524,symmetry_worst:.4154,fractal_dimension_worst:.1403,"":""},{id:901549,diagnosis:"B",radius_mean:11.27,texture_mean:12.96,perimeter_mean:73.16,area_mean:386.3,smoothness_mean:.1237,compactness_mean:.1111,concavity_mean:.079,concave_points_mean:.0555,symmetry_mean:.2018,fractal_dimension_mean:.06914,radius_se:.2562,texture_se:.9858,perimeter_se:1.809,area_se:16.04,smoothness_se:.006635,compactness_se:.01777,concavity_se:.02101,concave_points_se:.01164,symmetry_se:.02108,fractal_dimension_se:.003721,radius_worst:12.84,texture_worst:20.53,perimeter_worst:84.93,area_worst:476.1,smoothness_worst:.161,compactness_worst:.2429,concavity_worst:.2247,concave_points_worst:.1318,symmetry_worst:.3343,fractal_dimension_worst:.09215,"":""},{id:901836,diagnosis:"B",radius_mean:11.04,texture_mean:14.93,perimeter_mean:70.67,area_mean:372.7,smoothness_mean:.07987,compactness_mean:.07079,concavity_mean:.03546,concave_points_mean:.02074,symmetry_mean:.2003,fractal_dimension_mean:.06246,radius_se:.1642,texture_se:1.031,perimeter_se:1.281,area_se:11.68,smoothness_se:.005296,compactness_se:.01903,concavity_se:.01723,concave_points_se:.00696,symmetry_se:.0188,fractal_dimension_se:.001941,radius_worst:12.09,texture_worst:20.83,perimeter_worst:79.73,area_worst:447.1,smoothness_worst:.1095,compactness_worst:.1982,concavity_worst:.1553,concave_points_worst:.06754,symmetry_worst:.3202,fractal_dimension_worst:.07287,"":""},{id:90250,diagnosis:"B",radius_mean:12.05,texture_mean:22.72,perimeter_mean:78.75,area_mean:447.8,smoothness_mean:.06935,compactness_mean:.1073,concavity_mean:.07943,concave_points_mean:.02978,symmetry_mean:.1203,fractal_dimension_mean:.06659,radius_se:.1194,texture_se:1.434,perimeter_se:1.778,area_se:9.549,smoothness_se:.005042,compactness_se:.0456,concavity_se:.04305,concave_points_se:.01667,symmetry_se:.0247,fractal_dimension_se:.007358,radius_worst:12.57,texture_worst:28.71,perimeter_worst:87.36,area_worst:488.4,smoothness_worst:.08799,compactness_worst:.3214,concavity_worst:.2912,concave_points_worst:.1092,symmetry_worst:.2191,fractal_dimension_worst:.09349,"":""},{id:90251,diagnosis:"B",radius_mean:12.39,texture_mean:17.48,perimeter_mean:80.64,area_mean:462.9,smoothness_mean:.1042,compactness_mean:.1297,concavity_mean:.05892,concave_points_mean:.0288,symmetry_mean:.1779,fractal_dimension_mean:.06588,radius_se:.2608,texture_se:.873,perimeter_se:2.117,area_se:19.2,smoothness_se:.006715,compactness_se:.03705,concavity_se:.04757,concave_points_se:.01051,symmetry_se:.01838,fractal_dimension_se:.006884,radius_worst:14.18,texture_worst:23.13,perimeter_worst:95.23,area_worst:600.5,smoothness_worst:.1427,compactness_worst:.3593,concavity_worst:.3206,concave_points_worst:.09804,symmetry_worst:.2819,fractal_dimension_worst:.1118,"":""},{id:902727,diagnosis:"B",radius_mean:13.28,texture_mean:13.72,perimeter_mean:85.79,area_mean:541.8,smoothness_mean:.08363,compactness_mean:.08575,concavity_mean:.05077,concave_points_mean:.02864,symmetry_mean:.1617,fractal_dimension_mean:.05594,radius_se:.1833,texture_se:.5308,perimeter_se:1.592,area_se:15.26,smoothness_se:.004271,compactness_se:.02073,concavity_se:.02828,concave_points_se:.008468,symmetry_se:.01461,fractal_dimension_se:.002613,radius_worst:14.24,texture_worst:17.37,perimeter_worst:96.59,area_worst:623.7,smoothness_worst:.1166,compactness_worst:.2685,concavity_worst:.2866,concave_points_worst:.09173,symmetry_worst:.2736,fractal_dimension_worst:.0732,"":""},{id:90291,diagnosis:"M",radius_mean:14.6,texture_mean:23.29,perimeter_mean:93.97,area_mean:664.7,smoothness_mean:.08682,compactness_mean:.06636,concavity_mean:.0839,concave_points_mean:.05271,symmetry_mean:.1627,fractal_dimension_mean:.05416,radius_se:.4157,texture_se:1.627,perimeter_se:2.914,area_se:33.01,smoothness_se:.008312,compactness_se:.01742,concavity_se:.03389,concave_points_se:.01576,symmetry_se:.0174,fractal_dimension_se:.002871,radius_worst:15.79,texture_worst:31.71,perimeter_worst:102.2,area_worst:758.2,smoothness_worst:.1312,compactness_worst:.1581,concavity_worst:.2675,concave_points_worst:.1359,symmetry_worst:.2477,fractal_dimension_worst:.06836,"":""},{id:902975,diagnosis:"B",radius_mean:12.21,texture_mean:14.09,perimeter_mean:78.78,area_mean:462,smoothness_mean:.08108,compactness_mean:.07823,concavity_mean:.06839,concave_points_mean:.02534,symmetry_mean:.1646,fractal_dimension_mean:.06154,radius_se:.2666,texture_se:.8309,perimeter_se:2.097,area_se:19.96,smoothness_se:.004405,compactness_se:.03026,concavity_se:.04344,concave_points_se:.01087,symmetry_se:.01921,fractal_dimension_se:.004622,radius_worst:13.13,texture_worst:19.29,perimeter_worst:87.65,area_worst:529.9,smoothness_worst:.1026,compactness_worst:.2431,concavity_worst:.3076,concave_points_worst:.0914,symmetry_worst:.2677,fractal_dimension_worst:.08824,"":""},{id:902976,diagnosis:"B",radius_mean:13.88,texture_mean:16.16,perimeter_mean:88.37,area_mean:596.6,smoothness_mean:.07026,compactness_mean:.04831,concavity_mean:.02045,concave_points_mean:.008507,symmetry_mean:.1607,fractal_dimension_mean:.05474,radius_se:.2541,texture_se:.6218,perimeter_se:1.709,area_se:23.12,smoothness_se:.003728,compactness_se:.01415,concavity_se:.01988,concave_points_se:.007016,symmetry_se:.01647,fractal_dimension_se:.00197,radius_worst:15.51,texture_worst:19.97,perimeter_worst:99.66,area_worst:745.3,smoothness_worst:.08484,compactness_worst:.1233,concavity_worst:.1091,concave_points_worst:.04537,symmetry_worst:.2542,fractal_dimension_worst:.06623,"":""},{id:903011,diagnosis:"B",radius_mean:11.27,texture_mean:15.5,perimeter_mean:73.38,area_mean:392,smoothness_mean:.08365,compactness_mean:.1114,concavity_mean:.1007,concave_points_mean:.02757,symmetry_mean:.181,fractal_dimension_mean:.07252,radius_se:.3305,texture_se:1.067,perimeter_se:2.569,area_se:22.97,smoothness_se:.01038,compactness_se:.06669,concavity_se:.09472,concave_points_se:.02047,symmetry_se:.01219,fractal_dimension_se:.01233,radius_worst:12.04,texture_worst:18.93,perimeter_worst:79.73,area_worst:450,smoothness_worst:.1102,compactness_worst:.2809,concavity_worst:.3021,concave_points_worst:.08272,symmetry_worst:.2157,fractal_dimension_worst:.1043,"":""},{id:90312,diagnosis:"M",radius_mean:19.55,texture_mean:23.21,perimeter_mean:128.9,area_mean:1174,smoothness_mean:.101,compactness_mean:.1318,concavity_mean:.1856,concave_points_mean:.1021,symmetry_mean:.1989,fractal_dimension_mean:.05884,radius_se:.6107,texture_se:2.836,perimeter_se:5.383,area_se:70.1,smoothness_se:.01124,compactness_se:.04097,concavity_se:.07469,concave_points_se:.03441,symmetry_se:.02768,fractal_dimension_se:.00624,radius_worst:20.82,texture_worst:30.44,perimeter_worst:142,area_worst:1313,smoothness_worst:.1251,compactness_worst:.2414,concavity_worst:.3829,concave_points_worst:.1825,symmetry_worst:.2576,fractal_dimension_worst:.07602,"":""},{id:90317302,diagnosis:"B",radius_mean:10.26,texture_mean:12.22,perimeter_mean:65.75,area_mean:321.6,smoothness_mean:.09996,compactness_mean:.07542,concavity_mean:.01923,concave_points_mean:.01968,symmetry_mean:.18,fractal_dimension_mean:.06569,radius_se:.1911,texture_se:.5477,perimeter_se:1.348,area_se:11.88,smoothness_se:.005682,compactness_se:.01365,concavity_se:.008496,concave_points_se:.006929,symmetry_se:.01938,fractal_dimension_se:.002371,radius_worst:11.38,texture_worst:15.65,perimeter_worst:73.23,area_worst:394.5,smoothness_worst:.1343,compactness_worst:.165,concavity_worst:.08615,concave_points_worst:.06696,symmetry_worst:.2937,fractal_dimension_worst:.07722,"":""},{id:903483,diagnosis:"B",radius_mean:8.734,texture_mean:16.84,perimeter_mean:55.27,area_mean:234.3,smoothness_mean:.1039,compactness_mean:.07428,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1985,fractal_dimension_mean:.07098,radius_se:.5169,texture_se:2.079,perimeter_se:3.167,area_se:28.85,smoothness_se:.01582,compactness_se:.01966,concavity_se:0,concave_points_se:0,symmetry_se:.01865,fractal_dimension_se:.006736,radius_worst:10.17,texture_worst:22.8,perimeter_worst:64.01,area_worst:317,smoothness_worst:.146,compactness_worst:.131,concavity_worst:0,concave_points_worst:0,symmetry_worst:.2445,fractal_dimension_worst:.08865,"":""},{id:903507,diagnosis:"M",radius_mean:15.49,texture_mean:19.97,perimeter_mean:102.4,area_mean:744.7,smoothness_mean:.116,compactness_mean:.1562,concavity_mean:.1891,concave_points_mean:.09113,symmetry_mean:.1929,fractal_dimension_mean:.06744,radius_se:.647,texture_se:1.331,perimeter_se:4.675,area_se:66.91,smoothness_se:.007269,compactness_se:.02928,concavity_se:.04972,concave_points_se:.01639,symmetry_se:.01852,fractal_dimension_se:.004232,radius_worst:21.2,texture_worst:29.41,perimeter_worst:142.1,area_worst:1359,smoothness_worst:.1681,compactness_worst:.3913,concavity_worst:.5553,concave_points_worst:.2121,symmetry_worst:.3187,fractal_dimension_worst:.1019,"":""},{id:903516,diagnosis:"M",radius_mean:21.61,texture_mean:22.28,perimeter_mean:144.4,area_mean:1407,smoothness_mean:.1167,compactness_mean:.2087,concavity_mean:.281,concave_points_mean:.1562,symmetry_mean:.2162,fractal_dimension_mean:.06606,radius_se:.6242,texture_se:.9209,perimeter_se:4.158,area_se:80.99,smoothness_se:.005215,compactness_se:.03726,concavity_se:.04718,concave_points_se:.01288,symmetry_se:.02045,fractal_dimension_se:.004028,radius_worst:26.23,texture_worst:28.74,perimeter_worst:172,area_worst:2081,smoothness_worst:.1502,compactness_worst:.5717,concavity_worst:.7053,concave_points_worst:.2422,symmetry_worst:.3828,fractal_dimension_worst:.1007,"":""},{id:903554,diagnosis:"B",radius_mean:12.1,texture_mean:17.72,perimeter_mean:78.07,area_mean:446.2,smoothness_mean:.1029,compactness_mean:.09758,concavity_mean:.04783,concave_points_mean:.03326,symmetry_mean:.1937,fractal_dimension_mean:.06161,radius_se:.2841,texture_se:1.652,perimeter_se:1.869,area_se:22.22,smoothness_se:.008146,compactness_se:.01631,concavity_se:.01843,concave_points_se:.007513,symmetry_se:.02015,fractal_dimension_se:.001798,radius_worst:13.56,texture_worst:25.8,perimeter_worst:88.33,area_worst:559.5,smoothness_worst:.1432,compactness_worst:.1773,concavity_worst:.1603,concave_points_worst:.06266,symmetry_worst:.3049,fractal_dimension_worst:.07081,"":""},{id:903811,diagnosis:"B",radius_mean:14.06,texture_mean:17.18,perimeter_mean:89.75,area_mean:609.1,smoothness_mean:.08045,compactness_mean:.05361,concavity_mean:.02681,concave_points_mean:.03251,symmetry_mean:.1641,fractal_dimension_mean:.05764,radius_se:.1504,texture_se:1.685,perimeter_se:1.237,area_se:12.67,smoothness_se:.005371,compactness_se:.01273,concavity_se:.01132,concave_points_se:.009155,symmetry_se:.01719,fractal_dimension_se:.001444,radius_worst:14.92,texture_worst:25.34,perimeter_worst:96.42,area_worst:684.5,smoothness_worst:.1066,compactness_worst:.1231,concavity_worst:.0846,concave_points_worst:.07911,symmetry_worst:.2523,fractal_dimension_worst:.06609,"":""},{id:90401601,diagnosis:"B",radius_mean:13.51,texture_mean:18.89,perimeter_mean:88.1,area_mean:558.1,smoothness_mean:.1059,compactness_mean:.1147,concavity_mean:.0858,concave_points_mean:.05381,symmetry_mean:.1806,fractal_dimension_mean:.06079,radius_se:.2136,texture_se:1.332,perimeter_se:1.513,area_se:19.29,smoothness_se:.005442,compactness_se:.01957,concavity_se:.03304,concave_points_se:.01367,symmetry_se:.01315,fractal_dimension_se:.002464,radius_worst:14.8,texture_worst:27.2,perimeter_worst:97.33,area_worst:675.2,smoothness_worst:.1428,compactness_worst:.257,concavity_worst:.3438,concave_points_worst:.1453,symmetry_worst:.2666,fractal_dimension_worst:.07686,"":""},{id:90401602,diagnosis:"B",radius_mean:12.8,texture_mean:17.46,perimeter_mean:83.05,area_mean:508.3,smoothness_mean:.08044,compactness_mean:.08895,concavity_mean:.0739,concave_points_mean:.04083,symmetry_mean:.1574,fractal_dimension_mean:.0575,radius_se:.3639,texture_se:1.265,perimeter_se:2.668,area_se:30.57,smoothness_se:.005421,compactness_se:.03477,concavity_se:.04545,concave_points_se:.01384,symmetry_se:.01869,fractal_dimension_se:.004067,radius_worst:13.74,texture_worst:21.06,perimeter_worst:90.72,area_worst:591,smoothness_worst:.09534,compactness_worst:.1812,concavity_worst:.1901,concave_points_worst:.08296,symmetry_worst:.1988,fractal_dimension_worst:.07053,"":""},{id:904302,diagnosis:"B",radius_mean:11.06,texture_mean:14.83,perimeter_mean:70.31,area_mean:378.2,smoothness_mean:.07741,compactness_mean:.04768,concavity_mean:.02712,concave_points_mean:.007246,symmetry_mean:.1535,fractal_dimension_mean:.06214,radius_se:.1855,texture_se:.6881,perimeter_se:1.263,area_se:12.98,smoothness_se:.004259,compactness_se:.01469,concavity_se:.0194,concave_points_se:.004168,symmetry_se:.01191,fractal_dimension_se:.003537,radius_worst:12.68,texture_worst:20.35,perimeter_worst:80.79,area_worst:496.7,smoothness_worst:.112,compactness_worst:.1879,concavity_worst:.2079,concave_points_worst:.05556,symmetry_worst:.259,fractal_dimension_worst:.09158,"":""},{id:904357,diagnosis:"B",radius_mean:11.8,texture_mean:17.26,perimeter_mean:75.26,area_mean:431.9,smoothness_mean:.09087,compactness_mean:.06232,concavity_mean:.02853,concave_points_mean:.01638,symmetry_mean:.1847,fractal_dimension_mean:.06019,radius_se:.3438,texture_se:1.14,perimeter_se:2.225,area_se:25.06,smoothness_se:.005463,compactness_se:.01964,concavity_se:.02079,concave_points_se:.005398,symmetry_se:.01477,fractal_dimension_se:.003071,radius_worst:13.45,texture_worst:24.49,perimeter_worst:86,area_worst:562,smoothness_worst:.1244,compactness_worst:.1726,concavity_worst:.1449,concave_points_worst:.05356,symmetry_worst:.2779,fractal_dimension_worst:.08121,"":""},{id:90439701,diagnosis:"M",radius_mean:17.91,texture_mean:21.02,perimeter_mean:124.4,area_mean:994,smoothness_mean:.123,compactness_mean:.2576,concavity_mean:.3189,concave_points_mean:.1198,symmetry_mean:.2113,fractal_dimension_mean:.07115,radius_se:.403,texture_se:.7747,perimeter_se:3.123,area_se:41.51,smoothness_se:.007159,compactness_se:.03718,concavity_se:.06165,concave_points_se:.01051,symmetry_se:.01591,fractal_dimension_se:.005099,radius_worst:20.8,texture_worst:27.78,perimeter_worst:149.6,area_worst:1304,smoothness_worst:.1873,compactness_worst:.5917,concavity_worst:.9034,concave_points_worst:.1964,symmetry_worst:.3245,fractal_dimension_worst:.1198,"":""},{id:904647,diagnosis:"B",radius_mean:11.93,texture_mean:10.91,perimeter_mean:76.14,area_mean:442.7,smoothness_mean:.08872,compactness_mean:.05242,concavity_mean:.02606,concave_points_mean:.01796,symmetry_mean:.1601,fractal_dimension_mean:.05541,radius_se:.2522,texture_se:1.045,perimeter_se:1.649,area_se:18.95,smoothness_se:.006175,compactness_se:.01204,concavity_se:.01376,concave_points_se:.005832,symmetry_se:.01096,fractal_dimension_se:.001857,radius_worst:13.8,texture_worst:20.14,perimeter_worst:87.64,area_worst:589.5,smoothness_worst:.1374,compactness_worst:.1575,concavity_worst:.1514,concave_points_worst:.06876,symmetry_worst:.246,fractal_dimension_worst:.07262,"":""},{id:904689,diagnosis:"B",radius_mean:12.96,texture_mean:18.29,perimeter_mean:84.18,area_mean:525.2,smoothness_mean:.07351,compactness_mean:.07899,concavity_mean:.04057,concave_points_mean:.01883,symmetry_mean:.1874,fractal_dimension_mean:.05899,radius_se:.2357,texture_se:1.299,perimeter_se:2.397,area_se:20.21,smoothness_se:.003629,compactness_se:.03713,concavity_se:.03452,concave_points_se:.01065,symmetry_se:.02632,fractal_dimension_se:.003705,radius_worst:14.13,texture_worst:24.61,perimeter_worst:96.31,area_worst:621.9,smoothness_worst:.09329,compactness_worst:.2318,concavity_worst:.1604,concave_points_worst:.06608,symmetry_worst:.3207,fractal_dimension_worst:.07247,"":""},{id:9047,diagnosis:"B",radius_mean:12.94,texture_mean:16.17,perimeter_mean:83.18,area_mean:507.6,smoothness_mean:.09879,compactness_mean:.08836,concavity_mean:.03296,concave_points_mean:.0239,symmetry_mean:.1735,fractal_dimension_mean:.062,radius_se:.1458,texture_se:.905,perimeter_se:.9975,area_se:11.36,smoothness_se:.002887,compactness_se:.01285,concavity_se:.01613,concave_points_se:.007308,symmetry_se:.0187,fractal_dimension_se:.001972,radius_worst:13.86,texture_worst:23.02,perimeter_worst:89.69,area_worst:580.9,smoothness_worst:.1172,compactness_worst:.1958,concavity_worst:.181,concave_points_worst:.08388,symmetry_worst:.3297,fractal_dimension_worst:.07834,"":""},{id:904969,diagnosis:"B",radius_mean:12.34,texture_mean:14.95,perimeter_mean:78.29,area_mean:469.1,smoothness_mean:.08682,compactness_mean:.04571,concavity_mean:.02109,concave_points_mean:.02054,symmetry_mean:.1571,fractal_dimension_mean:.05708,radius_se:.3833,texture_se:.9078,perimeter_se:2.602,area_se:30.15,smoothness_se:.007702,compactness_se:.008491,concavity_se:.01307,concave_points_se:.0103,symmetry_se:.0297,fractal_dimension_se:.001432,radius_worst:13.18,texture_worst:16.85,perimeter_worst:84.11,area_worst:533.1,smoothness_worst:.1048,compactness_worst:.06744,concavity_worst:.04921,concave_points_worst:.04793,symmetry_worst:.2298,fractal_dimension_worst:.05974,"":""},{id:904971,diagnosis:"B",radius_mean:10.94,texture_mean:18.59,perimeter_mean:70.39,area_mean:370,smoothness_mean:.1004,compactness_mean:.0746,concavity_mean:.04944,concave_points_mean:.02932,symmetry_mean:.1486,fractal_dimension_mean:.06615,radius_se:.3796,texture_se:1.743,perimeter_se:3.018,area_se:25.78,smoothness_se:.009519,compactness_se:.02134,concavity_se:.0199,concave_points_se:.01155,symmetry_se:.02079,fractal_dimension_se:.002701,radius_worst:12.4,texture_worst:25.58,perimeter_worst:82.76,area_worst:472.4,smoothness_worst:.1363,compactness_worst:.1644,concavity_worst:.1412,concave_points_worst:.07887,symmetry_worst:.2251,fractal_dimension_worst:.07732,"":""},{id:905189,diagnosis:"B",radius_mean:16.14,texture_mean:14.86,perimeter_mean:104.3,area_mean:800,smoothness_mean:.09495,compactness_mean:.08501,concavity_mean:.055,concave_points_mean:.04528,symmetry_mean:.1735,fractal_dimension_mean:.05875,radius_se:.2387,texture_se:.6372,perimeter_se:1.729,area_se:21.83,smoothness_se:.003958,compactness_se:.01246,concavity_se:.01831,concave_points_se:.008747,symmetry_se:.015,fractal_dimension_se:.001621,radius_worst:17.71,texture_worst:19.58,perimeter_worst:115.9,area_worst:947.9,smoothness_worst:.1206,compactness_worst:.1722,concavity_worst:.231,concave_points_worst:.1129,symmetry_worst:.2778,fractal_dimension_worst:.07012,"":""},{id:905190,diagnosis:"B",radius_mean:12.85,texture_mean:21.37,perimeter_mean:82.63,area_mean:514.5,smoothness_mean:.07551,compactness_mean:.08316,concavity_mean:.06126,concave_points_mean:.01867,symmetry_mean:.158,fractal_dimension_mean:.06114,radius_se:.4993,texture_se:1.798,perimeter_se:2.552,area_se:41.24,smoothness_se:.006011,compactness_se:.0448,concavity_se:.05175,concave_points_se:.01341,symmetry_se:.02669,fractal_dimension_se:.007731,radius_worst:14.4,texture_worst:27.01,perimeter_worst:91.63,area_worst:645.8,smoothness_worst:.09402,compactness_worst:.1936,concavity_worst:.1838,concave_points_worst:.05601,symmetry_worst:.2488,fractal_dimension_worst:.08151,"":""},{id:90524101,diagnosis:"M",radius_mean:17.99,texture_mean:20.66,perimeter_mean:117.8,area_mean:991.7,smoothness_mean:.1036,compactness_mean:.1304,concavity_mean:.1201,concave_points_mean:.08824,symmetry_mean:.1992,fractal_dimension_mean:.06069,radius_se:.4537,texture_se:.8733,perimeter_se:3.061,area_se:49.81,smoothness_se:.007231,compactness_se:.02772,concavity_se:.02509,concave_points_se:.0148,symmetry_se:.01414,fractal_dimension_se:.003336,radius_worst:21.08,texture_worst:25.41,perimeter_worst:138.1,area_worst:1349,smoothness_worst:.1482,compactness_worst:.3735,concavity_worst:.3301,concave_points_worst:.1974,symmetry_worst:.306,fractal_dimension_worst:.08503,"":""},{id:905501,diagnosis:"B",radius_mean:12.27,texture_mean:17.92,perimeter_mean:78.41,area_mean:466.1,smoothness_mean:.08685,compactness_mean:.06526,concavity_mean:.03211,concave_points_mean:.02653,symmetry_mean:.1966,fractal_dimension_mean:.05597,radius_se:.3342,texture_se:1.781,perimeter_se:2.079,area_se:25.79,smoothness_se:.005888,compactness_se:.0231,concavity_se:.02059,concave_points_se:.01075,symmetry_se:.02578,fractal_dimension_se:.002267,radius_worst:14.1,texture_worst:28.88,perimeter_worst:89,area_worst:610.2,smoothness_worst:.124,compactness_worst:.1795,concavity_worst:.1377,concave_points_worst:.09532,symmetry_worst:.3455,fractal_dimension_worst:.06896,"":""},{id:905502,diagnosis:"B",radius_mean:11.36,texture_mean:17.57,perimeter_mean:72.49,area_mean:399.8,smoothness_mean:.08858,compactness_mean:.05313,concavity_mean:.02783,concave_points_mean:.021,symmetry_mean:.1601,fractal_dimension_mean:.05913,radius_se:.1916,texture_se:1.555,perimeter_se:1.359,area_se:13.66,smoothness_se:.005391,compactness_se:.009947,concavity_se:.01163,concave_points_se:.005872,symmetry_se:.01341,fractal_dimension_se:.001659,radius_worst:13.05,texture_worst:36.32,perimeter_worst:85.07,area_worst:521.3,smoothness_worst:.1453,compactness_worst:.1622,concavity_worst:.1811,concave_points_worst:.08698,symmetry_worst:.2973,fractal_dimension_worst:.07745,"":""},{id:905520,diagnosis:"B",radius_mean:11.04,texture_mean:16.83,perimeter_mean:70.92,area_mean:373.2,smoothness_mean:.1077,compactness_mean:.07804,concavity_mean:.03046,concave_points_mean:.0248,symmetry_mean:.1714,fractal_dimension_mean:.0634,radius_se:.1967,texture_se:1.387,perimeter_se:1.342,area_se:13.54,smoothness_se:.005158,compactness_se:.009355,concavity_se:.01056,concave_points_se:.007483,symmetry_se:.01718,fractal_dimension_se:.002198,radius_worst:12.41,texture_worst:26.44,perimeter_worst:79.93,area_worst:471.4,smoothness_worst:.1369,compactness_worst:.1482,concavity_worst:.1067,concave_points_worst:.07431,symmetry_worst:.2998,fractal_dimension_worst:.07881,"":""},{id:905539,diagnosis:"B",radius_mean:9.397,texture_mean:21.68,perimeter_mean:59.75,area_mean:268.8,smoothness_mean:.07969,compactness_mean:.06053,concavity_mean:.03735,concave_points_mean:.005128,symmetry_mean:.1274,fractal_dimension_mean:.06724,radius_se:.1186,texture_se:1.182,perimeter_se:1.174,area_se:6.802,smoothness_se:.005515,compactness_se:.02674,concavity_se:.03735,concave_points_se:.005128,symmetry_se:.01951,fractal_dimension_se:.004583,radius_worst:9.965,texture_worst:27.99,perimeter_worst:66.61,area_worst:301,smoothness_worst:.1086,compactness_worst:.1887,concavity_worst:.1868,concave_points_worst:.02564,symmetry_worst:.2376,fractal_dimension_worst:.09206,"":""},{id:905557,diagnosis:"B",radius_mean:14.99,texture_mean:22.11,perimeter_mean:97.53,area_mean:693.7,smoothness_mean:.08515,compactness_mean:.1025,concavity_mean:.06859,concave_points_mean:.03876,symmetry_mean:.1944,fractal_dimension_mean:.05913,radius_se:.3186,texture_se:1.336,perimeter_se:2.31,area_se:28.51,smoothness_se:.004449,compactness_se:.02808,concavity_se:.03312,concave_points_se:.01196,symmetry_se:.01906,fractal_dimension_se:.004015,radius_worst:16.76,texture_worst:31.55,perimeter_worst:110.2,area_worst:867.1,smoothness_worst:.1077,compactness_worst:.3345,concavity_worst:.3114,concave_points_worst:.1308,symmetry_worst:.3163,fractal_dimension_worst:.09251,"":""},{id:905680,diagnosis:"M",radius_mean:15.13,texture_mean:29.81,perimeter_mean:96.71,area_mean:719.5,smoothness_mean:.0832,compactness_mean:.04605,concavity_mean:.04686,concave_points_mean:.02739,symmetry_mean:.1852,fractal_dimension_mean:.05294,radius_se:.4681,texture_se:1.627,perimeter_se:3.043,area_se:45.38,smoothness_se:.006831,compactness_se:.01427,concavity_se:.02489,concave_points_se:.009087,symmetry_se:.03151,fractal_dimension_se:.00175,radius_worst:17.26,texture_worst:36.91,perimeter_worst:110.1,area_worst:931.4,smoothness_worst:.1148,compactness_worst:.09866,concavity_worst:.1547,concave_points_worst:.06575,symmetry_worst:.3233,fractal_dimension_worst:.06165,"":""},{id:905686,diagnosis:"B",radius_mean:11.89,texture_mean:21.17,perimeter_mean:76.39,area_mean:433.8,smoothness_mean:.09773,compactness_mean:.0812,concavity_mean:.02555,concave_points_mean:.02179,symmetry_mean:.2019,fractal_dimension_mean:.0629,radius_se:.2747,texture_se:1.203,perimeter_se:1.93,area_se:19.53,smoothness_se:.009895,compactness_se:.03053,concavity_se:.0163,concave_points_se:.009276,symmetry_se:.02258,fractal_dimension_se:.002272,radius_worst:13.05,texture_worst:27.21,perimeter_worst:85.09,area_worst:522.9,smoothness_worst:.1426,compactness_worst:.2187,concavity_worst:.1164,concave_points_worst:.08263,symmetry_worst:.3075,fractal_dimension_worst:.07351,"":""},{id:905978,diagnosis:"B",radius_mean:9.405,texture_mean:21.7,perimeter_mean:59.6,area_mean:271.2,smoothness_mean:.1044,compactness_mean:.06159,concavity_mean:.02047,concave_points_mean:.01257,symmetry_mean:.2025,fractal_dimension_mean:.06601,radius_se:.4302,texture_se:2.878,perimeter_se:2.759,area_se:25.17,smoothness_se:.01474,compactness_se:.01674,concavity_se:.01367,concave_points_se:.008674,symmetry_se:.03044,fractal_dimension_se:.00459,radius_worst:10.85,texture_worst:31.24,perimeter_worst:68.73,area_worst:359.4,smoothness_worst:.1526,compactness_worst:.1193,concavity_worst:.06141,concave_points_worst:.0377,symmetry_worst:.2872,fractal_dimension_worst:.08304,"":""},{id:90602302,diagnosis:"M",radius_mean:15.5,texture_mean:21.08,perimeter_mean:102.9,area_mean:803.1,smoothness_mean:.112,compactness_mean:.1571,concavity_mean:.1522,concave_points_mean:.08481,symmetry_mean:.2085,fractal_dimension_mean:.06864,radius_se:1.37,texture_se:1.213,perimeter_se:9.424,area_se:176.5,smoothness_se:.008198,compactness_se:.03889,concavity_se:.04493,concave_points_se:.02139,symmetry_se:.02018,fractal_dimension_se:.005815,radius_worst:23.17,texture_worst:27.65,perimeter_worst:157.1,area_worst:1748,smoothness_worst:.1517,compactness_worst:.4002,concavity_worst:.4211,concave_points_worst:.2134,symmetry_worst:.3003,fractal_dimension_worst:.1048,"":""},{id:906024,diagnosis:"B",radius_mean:12.7,texture_mean:12.17,perimeter_mean:80.88,area_mean:495,smoothness_mean:.08785,compactness_mean:.05794,concavity_mean:.0236,concave_points_mean:.02402,symmetry_mean:.1583,fractal_dimension_mean:.06275,radius_se:.2253,texture_se:.6457,perimeter_se:1.527,area_se:17.37,smoothness_se:.006131,compactness_se:.01263,concavity_se:.009075,concave_points_se:.008231,symmetry_se:.01713,fractal_dimension_se:.004414,radius_worst:13.65,texture_worst:16.92,perimeter_worst:88.12,area_worst:566.9,smoothness_worst:.1314,compactness_worst:.1607,concavity_worst:.09385,concave_points_worst:.08224,symmetry_worst:.2775,fractal_dimension_worst:.09464,"":""},{id:906290,diagnosis:"B",radius_mean:11.16,texture_mean:21.41,perimeter_mean:70.95,area_mean:380.3,smoothness_mean:.1018,compactness_mean:.05978,concavity_mean:.008955,concave_points_mean:.01076,symmetry_mean:.1615,fractal_dimension_mean:.06144,radius_se:.2865,texture_se:1.678,perimeter_se:1.968,area_se:18.99,smoothness_se:.006908,compactness_se:.009442,concavity_se:.006972,concave_points_se:.006159,symmetry_se:.02694,fractal_dimension_se:.00206,radius_worst:12.36,texture_worst:28.92,perimeter_worst:79.26,area_worst:458,smoothness_worst:.1282,compactness_worst:.1108,concavity_worst:.03582,concave_points_worst:.04306,symmetry_worst:.2976,fractal_dimension_worst:.07123,"":""},{id:906539,diagnosis:"B",radius_mean:11.57,texture_mean:19.04,perimeter_mean:74.2,area_mean:409.7,smoothness_mean:.08546,compactness_mean:.07722,concavity_mean:.05485,concave_points_mean:.01428,symmetry_mean:.2031,fractal_dimension_mean:.06267,radius_se:.2864,texture_se:1.44,perimeter_se:2.206,area_se:20.3,smoothness_se:.007278,compactness_se:.02047,concavity_se:.04447,concave_points_se:.008799,symmetry_se:.01868,fractal_dimension_se:.003339,radius_worst:13.07,texture_worst:26.98,perimeter_worst:86.43,area_worst:520.5,smoothness_worst:.1249,compactness_worst:.1937,concavity_worst:.256,concave_points_worst:.06664,symmetry_worst:.3035,fractal_dimension_worst:.08284,"":""},{id:906564,diagnosis:"B",radius_mean:14.69,texture_mean:13.98,perimeter_mean:98.22,area_mean:656.1,smoothness_mean:.1031,compactness_mean:.1836,concavity_mean:.145,concave_points_mean:.063,symmetry_mean:.2086,fractal_dimension_mean:.07406,radius_se:.5462,texture_se:1.511,perimeter_se:4.795,area_se:49.45,smoothness_se:.009976,compactness_se:.05244,concavity_se:.05278,concave_points_se:.0158,symmetry_se:.02653,fractal_dimension_se:.005444,radius_worst:16.46,texture_worst:18.34,perimeter_worst:114.1,area_worst:809.2,smoothness_worst:.1312,compactness_worst:.3635,concavity_worst:.3219,concave_points_worst:.1108,symmetry_worst:.2827,fractal_dimension_worst:.09208,"":""},{id:906616,diagnosis:"B",radius_mean:11.61,texture_mean:16.02,perimeter_mean:75.46,area_mean:408.2,smoothness_mean:.1088,compactness_mean:.1168,concavity_mean:.07097,concave_points_mean:.04497,symmetry_mean:.1886,fractal_dimension_mean:.0632,radius_se:.2456,texture_se:.7339,perimeter_se:1.667,area_se:15.89,smoothness_se:.005884,compactness_se:.02005,concavity_se:.02631,concave_points_se:.01304,symmetry_se:.01848,fractal_dimension_se:.001982,radius_worst:12.64,texture_worst:19.67,perimeter_worst:81.93,area_worst:475.7,smoothness_worst:.1415,compactness_worst:.217,concavity_worst:.2302,concave_points_worst:.1105,symmetry_worst:.2787,fractal_dimension_worst:.07427,"":""},{id:906878,diagnosis:"B",radius_mean:13.66,texture_mean:19.13,perimeter_mean:89.46,area_mean:575.3,smoothness_mean:.09057,compactness_mean:.1147,concavity_mean:.09657,concave_points_mean:.04812,symmetry_mean:.1848,fractal_dimension_mean:.06181,radius_se:.2244,texture_se:.895,perimeter_se:1.804,area_se:19.36,smoothness_se:.00398,compactness_se:.02809,concavity_se:.03669,concave_points_se:.01274,symmetry_se:.01581,fractal_dimension_se:.003956,radius_worst:15.14,texture_worst:25.5,perimeter_worst:101.4,area_worst:708.8,smoothness_worst:.1147,compactness_worst:.3167,concavity_worst:.366,concave_points_worst:.1407,symmetry_worst:.2744,fractal_dimension_worst:.08839,"":""},{id:907145,diagnosis:"B",radius_mean:9.742,texture_mean:19.12,perimeter_mean:61.93,area_mean:289.7,smoothness_mean:.1075,compactness_mean:.08333,concavity_mean:.008934,concave_points_mean:.01967,symmetry_mean:.2538,fractal_dimension_mean:.07029,radius_se:.6965,texture_se:1.747,perimeter_se:4.607,area_se:43.52,smoothness_se:.01307,compactness_se:.01885,concavity_se:.006021,concave_points_se:.01052,symmetry_se:.031,fractal_dimension_se:.004225,radius_worst:11.21,texture_worst:23.17,perimeter_worst:71.79,area_worst:380.9,smoothness_worst:.1398,compactness_worst:.1352,concavity_worst:.02085,concave_points_worst:.04589,symmetry_worst:.3196,fractal_dimension_worst:.08009,"":""},{id:907367,diagnosis:"B",radius_mean:10.03,texture_mean:21.28,perimeter_mean:63.19,area_mean:307.3,smoothness_mean:.08117,compactness_mean:.03912,concavity_mean:.00247,concave_points_mean:.005159,symmetry_mean:.163,fractal_dimension_mean:.06439,radius_se:.1851,texture_se:1.341,perimeter_se:1.184,area_se:11.6,smoothness_se:.005724,compactness_se:.005697,concavity_se:.002074,concave_points_se:.003527,symmetry_se:.01445,fractal_dimension_se:.002411,radius_worst:11.11,texture_worst:28.94,perimeter_worst:69.92,area_worst:376.3,smoothness_worst:.1126,compactness_worst:.07094,concavity_worst:.01235,concave_points_worst:.02579,symmetry_worst:.2349,fractal_dimension_worst:.08061,"":""},{id:907409,diagnosis:"B",radius_mean:10.48,texture_mean:14.98,perimeter_mean:67.49,area_mean:333.6,smoothness_mean:.09816,compactness_mean:.1013,concavity_mean:.06335,concave_points_mean:.02218,symmetry_mean:.1925,fractal_dimension_mean:.06915,radius_se:.3276,texture_se:1.127,perimeter_se:2.564,area_se:20.77,smoothness_se:.007364,compactness_se:.03867,concavity_se:.05263,concave_points_se:.01264,symmetry_se:.02161,fractal_dimension_se:.00483,radius_worst:12.13,texture_worst:21.57,perimeter_worst:81.41,area_worst:440.4,smoothness_worst:.1327,compactness_worst:.2996,concavity_worst:.2939,concave_points_worst:.0931,symmetry_worst:.302,fractal_dimension_worst:.09646,"":""},{id:90745,diagnosis:"B",radius_mean:10.8,texture_mean:21.98,perimeter_mean:68.79,area_mean:359.9,smoothness_mean:.08801,compactness_mean:.05743,concavity_mean:.03614,concave_points_mean:.01404,symmetry_mean:.2016,fractal_dimension_mean:.05977,radius_se:.3077,texture_se:1.621,perimeter_se:2.24,area_se:20.2,smoothness_se:.006543,compactness_se:.02148,concavity_se:.02991,concave_points_se:.01045,symmetry_se:.01844,fractal_dimension_se:.00269,radius_worst:12.76,texture_worst:32.04,perimeter_worst:83.69,area_worst:489.5,smoothness_worst:.1303,compactness_worst:.1696,concavity_worst:.1927,concave_points_worst:.07485,symmetry_worst:.2965,fractal_dimension_worst:.07662,"":""},{id:90769601,diagnosis:"B",radius_mean:11.13,texture_mean:16.62,perimeter_mean:70.47,area_mean:381.1,smoothness_mean:.08151,compactness_mean:.03834,concavity_mean:.01369,concave_points_mean:.0137,symmetry_mean:.1511,fractal_dimension_mean:.06148,radius_se:.1415,texture_se:.9671,perimeter_se:.968,area_se:9.704,smoothness_se:.005883,compactness_se:.006263,concavity_se:.009398,concave_points_se:.006189,symmetry_se:.02009,fractal_dimension_se:.002377,radius_worst:11.68,texture_worst:20.29,perimeter_worst:74.35,area_worst:421.1,smoothness_worst:.103,compactness_worst:.06219,concavity_worst:.0458,concave_points_worst:.04044,symmetry_worst:.2383,fractal_dimension_worst:.07083,"":""},{id:90769602,diagnosis:"B",radius_mean:12.72,texture_mean:17.67,perimeter_mean:80.98,area_mean:501.3,smoothness_mean:.07896,compactness_mean:.04522,concavity_mean:.01402,concave_points_mean:.01835,symmetry_mean:.1459,fractal_dimension_mean:.05544,radius_se:.2954,texture_se:.8836,perimeter_se:2.109,area_se:23.24,smoothness_se:.007337,compactness_se:.01174,concavity_se:.005383,concave_points_se:.005623,symmetry_se:.0194,fractal_dimension_se:.00118,radius_worst:13.82,texture_worst:20.96,perimeter_worst:88.87,area_worst:586.8,smoothness_worst:.1068,compactness_worst:.09605,concavity_worst:.03469,concave_points_worst:.03612,symmetry_worst:.2165,fractal_dimension_worst:.06025,"":""},{id:907914,diagnosis:"M",radius_mean:14.9,texture_mean:22.53,perimeter_mean:102.1,area_mean:685,smoothness_mean:.09947,compactness_mean:.2225,concavity_mean:.2733,concave_points_mean:.09711,symmetry_mean:.2041,fractal_dimension_mean:.06898,radius_se:.253,texture_se:.8749,perimeter_se:3.466,area_se:24.19,smoothness_se:.006965,compactness_se:.06213,concavity_se:.07926,concave_points_se:.02234,symmetry_se:.01499,fractal_dimension_se:.005784,radius_worst:16.35,texture_worst:27.57,perimeter_worst:125.4,area_worst:832.7,smoothness_worst:.1419,compactness_worst:.709,concavity_worst:.9019,concave_points_worst:.2475,symmetry_worst:.2866,fractal_dimension_worst:.1155,"":""},{id:907915,diagnosis:"B",radius_mean:12.4,texture_mean:17.68,perimeter_mean:81.47,area_mean:467.8,smoothness_mean:.1054,compactness_mean:.1316,concavity_mean:.07741,concave_points_mean:.02799,symmetry_mean:.1811,fractal_dimension_mean:.07102,radius_se:.1767,texture_se:1.46,perimeter_se:2.204,area_se:15.43,smoothness_se:.01,compactness_se:.03295,concavity_se:.04861,concave_points_se:.01167,symmetry_se:.02187,fractal_dimension_se:.006005,radius_worst:12.88,texture_worst:22.91,perimeter_worst:89.61,area_worst:515.8,smoothness_worst:.145,compactness_worst:.2629,concavity_worst:.2403,concave_points_worst:.0737,symmetry_worst:.2556,fractal_dimension_worst:.09359,"":""},{id:908194,diagnosis:"M",radius_mean:20.18,texture_mean:19.54,perimeter_mean:133.8,area_mean:1250,smoothness_mean:.1133,compactness_mean:.1489,concavity_mean:.2133,concave_points_mean:.1259,symmetry_mean:.1724,fractal_dimension_mean:.06053,radius_se:.4331,texture_se:1.001,perimeter_se:3.008,area_se:52.49,smoothness_se:.009087,compactness_se:.02715,concavity_se:.05546,concave_points_se:.0191,symmetry_se:.02451,fractal_dimension_se:.004005,radius_worst:22.03,texture_worst:25.07,perimeter_worst:146,area_worst:1479,smoothness_worst:.1665,compactness_worst:.2942,concavity_worst:.5308,concave_points_worst:.2173,symmetry_worst:.3032,fractal_dimension_worst:.08075,"":""},{id:908445,diagnosis:"M",radius_mean:18.82,texture_mean:21.97,perimeter_mean:123.7,area_mean:1110,smoothness_mean:.1018,compactness_mean:.1389,concavity_mean:.1594,concave_points_mean:.08744,symmetry_mean:.1943,fractal_dimension_mean:.06132,radius_se:.8191,texture_se:1.931,perimeter_se:4.493,area_se:103.9,smoothness_se:.008074,compactness_se:.04088,concavity_se:.05321,concave_points_se:.01834,symmetry_se:.02383,fractal_dimension_se:.004515,radius_worst:22.66,texture_worst:30.93,perimeter_worst:145.3,area_worst:1603,smoothness_worst:.139,compactness_worst:.3463,concavity_worst:.3912,concave_points_worst:.1708,symmetry_worst:.3007,fractal_dimension_worst:.08314,"":""},{id:908469,diagnosis:"B",radius_mean:14.86,texture_mean:16.94,perimeter_mean:94.89,area_mean:673.7,smoothness_mean:.08924,compactness_mean:.07074,concavity_mean:.03346,concave_points_mean:.02877,symmetry_mean:.1573,fractal_dimension_mean:.05703,radius_se:.3028,texture_se:.6683,perimeter_se:1.612,area_se:23.92,smoothness_se:.005756,compactness_se:.01665,concavity_se:.01461,concave_points_se:.008281,symmetry_se:.01551,fractal_dimension_se:.002168,radius_worst:16.31,texture_worst:20.54,perimeter_worst:102.3,area_worst:777.5,smoothness_worst:.1218,compactness_worst:.155,concavity_worst:.122,concave_points_worst:.07971,symmetry_worst:.2525,fractal_dimension_worst:.06827,"":""},{id:908489,diagnosis:"M",radius_mean:13.98,texture_mean:19.62,perimeter_mean:91.12,area_mean:599.5,smoothness_mean:.106,compactness_mean:.1133,concavity_mean:.1126,concave_points_mean:.06463,symmetry_mean:.1669,fractal_dimension_mean:.06544,radius_se:.2208,texture_se:.9533,perimeter_se:1.602,area_se:18.85,smoothness_se:.005314,compactness_se:.01791,concavity_se:.02185,concave_points_se:.009567,symmetry_se:.01223,fractal_dimension_se:.002846,radius_worst:17.04,texture_worst:30.8,perimeter_worst:113.9,area_worst:869.3,smoothness_worst:.1613,compactness_worst:.3568,concavity_worst:.4069,concave_points_worst:.1827,symmetry_worst:.3179,fractal_dimension_worst:.1055,"":""},{id:908916,diagnosis:"B",radius_mean:12.87,texture_mean:19.54,perimeter_mean:82.67,area_mean:509.2,smoothness_mean:.09136,compactness_mean:.07883,concavity_mean:.01797,concave_points_mean:.0209,symmetry_mean:.1861,fractal_dimension_mean:.06347,radius_se:.3665,texture_se:.7693,perimeter_se:2.597,area_se:26.5,smoothness_se:.00591,compactness_se:.01362,concavity_se:.007066,concave_points_se:.006502,symmetry_se:.02223,fractal_dimension_se:.002378,radius_worst:14.45,texture_worst:24.38,perimeter_worst:95.14,area_worst:626.9,smoothness_worst:.1214,compactness_worst:.1652,concavity_worst:.07127,concave_points_worst:.06384,symmetry_worst:.3313,fractal_dimension_worst:.07735,"":""},{id:909220,diagnosis:"B",radius_mean:14.04,texture_mean:15.98,perimeter_mean:89.78,area_mean:611.2,smoothness_mean:.08458,compactness_mean:.05895,concavity_mean:.03534,concave_points_mean:.02944,symmetry_mean:.1714,fractal_dimension_mean:.05898,radius_se:.3892,texture_se:1.046,perimeter_se:2.644,area_se:32.74,smoothness_se:.007976,compactness_se:.01295,concavity_se:.01608,concave_points_se:.009046,symmetry_se:.02005,fractal_dimension_se:.00283,radius_worst:15.66,texture_worst:21.58,perimeter_worst:101.2,area_worst:750,smoothness_worst:.1195,compactness_worst:.1252,concavity_worst:.1117,concave_points_worst:.07453,symmetry_worst:.2725,fractal_dimension_worst:.07234,"":""},{id:909231,diagnosis:"B",radius_mean:13.85,texture_mean:19.6,perimeter_mean:88.68,area_mean:592.6,smoothness_mean:.08684,compactness_mean:.0633,concavity_mean:.01342,concave_points_mean:.02293,symmetry_mean:.1555,fractal_dimension_mean:.05673,radius_se:.3419,texture_se:1.678,perimeter_se:2.331,area_se:29.63,smoothness_se:.005836,compactness_se:.01095,concavity_se:.005812,concave_points_se:.007039,symmetry_se:.02014,fractal_dimension_se:.002326,radius_worst:15.63,texture_worst:28.01,perimeter_worst:100.9,area_worst:749.1,smoothness_worst:.1118,compactness_worst:.1141,concavity_worst:.04753,concave_points_worst:.0589,symmetry_worst:.2513,fractal_dimension_worst:.06911,"":""},{id:909410,diagnosis:"B",radius_mean:14.02,texture_mean:15.66,perimeter_mean:89.59,area_mean:606.5,smoothness_mean:.07966,compactness_mean:.05581,concavity_mean:.02087,concave_points_mean:.02652,symmetry_mean:.1589,fractal_dimension_mean:.05586,radius_se:.2142,texture_se:.6549,perimeter_se:1.606,area_se:19.25,smoothness_se:.004837,compactness_se:.009238,concavity_se:.009213,concave_points_se:.01076,symmetry_se:.01171,fractal_dimension_se:.002104,radius_worst:14.91,texture_worst:19.31,perimeter_worst:96.53,area_worst:688.9,smoothness_worst:.1034,compactness_worst:.1017,concavity_worst:.0626,concave_points_worst:.08216,symmetry_worst:.2136,fractal_dimension_worst:.0671,"":""},{id:909411,diagnosis:"B",radius_mean:10.97,texture_mean:17.2,perimeter_mean:71.73,area_mean:371.5,smoothness_mean:.08915,compactness_mean:.1113,concavity_mean:.09457,concave_points_mean:.03613,symmetry_mean:.1489,fractal_dimension_mean:.0664,radius_se:.2574,texture_se:1.376,perimeter_se:2.806,area_se:18.15,smoothness_se:.008565,compactness_se:.04638,concavity_se:.0643,concave_points_se:.01768,symmetry_se:.01516,fractal_dimension_se:.004976,radius_worst:12.36,texture_worst:26.87,perimeter_worst:90.14,area_worst:476.4,smoothness_worst:.1391,compactness_worst:.4082,concavity_worst:.4779,concave_points_worst:.1555,symmetry_worst:.254,fractal_dimension_worst:.09532,"":""},{id:909445,diagnosis:"M",radius_mean:17.27,texture_mean:25.42,perimeter_mean:112.4,area_mean:928.8,smoothness_mean:.08331,compactness_mean:.1109,concavity_mean:.1204,concave_points_mean:.05736,symmetry_mean:.1467,fractal_dimension_mean:.05407,radius_se:.51,texture_se:1.679,perimeter_se:3.283,area_se:58.38,smoothness_se:.008109,compactness_se:.04308,concavity_se:.04942,concave_points_se:.01742,symmetry_se:.01594,fractal_dimension_se:.003739,radius_worst:20.38,texture_worst:35.46,perimeter_worst:132.8,area_worst:1284,smoothness_worst:.1436,compactness_worst:.4122,concavity_worst:.5036,concave_points_worst:.1739,symmetry_worst:.25,fractal_dimension_worst:.07944,"":""},{id:90944601,diagnosis:"B",radius_mean:13.78,texture_mean:15.79,perimeter_mean:88.37,area_mean:585.9,smoothness_mean:.08817,compactness_mean:.06718,concavity_mean:.01055,concave_points_mean:.009937,symmetry_mean:.1405,fractal_dimension_mean:.05848,radius_se:.3563,texture_se:.4833,perimeter_se:2.235,area_se:29.34,smoothness_se:.006432,compactness_se:.01156,concavity_se:.007741,concave_points_se:.005657,symmetry_se:.01227,fractal_dimension_se:.002564,radius_worst:15.27,texture_worst:17.5,perimeter_worst:97.9,area_worst:706.6,smoothness_worst:.1072,compactness_worst:.1071,concavity_worst:.03517,concave_points_worst:.03312,symmetry_worst:.1859,fractal_dimension_worst:.0681,"":""},{id:909777,diagnosis:"B",radius_mean:10.57,texture_mean:18.32,perimeter_mean:66.82,area_mean:340.9,smoothness_mean:.08142,compactness_mean:.04462,concavity_mean:.01993,concave_points_mean:.01111,symmetry_mean:.2372,fractal_dimension_mean:.05768,radius_se:.1818,texture_se:2.542,perimeter_se:1.277,area_se:13.12,smoothness_se:.01072,compactness_se:.01331,concavity_se:.01993,concave_points_se:.01111,symmetry_se:.01717,fractal_dimension_se:.004492,radius_worst:10.94,texture_worst:23.31,perimeter_worst:69.35,area_worst:366.3,smoothness_worst:.09794,compactness_worst:.06542,concavity_worst:.03986,concave_points_worst:.02222,symmetry_worst:.2699,fractal_dimension_worst:.06736,"":""},{id:9110127,diagnosis:"M",radius_mean:18.03,texture_mean:16.85,perimeter_mean:117.5,area_mean:990,smoothness_mean:.08947,compactness_mean:.1232,concavity_mean:.109,concave_points_mean:.06254,symmetry_mean:.172,fractal_dimension_mean:.0578,radius_se:.2986,texture_se:.5906,perimeter_se:1.921,area_se:35.77,smoothness_se:.004117,compactness_se:.0156,concavity_se:.02975,concave_points_se:.009753,symmetry_se:.01295,fractal_dimension_se:.002436,radius_worst:20.38,texture_worst:22.02,perimeter_worst:133.3,area_worst:1292,smoothness_worst:.1263,compactness_worst:.2666,concavity_worst:.429,concave_points_worst:.1535,symmetry_worst:.2842,fractal_dimension_worst:.08225,"":""},{id:9110720,diagnosis:"B",radius_mean:11.99,texture_mean:24.89,perimeter_mean:77.61,area_mean:441.3,smoothness_mean:.103,compactness_mean:.09218,concavity_mean:.05441,concave_points_mean:.04274,symmetry_mean:.182,fractal_dimension_mean:.0685,radius_se:.2623,texture_se:1.204,perimeter_se:1.865,area_se:19.39,smoothness_se:.00832,compactness_se:.02025,concavity_se:.02334,concave_points_se:.01665,symmetry_se:.02094,fractal_dimension_se:.003674,radius_worst:12.98,texture_worst:30.36,perimeter_worst:84.48,area_worst:513.9,smoothness_worst:.1311,compactness_worst:.1822,concavity_worst:.1609,concave_points_worst:.1202,symmetry_worst:.2599,fractal_dimension_worst:.08251,"":""},{id:9110732,diagnosis:"M",radius_mean:17.75,texture_mean:28.03,perimeter_mean:117.3,area_mean:981.6,smoothness_mean:.09997,compactness_mean:.1314,concavity_mean:.1698,concave_points_mean:.08293,symmetry_mean:.1713,fractal_dimension_mean:.05916,radius_se:.3897,texture_se:1.077,perimeter_se:2.873,area_se:43.95,smoothness_se:.004714,compactness_se:.02015,concavity_se:.03697,concave_points_se:.0111,symmetry_se:.01237,fractal_dimension_se:.002556,radius_worst:21.53,texture_worst:38.54,perimeter_worst:145.4,area_worst:1437,smoothness_worst:.1401,compactness_worst:.3762,concavity_worst:.6399,concave_points_worst:.197,symmetry_worst:.2972,fractal_dimension_worst:.09075,"":""},{id:9110944,diagnosis:"B",radius_mean:14.8,texture_mean:17.66,perimeter_mean:95.88,area_mean:674.8,smoothness_mean:.09179,compactness_mean:.0889,concavity_mean:.04069,concave_points_mean:.0226,symmetry_mean:.1893,fractal_dimension_mean:.05886,radius_se:.2204,texture_se:.6221,perimeter_se:1.482,area_se:19.75,smoothness_se:.004796,compactness_se:.01171,concavity_se:.01758,concave_points_se:.006897,symmetry_se:.02254,fractal_dimension_se:.001971,radius_worst:16.43,texture_worst:22.74,perimeter_worst:105.9,area_worst:829.5,smoothness_worst:.1226,compactness_worst:.1881,concavity_worst:.206,concave_points_worst:.08308,symmetry_worst:.36,fractal_dimension_worst:.07285,"":""},{id:911150,diagnosis:"B",radius_mean:14.53,texture_mean:19.34,perimeter_mean:94.25,area_mean:659.7,smoothness_mean:.08388,compactness_mean:.078,concavity_mean:.08817,concave_points_mean:.02925,symmetry_mean:.1473,fractal_dimension_mean:.05746,radius_se:.2535,texture_se:1.354,perimeter_se:1.994,area_se:23.04,smoothness_se:.004147,compactness_se:.02048,concavity_se:.03379,concave_points_se:.008848,symmetry_se:.01394,fractal_dimension_se:.002327,radius_worst:16.3,texture_worst:28.39,perimeter_worst:108.1,area_worst:830.5,smoothness_worst:.1089,compactness_worst:.2649,concavity_worst:.3779,concave_points_worst:.09594,symmetry_worst:.2471,fractal_dimension_worst:.07463,"":""},{id:911157302,diagnosis:"M",radius_mean:21.1,texture_mean:20.52,perimeter_mean:138.1,area_mean:1384,smoothness_mean:.09684,compactness_mean:.1175,concavity_mean:.1572,concave_points_mean:.1155,symmetry_mean:.1554,fractal_dimension_mean:.05661,radius_se:.6643,texture_se:1.361,perimeter_se:4.542,area_se:81.89,smoothness_se:.005467,compactness_se:.02075,concavity_se:.03185,concave_points_se:.01466,symmetry_se:.01029,fractal_dimension_se:.002205,radius_worst:25.68,texture_worst:32.07,perimeter_worst:168.2,area_worst:2022,smoothness_worst:.1368,compactness_worst:.3101,concavity_worst:.4399,concave_points_worst:.228,symmetry_worst:.2268,fractal_dimension_worst:.07425,"":""},{id:9111596,diagnosis:"B",radius_mean:11.87,texture_mean:21.54,perimeter_mean:76.83,area_mean:432,smoothness_mean:.06613,compactness_mean:.1064,concavity_mean:.08777,concave_points_mean:.02386,symmetry_mean:.1349,fractal_dimension_mean:.06612,radius_se:.256,texture_se:1.554,perimeter_se:1.955,area_se:20.24,smoothness_se:.006854,compactness_se:.06063,concavity_se:.06663,concave_points_se:.01553,symmetry_se:.02354,fractal_dimension_se:.008925,radius_worst:12.79,texture_worst:28.18,perimeter_worst:83.51,area_worst:507.2,smoothness_worst:.09457,compactness_worst:.3399,concavity_worst:.3218,concave_points_worst:.0875,symmetry_worst:.2305,fractal_dimension_worst:.09952,"":""},{id:9111805,diagnosis:"M",radius_mean:19.59,texture_mean:25,perimeter_mean:127.7,area_mean:1191,smoothness_mean:.1032,compactness_mean:.09871,concavity_mean:.1655,concave_points_mean:.09063,symmetry_mean:.1663,fractal_dimension_mean:.05391,radius_se:.4674,texture_se:1.375,perimeter_se:2.916,area_se:56.18,smoothness_se:.0119,compactness_se:.01929,concavity_se:.04907,concave_points_se:.01499,symmetry_se:.01641,fractal_dimension_se:.001807,radius_worst:21.44,texture_worst:30.96,perimeter_worst:139.8,area_worst:1421,smoothness_worst:.1528,compactness_worst:.1845,concavity_worst:.3977,concave_points_worst:.1466,symmetry_worst:.2293,fractal_dimension_worst:.06091,"":""},{id:9111843,diagnosis:"B",radius_mean:12,texture_mean:28.23,perimeter_mean:76.77,area_mean:442.5,smoothness_mean:.08437,compactness_mean:.0645,concavity_mean:.04055,concave_points_mean:.01945,symmetry_mean:.1615,fractal_dimension_mean:.06104,radius_se:.1912,texture_se:1.705,perimeter_se:1.516,area_se:13.86,smoothness_se:.007334,compactness_se:.02589,concavity_se:.02941,concave_points_se:.009166,symmetry_se:.01745,fractal_dimension_se:.004302,radius_worst:13.09,texture_worst:37.88,perimeter_worst:85.07,area_worst:523.7,smoothness_worst:.1208,compactness_worst:.1856,concavity_worst:.1811,concave_points_worst:.07116,symmetry_worst:.2447,fractal_dimension_worst:.08194,"":""},{id:911201,diagnosis:"B",radius_mean:14.53,texture_mean:13.98,perimeter_mean:93.86,area_mean:644.2,smoothness_mean:.1099,compactness_mean:.09242,concavity_mean:.06895,concave_points_mean:.06495,symmetry_mean:.165,fractal_dimension_mean:.06121,radius_se:.306,texture_se:.7213,perimeter_se:2.143,area_se:25.7,smoothness_se:.006133,compactness_se:.01251,concavity_se:.01615,concave_points_se:.01136,symmetry_se:.02207,fractal_dimension_se:.003563,radius_worst:15.8,texture_worst:16.93,perimeter_worst:103.1,area_worst:749.9,smoothness_worst:.1347,compactness_worst:.1478,concavity_worst:.1373,concave_points_worst:.1069,symmetry_worst:.2606,fractal_dimension_worst:.0781,"":""},{id:911202,diagnosis:"B",radius_mean:12.62,texture_mean:17.15,perimeter_mean:80.62,area_mean:492.9,smoothness_mean:.08583,compactness_mean:.0543,concavity_mean:.02966,concave_points_mean:.02272,symmetry_mean:.1799,fractal_dimension_mean:.05826,radius_se:.1692,texture_se:.6674,perimeter_se:1.116,area_se:13.32,smoothness_se:.003888,compactness_se:.008539,concavity_se:.01256,concave_points_se:.006888,symmetry_se:.01608,fractal_dimension_se:.001638,radius_worst:14.34,texture_worst:22.15,perimeter_worst:91.62,area_worst:633.5,smoothness_worst:.1225,compactness_worst:.1517,concavity_worst:.1887,concave_points_worst:.09851,symmetry_worst:.327,fractal_dimension_worst:.0733,"":""},{id:9112085,diagnosis:"B",radius_mean:13.38,texture_mean:30.72,perimeter_mean:86.34,area_mean:557.2,smoothness_mean:.09245,compactness_mean:.07426,concavity_mean:.02819,concave_points_mean:.03264,symmetry_mean:.1375,fractal_dimension_mean:.06016,radius_se:.3408,texture_se:1.924,perimeter_se:2.287,area_se:28.93,smoothness_se:.005841,compactness_se:.01246,concavity_se:.007936,concave_points_se:.009128,symmetry_se:.01564,fractal_dimension_se:.002985,radius_worst:15.05,texture_worst:41.61,perimeter_worst:96.69,area_worst:705.6,smoothness_worst:.1172,compactness_worst:.1421,concavity_worst:.07003,concave_points_worst:.07763,symmetry_worst:.2196,fractal_dimension_worst:.07675,"":""},{id:9112366,diagnosis:"B",radius_mean:11.63,texture_mean:29.29,perimeter_mean:74.87,area_mean:415.1,smoothness_mean:.09357,compactness_mean:.08574,concavity_mean:.0716,concave_points_mean:.02017,symmetry_mean:.1799,fractal_dimension_mean:.06166,radius_se:.3135,texture_se:2.426,perimeter_se:2.15,area_se:23.13,smoothness_se:.009861,compactness_se:.02418,concavity_se:.04275,concave_points_se:.009215,symmetry_se:.02475,fractal_dimension_se:.002128,radius_worst:13.12,texture_worst:38.81,perimeter_worst:86.04,area_worst:527.8,smoothness_worst:.1406,compactness_worst:.2031,concavity_worst:.2923,concave_points_worst:.06835,symmetry_worst:.2884,fractal_dimension_worst:.0722,"":""},{id:9112367,diagnosis:"B",radius_mean:13.21,texture_mean:25.25,perimeter_mean:84.1,area_mean:537.9,smoothness_mean:.08791,compactness_mean:.05205,concavity_mean:.02772,concave_points_mean:.02068,symmetry_mean:.1619,fractal_dimension_mean:.05584,radius_se:.2084,texture_se:1.35,perimeter_se:1.314,area_se:17.58,smoothness_se:.005768,compactness_se:.008082,concavity_se:.0151,concave_points_se:.006451,symmetry_se:.01347,fractal_dimension_se:.001828,radius_worst:14.35,texture_worst:34.23,perimeter_worst:91.29,area_worst:632.9,smoothness_worst:.1289,compactness_worst:.1063,concavity_worst:.139,concave_points_worst:.06005,symmetry_worst:.2444,fractal_dimension_worst:.06788,"":""},{id:9112594,diagnosis:"B",radius_mean:13,texture_mean:25.13,perimeter_mean:82.61,area_mean:520.2,smoothness_mean:.08369,compactness_mean:.05073,concavity_mean:.01206,concave_points_mean:.01762,symmetry_mean:.1667,fractal_dimension_mean:.05449,radius_se:.2621,texture_se:1.232,perimeter_se:1.657,area_se:21.19,smoothness_se:.006054,compactness_se:.008974,concavity_se:.005681,concave_points_se:.006336,symmetry_se:.01215,fractal_dimension_se:.001514,radius_worst:14.34,texture_worst:31.88,perimeter_worst:91.06,area_worst:628.5,smoothness_worst:.1218,compactness_worst:.1093,concavity_worst:.04462,concave_points_worst:.05921,symmetry_worst:.2306,fractal_dimension_worst:.06291,"":""},{id:9112712,diagnosis:"B",radius_mean:9.755,texture_mean:28.2,perimeter_mean:61.68,area_mean:290.9,smoothness_mean:.07984,compactness_mean:.04626,concavity_mean:.01541,concave_points_mean:.01043,symmetry_mean:.1621,fractal_dimension_mean:.05952,radius_se:.1781,texture_se:1.687,perimeter_se:1.243,area_se:11.28,smoothness_se:.006588,compactness_se:.0127,concavity_se:.0145,concave_points_se:.006104,symmetry_se:.01574,fractal_dimension_se:.002268,radius_worst:10.67,texture_worst:36.92,perimeter_worst:68.03,area_worst:349.9,smoothness_worst:.111,compactness_worst:.1109,concavity_worst:.0719,concave_points_worst:.04866,symmetry_worst:.2321,fractal_dimension_worst:.07211,"":""},{id:911296201,diagnosis:"M",radius_mean:17.08,texture_mean:27.15,perimeter_mean:111.2,area_mean:930.9,smoothness_mean:.09898,compactness_mean:.111,concavity_mean:.1007,concave_points_mean:.06431,symmetry_mean:.1793,fractal_dimension_mean:.06281,radius_se:.9291,texture_se:1.152,perimeter_se:6.051,area_se:115.2,smoothness_se:.00874,compactness_se:.02219,concavity_se:.02721,concave_points_se:.01458,symmetry_se:.02045,fractal_dimension_se:.004417,radius_worst:22.96,texture_worst:34.49,perimeter_worst:152.1,area_worst:1648,smoothness_worst:.16,compactness_worst:.2444,concavity_worst:.2639,concave_points_worst:.1555,symmetry_worst:.301,fractal_dimension_worst:.0906,"":""},{id:911296202,diagnosis:"M",radius_mean:27.42,texture_mean:26.27,perimeter_mean:186.9,area_mean:2501,smoothness_mean:.1084,compactness_mean:.1988,concavity_mean:.3635,concave_points_mean:.1689,symmetry_mean:.2061,fractal_dimension_mean:.05623,radius_se:2.547,texture_se:1.306,perimeter_se:18.65,area_se:542.2,smoothness_se:.00765,compactness_se:.05374,concavity_se:.08055,concave_points_se:.02598,symmetry_se:.01697,fractal_dimension_se:.004558,radius_worst:36.04,texture_worst:31.37,perimeter_worst:251.2,area_worst:4254,smoothness_worst:.1357,compactness_worst:.4256,concavity_worst:.6833,concave_points_worst:.2625,symmetry_worst:.2641,fractal_dimension_worst:.07427,"":""},{id:9113156,diagnosis:"B",radius_mean:14.4,texture_mean:26.99,perimeter_mean:92.25,area_mean:646.1,smoothness_mean:.06995,compactness_mean:.05223,concavity_mean:.03476,concave_points_mean:.01737,symmetry_mean:.1707,fractal_dimension_mean:.05433,radius_se:.2315,texture_se:.9112,perimeter_se:1.727,area_se:20.52,smoothness_se:.005356,compactness_se:.01679,concavity_se:.01971,concave_points_se:.00637,symmetry_se:.01414,fractal_dimension_se:.001892,radius_worst:15.4,texture_worst:31.98,perimeter_worst:100.4,area_worst:734.6,smoothness_worst:.1017,compactness_worst:.146,concavity_worst:.1472,concave_points_worst:.05563,symmetry_worst:.2345,fractal_dimension_worst:.06464,"":""},{id:911320501,diagnosis:"B",radius_mean:11.6,texture_mean:18.36,perimeter_mean:73.88,area_mean:412.7,smoothness_mean:.08508,compactness_mean:.05855,concavity_mean:.03367,concave_points_mean:.01777,symmetry_mean:.1516,fractal_dimension_mean:.05859,radius_se:.1816,texture_se:.7656,perimeter_se:1.303,area_se:12.89,smoothness_se:.006709,compactness_se:.01701,concavity_se:.0208,concave_points_se:.007497,symmetry_se:.02124,fractal_dimension_se:.002768,radius_worst:12.77,texture_worst:24.02,perimeter_worst:82.68,area_worst:495.1,smoothness_worst:.1342,compactness_worst:.1808,concavity_worst:.186,concave_points_worst:.08288,symmetry_worst:.321,fractal_dimension_worst:.07863,"":""},{id:911320502,diagnosis:"B",radius_mean:13.17,texture_mean:18.22,perimeter_mean:84.28,area_mean:537.3,smoothness_mean:.07466,compactness_mean:.05994,concavity_mean:.04859,concave_points_mean:.0287,symmetry_mean:.1454,fractal_dimension_mean:.05549,radius_se:.2023,texture_se:.685,perimeter_se:1.236,area_se:16.89,smoothness_se:.005969,compactness_se:.01493,concavity_se:.01564,concave_points_se:.008463,symmetry_se:.01093,fractal_dimension_se:.001672,radius_worst:14.9,texture_worst:23.89,perimeter_worst:95.1,area_worst:687.6,smoothness_worst:.1282,compactness_worst:.1965,concavity_worst:.1876,concave_points_worst:.1045,symmetry_worst:.2235,fractal_dimension_worst:.06925,"":""},{id:9113239,diagnosis:"B",radius_mean:13.24,texture_mean:20.13,perimeter_mean:86.87,area_mean:542.9,smoothness_mean:.08284,compactness_mean:.1223,concavity_mean:.101,concave_points_mean:.02833,symmetry_mean:.1601,fractal_dimension_mean:.06432,radius_se:.281,texture_se:.8135,perimeter_se:3.369,area_se:23.81,smoothness_se:.004929,compactness_se:.06657,concavity_se:.07683,concave_points_se:.01368,symmetry_se:.01526,fractal_dimension_se:.008133,radius_worst:15.44,texture_worst:25.5,perimeter_worst:115,area_worst:733.5,smoothness_worst:.1201,compactness_worst:.5646,concavity_worst:.6556,concave_points_worst:.1357,symmetry_worst:.2845,fractal_dimension_worst:.1249,"":""},{id:9113455,diagnosis:"B",radius_mean:13.14,texture_mean:20.74,perimeter_mean:85.98,area_mean:536.9,smoothness_mean:.08675,compactness_mean:.1089,concavity_mean:.1085,concave_points_mean:.0351,symmetry_mean:.1562,fractal_dimension_mean:.0602,radius_se:.3152,texture_se:.7884,perimeter_se:2.312,area_se:27.4,smoothness_se:.007295,compactness_se:.03179,concavity_se:.04615,concave_points_se:.01254,symmetry_se:.01561,fractal_dimension_se:.00323,radius_worst:14.8,texture_worst:25.46,perimeter_worst:100.9,area_worst:689.1,smoothness_worst:.1351,compactness_worst:.3549,concavity_worst:.4504,concave_points_worst:.1181,symmetry_worst:.2563,fractal_dimension_worst:.08174,"":""},{id:9113514,diagnosis:"B",radius_mean:9.668,texture_mean:18.1,perimeter_mean:61.06,area_mean:286.3,smoothness_mean:.08311,compactness_mean:.05428,concavity_mean:.01479,concave_points_mean:.005769,symmetry_mean:.168,fractal_dimension_mean:.06412,radius_se:.3416,texture_se:1.312,perimeter_se:2.275,area_se:20.98,smoothness_se:.01098,compactness_se:.01257,concavity_se:.01031,concave_points_se:.003934,symmetry_se:.02693,fractal_dimension_se:.002979,radius_worst:11.15,texture_worst:24.62,perimeter_worst:71.11,area_worst:380.2,smoothness_worst:.1388,compactness_worst:.1255,concavity_worst:.06409,concave_points_worst:.025,symmetry_worst:.3057,fractal_dimension_worst:.07875,"":""},{id:9113538,diagnosis:"M",radius_mean:17.6,texture_mean:23.33,perimeter_mean:119,area_mean:980.5,smoothness_mean:.09289,compactness_mean:.2004,concavity_mean:.2136,concave_points_mean:.1002,symmetry_mean:.1696,fractal_dimension_mean:.07369,radius_se:.9289,texture_se:1.465,perimeter_se:5.801,area_se:104.9,smoothness_se:.006766,compactness_se:.07025,concavity_se:.06591,concave_points_se:.02311,symmetry_se:.01673,fractal_dimension_se:.0113,radius_worst:21.57,texture_worst:28.87,perimeter_worst:143.6,area_worst:1437,smoothness_worst:.1207,compactness_worst:.4785,concavity_worst:.5165,concave_points_worst:.1996,symmetry_worst:.2301,fractal_dimension_worst:.1224,"":""},{id:911366,diagnosis:"B",radius_mean:11.62,texture_mean:18.18,perimeter_mean:76.38,area_mean:408.8,smoothness_mean:.1175,compactness_mean:.1483,concavity_mean:.102,concave_points_mean:.05564,symmetry_mean:.1957,fractal_dimension_mean:.07255,radius_se:.4101,texture_se:1.74,perimeter_se:3.027,area_se:27.85,smoothness_se:.01459,compactness_se:.03206,concavity_se:.04961,concave_points_se:.01841,symmetry_se:.01807,fractal_dimension_se:.005217,radius_worst:13.36,texture_worst:25.4,perimeter_worst:88.14,area_worst:528.1,smoothness_worst:.178,compactness_worst:.2878,concavity_worst:.3186,concave_points_worst:.1416,symmetry_worst:.266,fractal_dimension_worst:.0927,"":""},{id:9113778,diagnosis:"B",radius_mean:9.667,texture_mean:18.49,perimeter_mean:61.49,area_mean:289.1,smoothness_mean:.08946,compactness_mean:.06258,concavity_mean:.02948,concave_points_mean:.01514,symmetry_mean:.2238,fractal_dimension_mean:.06413,radius_se:.3776,texture_se:1.35,perimeter_se:2.569,area_se:22.73,smoothness_se:.007501,compactness_se:.01989,concavity_se:.02714,concave_points_se:.009883,symmetry_se:.0196,fractal_dimension_se:.003913,radius_worst:11.14,texture_worst:25.62,perimeter_worst:70.88,area_worst:385.2,smoothness_worst:.1234,compactness_worst:.1542,concavity_worst:.1277,concave_points_worst:.0656,symmetry_worst:.3174,fractal_dimension_worst:.08524,"":""},{id:9113816,diagnosis:"B",radius_mean:12.04,texture_mean:28.14,perimeter_mean:76.85,area_mean:449.9,smoothness_mean:.08752,compactness_mean:.06,concavity_mean:.02367,concave_points_mean:.02377,symmetry_mean:.1854,fractal_dimension_mean:.05698,radius_se:.6061,texture_se:2.643,perimeter_se:4.099,area_se:44.96,smoothness_se:.007517,compactness_se:.01555,concavity_se:.01465,concave_points_se:.01183,symmetry_se:.02047,fractal_dimension_se:.003883,radius_worst:13.6,texture_worst:33.33,perimeter_worst:87.24,area_worst:567.6,smoothness_worst:.1041,compactness_worst:.09726,concavity_worst:.05524,concave_points_worst:.05547,symmetry_worst:.2404,fractal_dimension_worst:.06639,"":""},{id:911384,diagnosis:"B",radius_mean:14.92,texture_mean:14.93,perimeter_mean:96.45,area_mean:686.9,smoothness_mean:.08098,compactness_mean:.08549,concavity_mean:.05539,concave_points_mean:.03221,symmetry_mean:.1687,fractal_dimension_mean:.05669,radius_se:.2446,texture_se:.4334,perimeter_se:1.826,area_se:23.31,smoothness_se:.003271,compactness_se:.0177,concavity_se:.0231,concave_points_se:.008399,symmetry_se:.01148,fractal_dimension_se:.002379,radius_worst:17.18,texture_worst:18.22,perimeter_worst:112,area_worst:906.6,smoothness_worst:.1065,compactness_worst:.2791,concavity_worst:.3151,concave_points_worst:.1147,symmetry_worst:.2688,fractal_dimension_worst:.08273,"":""},{id:9113846,diagnosis:"B",radius_mean:12.27,texture_mean:29.97,perimeter_mean:77.42,area_mean:465.4,smoothness_mean:.07699,compactness_mean:.03398,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1701,fractal_dimension_mean:.0596,radius_se:.4455,texture_se:3.647,perimeter_se:2.884,area_se:35.13,smoothness_se:.007339,compactness_se:.008243,concavity_se:0,concave_points_se:0,symmetry_se:.03141,fractal_dimension_se:.003136,radius_worst:13.45,texture_worst:38.05,perimeter_worst:85.08,area_worst:558.9,smoothness_worst:.09422,compactness_worst:.05213,concavity_worst:0,concave_points_worst:0,symmetry_worst:.2409,fractal_dimension_worst:.06743,"":""},{id:911391,diagnosis:"B",radius_mean:10.88,texture_mean:15.62,perimeter_mean:70.41,area_mean:358.9,smoothness_mean:.1007,compactness_mean:.1069,concavity_mean:.05115,concave_points_mean:.01571,symmetry_mean:.1861,fractal_dimension_mean:.06837,radius_se:.1482,texture_se:.538,perimeter_se:1.301,area_se:9.597,smoothness_se:.004474,compactness_se:.03093,concavity_se:.02757,concave_points_se:.006691,symmetry_se:.01212,fractal_dimension_se:.004672,radius_worst:11.94,texture_worst:19.35,perimeter_worst:80.78,area_worst:433.1,smoothness_worst:.1332,compactness_worst:.3898,concavity_worst:.3365,concave_points_worst:.07966,symmetry_worst:.2581,fractal_dimension_worst:.108,"":""},{id:911408,diagnosis:"B",radius_mean:12.83,texture_mean:15.73,perimeter_mean:82.89,area_mean:506.9,smoothness_mean:.0904,compactness_mean:.08269,concavity_mean:.05835,concave_points_mean:.03078,symmetry_mean:.1705,fractal_dimension_mean:.05913,radius_se:.1499,texture_se:.4875,perimeter_se:1.195,area_se:11.64,smoothness_se:.004873,compactness_se:.01796,concavity_se:.03318,concave_points_se:.00836,symmetry_se:.01601,fractal_dimension_se:.002289,radius_worst:14.09,texture_worst:19.35,perimeter_worst:93.22,area_worst:605.8,smoothness_worst:.1326,compactness_worst:.261,concavity_worst:.3476,concave_points_worst:.09783,symmetry_worst:.3006,fractal_dimension_worst:.07802,"":""},{id:911654,diagnosis:"B",radius_mean:14.2,texture_mean:20.53,perimeter_mean:92.41,area_mean:618.4,smoothness_mean:.08931,compactness_mean:.1108,concavity_mean:.05063,concave_points_mean:.03058,symmetry_mean:.1506,fractal_dimension_mean:.06009,radius_se:.3478,texture_se:1.018,perimeter_se:2.749,area_se:31.01,smoothness_se:.004107,compactness_se:.03288,concavity_se:.02821,concave_points_se:.0135,symmetry_se:.0161,fractal_dimension_se:.002744,radius_worst:16.45,texture_worst:27.26,perimeter_worst:112.1,area_worst:828.5,smoothness_worst:.1153,compactness_worst:.3429,concavity_worst:.2512,concave_points_worst:.1339,symmetry_worst:.2534,fractal_dimension_worst:.07858,"":""},{id:911673,diagnosis:"B",radius_mean:13.9,texture_mean:16.62,perimeter_mean:88.97,area_mean:599.4,smoothness_mean:.06828,compactness_mean:.05319,concavity_mean:.02224,concave_points_mean:.01339,symmetry_mean:.1813,fractal_dimension_mean:.05536,radius_se:.1555,texture_se:.5762,perimeter_se:1.392,area_se:14.03,smoothness_se:.003308,compactness_se:.01315,concavity_se:.009904,concave_points_se:.004832,symmetry_se:.01316,fractal_dimension_se:.002095,radius_worst:15.14,texture_worst:21.8,perimeter_worst:101.2,area_worst:718.9,smoothness_worst:.09384,compactness_worst:.2006,concavity_worst:.1384,concave_points_worst:.06222,symmetry_worst:.2679,fractal_dimension_worst:.07698,"":""},{id:911685,diagnosis:"B",radius_mean:11.49,texture_mean:14.59,perimeter_mean:73.99,area_mean:404.9,smoothness_mean:.1046,compactness_mean:.08228,concavity_mean:.05308,concave_points_mean:.01969,symmetry_mean:.1779,fractal_dimension_mean:.06574,radius_se:.2034,texture_se:1.166,perimeter_se:1.567,area_se:14.34,smoothness_se:.004957,compactness_se:.02114,concavity_se:.04156,concave_points_se:.008038,symmetry_se:.01843,fractal_dimension_se:.003614,radius_worst:12.4,texture_worst:21.9,perimeter_worst:82.04,area_worst:467.6,smoothness_worst:.1352,compactness_worst:.201,concavity_worst:.2596,concave_points_worst:.07431,symmetry_worst:.2941,fractal_dimension_worst:.0918,"":""},{id:911916,diagnosis:"M",radius_mean:16.25,texture_mean:19.51,perimeter_mean:109.8,area_mean:815.8,smoothness_mean:.1026,compactness_mean:.1893,concavity_mean:.2236,concave_points_mean:.09194,symmetry_mean:.2151,fractal_dimension_mean:.06578,radius_se:.3147,texture_se:.9857,perimeter_se:3.07,area_se:33.12,smoothness_se:.009197,compactness_se:.0547,concavity_se:.08079,concave_points_se:.02215,symmetry_se:.02773,fractal_dimension_se:.006355,radius_worst:17.39,texture_worst:23.05,perimeter_worst:122.1,area_worst:939.7,smoothness_worst:.1377,compactness_worst:.4462,concavity_worst:.5897,concave_points_worst:.1775,symmetry_worst:.3318,fractal_dimension_worst:.09136,"":""},{id:912193,diagnosis:"B",radius_mean:12.16,texture_mean:18.03,perimeter_mean:78.29,area_mean:455.3,smoothness_mean:.09087,compactness_mean:.07838,concavity_mean:.02916,concave_points_mean:.01527,symmetry_mean:.1464,fractal_dimension_mean:.06284,radius_se:.2194,texture_se:1.19,perimeter_se:1.678,area_se:16.26,smoothness_se:.004911,compactness_se:.01666,concavity_se:.01397,concave_points_se:.005161,symmetry_se:.01454,fractal_dimension_se:.001858,radius_worst:13.34,texture_worst:27.87,perimeter_worst:88.83,area_worst:547.4,smoothness_worst:.1208,compactness_worst:.2279,concavity_worst:.162,concave_points_worst:.0569,symmetry_worst:.2406,fractal_dimension_worst:.07729,"":""},{id:91227,diagnosis:"B",radius_mean:13.9,texture_mean:19.24,perimeter_mean:88.73,area_mean:602.9,smoothness_mean:.07991,compactness_mean:.05326,concavity_mean:.02995,concave_points_mean:.0207,symmetry_mean:.1579,fractal_dimension_mean:.05594,radius_se:.3316,texture_se:.9264,perimeter_se:2.056,area_se:28.41,smoothness_se:.003704,compactness_se:.01082,concavity_se:.0153,concave_points_se:.006275,symmetry_se:.01062,fractal_dimension_se:.002217,radius_worst:16.41,texture_worst:26.42,perimeter_worst:104.4,area_worst:830.5,smoothness_worst:.1064,compactness_worst:.1415,concavity_worst:.1673,concave_points_worst:.0815,symmetry_worst:.2356,fractal_dimension_worst:.07603,"":""},{id:912519,diagnosis:"B",radius_mean:13.47,texture_mean:14.06,perimeter_mean:87.32,area_mean:546.3,smoothness_mean:.1071,compactness_mean:.1155,concavity_mean:.05786,concave_points_mean:.05266,symmetry_mean:.1779,fractal_dimension_mean:.06639,radius_se:.1588,texture_se:.5733,perimeter_se:1.102,area_se:12.84,smoothness_se:.00445,compactness_se:.01452,concavity_se:.01334,concave_points_se:.008791,symmetry_se:.01698,fractal_dimension_se:.002787,radius_worst:14.83,texture_worst:18.32,perimeter_worst:94.94,area_worst:660.2,smoothness_worst:.1393,compactness_worst:.2499,concavity_worst:.1848,concave_points_worst:.1335,symmetry_worst:.3227,fractal_dimension_worst:.09326,"":""},{id:912558,diagnosis:"B",radius_mean:13.7,texture_mean:17.64,perimeter_mean:87.76,area_mean:571.1,smoothness_mean:.0995,compactness_mean:.07957,concavity_mean:.04548,concave_points_mean:.0316,symmetry_mean:.1732,fractal_dimension_mean:.06088,radius_se:.2431,texture_se:.9462,perimeter_se:1.564,area_se:20.64,smoothness_se:.003245,compactness_se:.008186,concavity_se:.01698,concave_points_se:.009233,symmetry_se:.01285,fractal_dimension_se:.001524,radius_worst:14.96,texture_worst:23.53,perimeter_worst:95.78,area_worst:686.5,smoothness_worst:.1199,compactness_worst:.1346,concavity_worst:.1742,concave_points_worst:.09077,symmetry_worst:.2518,fractal_dimension_worst:.0696,"":""},{id:912600,diagnosis:"B",radius_mean:15.73,texture_mean:11.28,perimeter_mean:102.8,area_mean:747.2,smoothness_mean:.1043,compactness_mean:.1299,concavity_mean:.1191,concave_points_mean:.06211,symmetry_mean:.1784,fractal_dimension_mean:.06259,radius_se:.163,texture_se:.3871,perimeter_se:1.143,area_se:13.87,smoothness_se:.006034,compactness_se:.0182,concavity_se:.03336,concave_points_se:.01067,symmetry_se:.01175,fractal_dimension_se:.002256,radius_worst:17.01,texture_worst:14.2,perimeter_worst:112.5,area_worst:854.3,smoothness_worst:.1541,compactness_worst:.2979,concavity_worst:.4004,concave_points_worst:.1452,symmetry_worst:.2557,fractal_dimension_worst:.08181,"":""},{id:913063,diagnosis:"B",radius_mean:12.45,texture_mean:16.41,perimeter_mean:82.85,area_mean:476.7,smoothness_mean:.09514,compactness_mean:.1511,concavity_mean:.1544,concave_points_mean:.04846,symmetry_mean:.2082,fractal_dimension_mean:.07325,radius_se:.3921,texture_se:1.207,perimeter_se:5.004,area_se:30.19,smoothness_se:.007234,compactness_se:.07471,concavity_se:.1114,concave_points_se:.02721,symmetry_se:.03232,fractal_dimension_se:.009627,radius_worst:13.78,texture_worst:21.03,perimeter_worst:97.82,area_worst:580.6,smoothness_worst:.1175,compactness_worst:.4061,concavity_worst:.4896,concave_points_worst:.1342,symmetry_worst:.3231,fractal_dimension_worst:.1034,"":""},{id:913102,diagnosis:"B",radius_mean:14.64,texture_mean:16.85,perimeter_mean:94.21,area_mean:666,smoothness_mean:.08641,compactness_mean:.06698,concavity_mean:.05192,concave_points_mean:.02791,symmetry_mean:.1409,fractal_dimension_mean:.05355,radius_se:.2204,texture_se:1.006,perimeter_se:1.471,area_se:19.98,smoothness_se:.003535,compactness_se:.01393,concavity_se:.018,concave_points_se:.006144,symmetry_se:.01254,fractal_dimension_se:.001219,radius_worst:16.46,texture_worst:25.44,perimeter_worst:106,area_worst:831,smoothness_worst:.1142,compactness_worst:.207,concavity_worst:.2437,concave_points_worst:.07828,symmetry_worst:.2455,fractal_dimension_worst:.06596,"":""},{id:913505,diagnosis:"M",radius_mean:19.44,texture_mean:18.82,perimeter_mean:128.1,area_mean:1167,smoothness_mean:.1089,compactness_mean:.1448,concavity_mean:.2256,concave_points_mean:.1194,symmetry_mean:.1823,fractal_dimension_mean:.06115,radius_se:.5659,texture_se:1.408,perimeter_se:3.631,area_se:67.74,smoothness_se:.005288,compactness_se:.02833,concavity_se:.04256,concave_points_se:.01176,symmetry_se:.01717,fractal_dimension_se:.003211,radius_worst:23.96,texture_worst:30.39,perimeter_worst:153.9,area_worst:1740,smoothness_worst:.1514,compactness_worst:.3725,concavity_worst:.5936,concave_points_worst:.206,symmetry_worst:.3266,fractal_dimension_worst:.09009,"":""},{id:913512,diagnosis:"B",radius_mean:11.68,texture_mean:16.17,perimeter_mean:75.49,area_mean:420.5,smoothness_mean:.1128,compactness_mean:.09263,concavity_mean:.04279,concave_points_mean:.03132,symmetry_mean:.1853,fractal_dimension_mean:.06401,radius_se:.3713,texture_se:1.154,perimeter_se:2.554,area_se:27.57,smoothness_se:.008998,compactness_se:.01292,concavity_se:.01851,concave_points_se:.01167,symmetry_se:.02152,fractal_dimension_se:.003213,radius_worst:13.32,texture_worst:21.59,perimeter_worst:86.57,area_worst:549.8,smoothness_worst:.1526,compactness_worst:.1477,concavity_worst:.149,concave_points_worst:.09815,symmetry_worst:.2804,fractal_dimension_worst:.08024,"":""},{id:913535,diagnosis:"M",radius_mean:16.69,texture_mean:20.2,perimeter_mean:107.1,area_mean:857.6,smoothness_mean:.07497,compactness_mean:.07112,concavity_mean:.03649,concave_points_mean:.02307,symmetry_mean:.1846,fractal_dimension_mean:.05325,radius_se:.2473,texture_se:.5679,perimeter_se:1.775,area_se:22.95,smoothness_se:.002667,compactness_se:.01446,concavity_se:.01423,concave_points_se:.005297,symmetry_se:.01961,fractal_dimension_se:.0017,radius_worst:19.18,texture_worst:26.56,perimeter_worst:127.3,area_worst:1084,smoothness_worst:.1009,compactness_worst:.292,concavity_worst:.2477,concave_points_worst:.08737,symmetry_worst:.4677,fractal_dimension_worst:.07623,"":""},{id:91376701,diagnosis:"B",radius_mean:12.25,texture_mean:22.44,perimeter_mean:78.18,area_mean:466.5,smoothness_mean:.08192,compactness_mean:.052,concavity_mean:.01714,concave_points_mean:.01261,symmetry_mean:.1544,fractal_dimension_mean:.05976,radius_se:.2239,texture_se:1.139,perimeter_se:1.577,area_se:18.04,smoothness_se:.005096,compactness_se:.01205,concavity_se:.00941,concave_points_se:.004551,symmetry_se:.01608,fractal_dimension_se:.002399,radius_worst:14.17,texture_worst:31.99,perimeter_worst:92.74,area_worst:622.9,smoothness_worst:.1256,compactness_worst:.1804,concavity_worst:.123,concave_points_worst:.06335,symmetry_worst:.31,fractal_dimension_worst:.08203,"":""},{id:91376702,diagnosis:"B",radius_mean:17.85,texture_mean:13.23,perimeter_mean:114.6,area_mean:992.1,smoothness_mean:.07838,compactness_mean:.06217,concavity_mean:.04445,concave_points_mean:.04178,symmetry_mean:.122,fractal_dimension_mean:.05243,radius_se:.4834,texture_se:1.046,perimeter_se:3.163,area_se:50.95,smoothness_se:.004369,compactness_se:.008274,concavity_se:.01153,concave_points_se:.007437,symmetry_se:.01302,fractal_dimension_se:.001309,radius_worst:19.82,texture_worst:18.42,perimeter_worst:127.1,area_worst:1210,smoothness_worst:.09862,compactness_worst:.09976,concavity_worst:.1048,concave_points_worst:.08341,symmetry_worst:.1783,fractal_dimension_worst:.05871,"":""},{id:914062,diagnosis:"M",radius_mean:18.01,texture_mean:20.56,perimeter_mean:118.4,area_mean:1007,smoothness_mean:.1001,compactness_mean:.1289,concavity_mean:.117,concave_points_mean:.07762,symmetry_mean:.2116,fractal_dimension_mean:.06077,radius_se:.7548,texture_se:1.288,perimeter_se:5.353,area_se:89.74,smoothness_se:.007997,compactness_se:.027,concavity_se:.03737,concave_points_se:.01648,symmetry_se:.02897,fractal_dimension_se:.003996,radius_worst:21.53,texture_worst:26.06,perimeter_worst:143.4,area_worst:1426,smoothness_worst:.1309,compactness_worst:.2327,concavity_worst:.2544,concave_points_worst:.1489,symmetry_worst:.3251,fractal_dimension_worst:.07625,"":""},{id:914101,diagnosis:"B",radius_mean:12.46,texture_mean:12.83,perimeter_mean:78.83,area_mean:477.3,smoothness_mean:.07372,compactness_mean:.04043,concavity_mean:.007173,concave_points_mean:.01149,symmetry_mean:.1613,fractal_dimension_mean:.06013,radius_se:.3276,texture_se:1.486,perimeter_se:2.108,area_se:24.6,smoothness_se:.01039,compactness_se:.01003,concavity_se:.006416,concave_points_se:.007895,symmetry_se:.02869,fractal_dimension_se:.004821,radius_worst:13.19,texture_worst:16.36,perimeter_worst:83.24,area_worst:534,smoothness_worst:.09439,compactness_worst:.06477,concavity_worst:.01674,concave_points_worst:.0268,symmetry_worst:.228,fractal_dimension_worst:.07028,"":""},{id:914102,diagnosis:"B",radius_mean:13.16,texture_mean:20.54,perimeter_mean:84.06,area_mean:538.7,smoothness_mean:.07335,compactness_mean:.05275,concavity_mean:.018,concave_points_mean:.01256,symmetry_mean:.1713,fractal_dimension_mean:.05888,radius_se:.3237,texture_se:1.473,perimeter_se:2.326,area_se:26.07,smoothness_se:.007802,compactness_se:.02052,concavity_se:.01341,concave_points_se:.005564,symmetry_se:.02086,fractal_dimension_se:.002701,radius_worst:14.5,texture_worst:28.46,perimeter_worst:95.29,area_worst:648.3,smoothness_worst:.1118,compactness_worst:.1646,concavity_worst:.07698,concave_points_worst:.04195,symmetry_worst:.2687,fractal_dimension_worst:.07429,"":""},{id:914333,diagnosis:"B",radius_mean:14.87,texture_mean:20.21,perimeter_mean:96.12,area_mean:680.9,smoothness_mean:.09587,compactness_mean:.08345,concavity_mean:.06824,concave_points_mean:.04951,symmetry_mean:.1487,fractal_dimension_mean:.05748,radius_se:.2323,texture_se:1.636,perimeter_se:1.596,area_se:21.84,smoothness_se:.005415,compactness_se:.01371,concavity_se:.02153,concave_points_se:.01183,symmetry_se:.01959,fractal_dimension_se:.001812,radius_worst:16.01,texture_worst:28.48,perimeter_worst:103.9,area_worst:783.6,smoothness_worst:.1216,compactness_worst:.1388,concavity_worst:.17,concave_points_worst:.1017,symmetry_worst:.2369,fractal_dimension_worst:.06599,"":""},{id:914366,diagnosis:"B",radius_mean:12.65,texture_mean:18.17,perimeter_mean:82.69,area_mean:485.6,smoothness_mean:.1076,compactness_mean:.1334,concavity_mean:.08017,concave_points_mean:.05074,symmetry_mean:.1641,fractal_dimension_mean:.06854,radius_se:.2324,texture_se:.6332,perimeter_se:1.696,area_se:18.4,smoothness_se:.005704,compactness_se:.02502,concavity_se:.02636,concave_points_se:.01032,symmetry_se:.01759,fractal_dimension_se:.003563,radius_worst:14.38,texture_worst:22.15,perimeter_worst:95.29,area_worst:633.7,smoothness_worst:.1533,compactness_worst:.3842,concavity_worst:.3582,concave_points_worst:.1407,symmetry_worst:.323,fractal_dimension_worst:.1033,"":""},{id:914580,diagnosis:"B",radius_mean:12.47,texture_mean:17.31,perimeter_mean:80.45,area_mean:480.1,smoothness_mean:.08928,compactness_mean:.0763,concavity_mean:.03609,concave_points_mean:.02369,symmetry_mean:.1526,fractal_dimension_mean:.06046,radius_se:.1532,texture_se:.781,perimeter_se:1.253,area_se:11.91,smoothness_se:.003796,compactness_se:.01371,concavity_se:.01346,concave_points_se:.007096,symmetry_se:.01536,fractal_dimension_se:.001541,radius_worst:14.06,texture_worst:24.34,perimeter_worst:92.82,area_worst:607.3,smoothness_worst:.1276,compactness_worst:.2506,concavity_worst:.2028,concave_points_worst:.1053,symmetry_worst:.3035,fractal_dimension_worst:.07661,"":""},{id:914769,diagnosis:"M",radius_mean:18.49,texture_mean:17.52,perimeter_mean:121.3,area_mean:1068,smoothness_mean:.1012,compactness_mean:.1317,concavity_mean:.1491,concave_points_mean:.09183,symmetry_mean:.1832,fractal_dimension_mean:.06697,radius_se:.7923,texture_se:1.045,perimeter_se:4.851,area_se:95.77,smoothness_se:.007974,compactness_se:.03214,concavity_se:.04435,concave_points_se:.01573,symmetry_se:.01617,fractal_dimension_se:.005255,radius_worst:22.75,texture_worst:22.88,perimeter_worst:146.4,area_worst:1600,smoothness_worst:.1412,compactness_worst:.3089,concavity_worst:.3533,concave_points_worst:.1663,symmetry_worst:.251,fractal_dimension_worst:.09445,"":""},{id:91485,diagnosis:"M",radius_mean:20.59,texture_mean:21.24,perimeter_mean:137.8,area_mean:1320,smoothness_mean:.1085,compactness_mean:.1644,concavity_mean:.2188,concave_points_mean:.1121,symmetry_mean:.1848,fractal_dimension_mean:.06222,radius_se:.5904,texture_se:1.216,perimeter_se:4.206,area_se:75.09,smoothness_se:.006666,compactness_se:.02791,concavity_se:.04062,concave_points_se:.01479,symmetry_se:.01117,fractal_dimension_se:.003727,radius_worst:23.86,texture_worst:30.76,perimeter_worst:163.2,area_worst:1760,smoothness_worst:.1464,compactness_worst:.3597,concavity_worst:.5179,concave_points_worst:.2113,symmetry_worst:.248,fractal_dimension_worst:.08999,"":""},{id:914862,diagnosis:"B",radius_mean:15.04,texture_mean:16.74,perimeter_mean:98.73,area_mean:689.4,smoothness_mean:.09883,compactness_mean:.1364,concavity_mean:.07721,concave_points_mean:.06142,symmetry_mean:.1668,fractal_dimension_mean:.06869,radius_se:.372,texture_se:.8423,perimeter_se:2.304,area_se:34.84,smoothness_se:.004123,compactness_se:.01819,concavity_se:.01996,concave_points_se:.01004,symmetry_se:.01055,fractal_dimension_se:.003237,radius_worst:16.76,texture_worst:20.43,perimeter_worst:109.7,area_worst:856.9,smoothness_worst:.1135,compactness_worst:.2176,concavity_worst:.1856,concave_points_worst:.1018,symmetry_worst:.2177,fractal_dimension_worst:.08549,"":""},{id:91504,diagnosis:"M",radius_mean:13.82,texture_mean:24.49,perimeter_mean:92.33,area_mean:595.9,smoothness_mean:.1162,compactness_mean:.1681,concavity_mean:.1357,concave_points_mean:.06759,symmetry_mean:.2275,fractal_dimension_mean:.07237,radius_se:.4751,texture_se:1.528,perimeter_se:2.974,area_se:39.05,smoothness_se:.00968,compactness_se:.03856,concavity_se:.03476,concave_points_se:.01616,symmetry_se:.02434,fractal_dimension_se:.006995,radius_worst:16.01,texture_worst:32.94,perimeter_worst:106,area_worst:788,smoothness_worst:.1794,compactness_worst:.3966,concavity_worst:.3381,concave_points_worst:.1521,symmetry_worst:.3651,fractal_dimension_worst:.1183,"":""},{id:91505,diagnosis:"B",radius_mean:12.54,texture_mean:16.32,perimeter_mean:81.25,area_mean:476.3,smoothness_mean:.1158,compactness_mean:.1085,concavity_mean:.05928,concave_points_mean:.03279,symmetry_mean:.1943,fractal_dimension_mean:.06612,radius_se:.2577,texture_se:1.095,perimeter_se:1.566,area_se:18.49,smoothness_se:.009702,compactness_se:.01567,concavity_se:.02575,concave_points_se:.01161,symmetry_se:.02801,fractal_dimension_se:.00248,radius_worst:13.57,texture_worst:21.4,perimeter_worst:86.67,area_worst:552,smoothness_worst:.158,compactness_worst:.1751,concavity_worst:.1889,concave_points_worst:.08411,symmetry_worst:.3155,fractal_dimension_worst:.07538,"":""},{id:915143,diagnosis:"M",radius_mean:23.09,texture_mean:19.83,perimeter_mean:152.1,area_mean:1682,smoothness_mean:.09342,compactness_mean:.1275,concavity_mean:.1676,concave_points_mean:.1003,symmetry_mean:.1505,fractal_dimension_mean:.05484,radius_se:1.291,texture_se:.7452,perimeter_se:9.635,area_se:180.2,smoothness_se:.005753,compactness_se:.03356,concavity_se:.03976,concave_points_se:.02156,symmetry_se:.02201,fractal_dimension_se:.002897,radius_worst:30.79,texture_worst:23.87,perimeter_worst:211.5,area_worst:2782,smoothness_worst:.1199,compactness_worst:.3625,concavity_worst:.3794,concave_points_worst:.2264,symmetry_worst:.2908,fractal_dimension_worst:.07277,"":""},{id:915186,diagnosis:"B",radius_mean:9.268,texture_mean:12.87,perimeter_mean:61.49,area_mean:248.7,smoothness_mean:.1634,compactness_mean:.2239,concavity_mean:.0973,concave_points_mean:.05252,symmetry_mean:.2378,fractal_dimension_mean:.09502,radius_se:.4076,texture_se:1.093,perimeter_se:3.014,area_se:20.04,smoothness_se:.009783,compactness_se:.04542,concavity_se:.03483,concave_points_se:.02188,symmetry_se:.02542,fractal_dimension_se:.01045,radius_worst:10.28,texture_worst:16.38,perimeter_worst:69.05,area_worst:300.2,smoothness_worst:.1902,compactness_worst:.3441,concavity_worst:.2099,concave_points_worst:.1025,symmetry_worst:.3038,fractal_dimension_worst:.1252,"":""},{id:915276,diagnosis:"B",radius_mean:9.676,texture_mean:13.14,perimeter_mean:64.12,area_mean:272.5,smoothness_mean:.1255,compactness_mean:.2204,concavity_mean:.1188,concave_points_mean:.07038,symmetry_mean:.2057,fractal_dimension_mean:.09575,radius_se:.2744,texture_se:1.39,perimeter_se:1.787,area_se:17.67,smoothness_se:.02177,compactness_se:.04888,concavity_se:.05189,concave_points_se:.0145,symmetry_se:.02632,fractal_dimension_se:.01148,radius_worst:10.6,texture_worst:18.04,perimeter_worst:69.47,area_worst:328.1,smoothness_worst:.2006,compactness_worst:.3663,concavity_worst:.2913,concave_points_worst:.1075,symmetry_worst:.2848,fractal_dimension_worst:.1364,"":""},{id:91544001,diagnosis:"B",radius_mean:12.22,texture_mean:20.04,perimeter_mean:79.47,area_mean:453.1,smoothness_mean:.1096,compactness_mean:.1152,concavity_mean:.08175,concave_points_mean:.02166,symmetry_mean:.2124,fractal_dimension_mean:.06894,radius_se:.1811,texture_se:.7959,perimeter_se:.9857,area_se:12.58,smoothness_se:.006272,compactness_se:.02198,concavity_se:.03966,concave_points_se:.009894,symmetry_se:.0132,fractal_dimension_se:.003813,radius_worst:13.16,texture_worst:24.17,perimeter_worst:85.13,area_worst:515.3,smoothness_worst:.1402,compactness_worst:.2315,concavity_worst:.3535,concave_points_worst:.08088,symmetry_worst:.2709,fractal_dimension_worst:.08839,"":""},{id:91544002,diagnosis:"B",radius_mean:11.06,texture_mean:17.12,perimeter_mean:71.25,area_mean:366.5,smoothness_mean:.1194,compactness_mean:.1071,concavity_mean:.04063,concave_points_mean:.04268,symmetry_mean:.1954,fractal_dimension_mean:.07976,radius_se:.1779,texture_se:1.03,perimeter_se:1.318,area_se:12.3,smoothness_se:.01262,compactness_se:.02348,concavity_se:.018,concave_points_se:.01285,symmetry_se:.0222,fractal_dimension_se:.008313,radius_worst:11.69,texture_worst:20.74,perimeter_worst:76.08,area_worst:411.1,smoothness_worst:.1662,compactness_worst:.2031,concavity_worst:.1256,concave_points_worst:.09514,symmetry_worst:.278,fractal_dimension_worst:.1168,"":""},{id:915452,diagnosis:"B",radius_mean:16.3,texture_mean:15.7,perimeter_mean:104.7,area_mean:819.8,smoothness_mean:.09427,compactness_mean:.06712,concavity_mean:.05526,concave_points_mean:.04563,symmetry_mean:.1711,fractal_dimension_mean:.05657,radius_se:.2067,texture_se:.4706,perimeter_se:1.146,area_se:20.67,smoothness_se:.007394,compactness_se:.01203,concavity_se:.0247,concave_points_se:.01431,symmetry_se:.01344,fractal_dimension_se:.002569,radius_worst:17.32,texture_worst:17.76,perimeter_worst:109.8,area_worst:928.2,smoothness_worst:.1354,compactness_worst:.1361,concavity_worst:.1947,concave_points_worst:.1357,symmetry_worst:.23,fractal_dimension_worst:.0723,"":""},{id:915460,diagnosis:"M",radius_mean:15.46,texture_mean:23.95,perimeter_mean:103.8,area_mean:731.3,smoothness_mean:.1183,compactness_mean:.187,concavity_mean:.203,concave_points_mean:.0852,symmetry_mean:.1807,fractal_dimension_mean:.07083,radius_se:.3331,texture_se:1.961,perimeter_se:2.937,area_se:32.52,smoothness_se:.009538,compactness_se:.0494,concavity_se:.06019,concave_points_se:.02041,symmetry_se:.02105,fractal_dimension_se:.006,radius_worst:17.11,texture_worst:36.33,perimeter_worst:117.7,area_worst:909.4,smoothness_worst:.1732,compactness_worst:.4967,concavity_worst:.5911,concave_points_worst:.2163,symmetry_worst:.3013,fractal_dimension_worst:.1067,"":""},{id:91550,diagnosis:"B",radius_mean:11.74,texture_mean:14.69,perimeter_mean:76.31,area_mean:426,smoothness_mean:.08099,compactness_mean:.09661,concavity_mean:.06726,concave_points_mean:.02639,symmetry_mean:.1499,fractal_dimension_mean:.06758,radius_se:.1924,texture_se:.6417,perimeter_se:1.345,area_se:13.04,smoothness_se:.006982,compactness_se:.03916,concavity_se:.04017,concave_points_se:.01528,symmetry_se:.0226,fractal_dimension_se:.006822,radius_worst:12.45,texture_worst:17.6,perimeter_worst:81.25,area_worst:473.8,smoothness_worst:.1073,compactness_worst:.2793,concavity_worst:.269,concave_points_worst:.1056,symmetry_worst:.2604,fractal_dimension_worst:.09879,"":""},{id:915664,diagnosis:"B",radius_mean:14.81,texture_mean:14.7,perimeter_mean:94.66,area_mean:680.7,smoothness_mean:.08472,compactness_mean:.05016,concavity_mean:.03416,concave_points_mean:.02541,symmetry_mean:.1659,fractal_dimension_mean:.05348,radius_se:.2182,texture_se:.6232,perimeter_se:1.677,area_se:20.72,smoothness_se:.006708,compactness_se:.01197,concavity_se:.01482,concave_points_se:.01056,symmetry_se:.0158,fractal_dimension_se:.001779,radius_worst:15.61,texture_worst:17.58,perimeter_worst:101.7,area_worst:760.2,smoothness_worst:.1139,compactness_worst:.1011,concavity_worst:.1101,concave_points_worst:.07955,symmetry_worst:.2334,fractal_dimension_worst:.06142,"":""},{id:915691,diagnosis:"M",radius_mean:13.4,texture_mean:20.52,perimeter_mean:88.64,area_mean:556.7,smoothness_mean:.1106,compactness_mean:.1469,concavity_mean:.1445,concave_points_mean:.08172,symmetry_mean:.2116,fractal_dimension_mean:.07325,radius_se:.3906,texture_se:.9306,perimeter_se:3.093,area_se:33.67,smoothness_se:.005414,compactness_se:.02265,concavity_se:.03452,concave_points_se:.01334,symmetry_se:.01705,fractal_dimension_se:.004005,radius_worst:16.41,texture_worst:29.66,perimeter_worst:113.3,area_worst:844.4,smoothness_worst:.1574,compactness_worst:.3856,concavity_worst:.5106,concave_points_worst:.2051,symmetry_worst:.3585,fractal_dimension_worst:.1109,"":""},{id:915940,diagnosis:"B",radius_mean:14.58,texture_mean:13.66,perimeter_mean:94.29,area_mean:658.8,smoothness_mean:.09832,compactness_mean:.08918,concavity_mean:.08222,concave_points_mean:.04349,symmetry_mean:.1739,fractal_dimension_mean:.0564,radius_se:.4165,texture_se:.6237,perimeter_se:2.561,area_se:37.11,smoothness_se:.004953,compactness_se:.01812,concavity_se:.03035,concave_points_se:.008648,symmetry_se:.01539,fractal_dimension_se:.002281,radius_worst:16.76,texture_worst:17.24,perimeter_worst:108.5,area_worst:862,smoothness_worst:.1223,compactness_worst:.1928,concavity_worst:.2492,concave_points_worst:.09186,symmetry_worst:.2626,fractal_dimension_worst:.07048,"":""},{id:91594602,diagnosis:"M",radius_mean:15.05,texture_mean:19.07,perimeter_mean:97.26,area_mean:701.9,smoothness_mean:.09215,compactness_mean:.08597,concavity_mean:.07486,concave_points_mean:.04335,symmetry_mean:.1561,fractal_dimension_mean:.05915,radius_se:.386,texture_se:1.198,perimeter_se:2.63,area_se:38.49,smoothness_se:.004952,compactness_se:.0163,concavity_se:.02967,concave_points_se:.009423,symmetry_se:.01152,fractal_dimension_se:.001718,radius_worst:17.58,texture_worst:28.06,perimeter_worst:113.8,area_worst:967,smoothness_worst:.1246,compactness_worst:.2101,concavity_worst:.2866,concave_points_worst:.112,symmetry_worst:.2282,fractal_dimension_worst:.06954,"":""},{id:916221,diagnosis:"B",radius_mean:11.34,texture_mean:18.61,perimeter_mean:72.76,area_mean:391.2,smoothness_mean:.1049,compactness_mean:.08499,concavity_mean:.04302,concave_points_mean:.02594,symmetry_mean:.1927,fractal_dimension_mean:.06211,radius_se:.243,texture_se:1.01,perimeter_se:1.491,area_se:18.19,smoothness_se:.008577,compactness_se:.01641,concavity_se:.02099,concave_points_se:.01107,symmetry_se:.02434,fractal_dimension_se:.001217,radius_worst:12.47,texture_worst:23.03,perimeter_worst:79.15,area_worst:478.6,smoothness_worst:.1483,compactness_worst:.1574,concavity_worst:.1624,concave_points_worst:.08542,symmetry_worst:.306,fractal_dimension_worst:.06783,"":""},{id:916799,diagnosis:"M",radius_mean:18.31,texture_mean:20.58,perimeter_mean:120.8,area_mean:1052,smoothness_mean:.1068,compactness_mean:.1248,concavity_mean:.1569,concave_points_mean:.09451,symmetry_mean:.186,fractal_dimension_mean:.05941,radius_se:.5449,texture_se:.9225,perimeter_se:3.218,area_se:67.36,smoothness_se:.006176,compactness_se:.01877,concavity_se:.02913,concave_points_se:.01046,symmetry_se:.01559,fractal_dimension_se:.002725,radius_worst:21.86,texture_worst:26.2,perimeter_worst:142.2,area_worst:1493,smoothness_worst:.1492,compactness_worst:.2536,concavity_worst:.3759,concave_points_worst:.151,symmetry_worst:.3074,fractal_dimension_worst:.07863,"":""},{id:916838,diagnosis:"M",radius_mean:19.89,texture_mean:20.26,perimeter_mean:130.5,area_mean:1214,smoothness_mean:.1037,compactness_mean:.131,concavity_mean:.1411,concave_points_mean:.09431,symmetry_mean:.1802,fractal_dimension_mean:.06188,radius_se:.5079,texture_se:.8737,perimeter_se:3.654,area_se:59.7,smoothness_se:.005089,compactness_se:.02303,concavity_se:.03052,concave_points_se:.01178,symmetry_se:.01057,fractal_dimension_se:.003391,radius_worst:23.73,texture_worst:25.23,perimeter_worst:160.5,area_worst:1646,smoothness_worst:.1417,compactness_worst:.3309,concavity_worst:.4185,concave_points_worst:.1613,symmetry_worst:.2549,fractal_dimension_worst:.09136,"":""},{id:917062,diagnosis:"B",radius_mean:12.88,texture_mean:18.22,perimeter_mean:84.45,area_mean:493.1,smoothness_mean:.1218,compactness_mean:.1661,concavity_mean:.04825,concave_points_mean:.05303,symmetry_mean:.1709,fractal_dimension_mean:.07253,radius_se:.4426,texture_se:1.169,perimeter_se:3.176,area_se:34.37,smoothness_se:.005273,compactness_se:.02329,concavity_se:.01405,concave_points_se:.01244,symmetry_se:.01816,fractal_dimension_se:.003299,radius_worst:15.05,texture_worst:24.37,perimeter_worst:99.31,area_worst:674.7,smoothness_worst:.1456,compactness_worst:.2961,concavity_worst:.1246,concave_points_worst:.1096,symmetry_worst:.2582,fractal_dimension_worst:.08893,"":""},{id:917080,diagnosis:"B",radius_mean:12.75,texture_mean:16.7,perimeter_mean:82.51,area_mean:493.8,smoothness_mean:.1125,compactness_mean:.1117,concavity_mean:.0388,concave_points_mean:.02995,symmetry_mean:.212,fractal_dimension_mean:.06623,radius_se:.3834,texture_se:1.003,perimeter_se:2.495,area_se:28.62,smoothness_se:.007509,compactness_se:.01561,concavity_se:.01977,concave_points_se:.009199,symmetry_se:.01805,fractal_dimension_se:.003629,radius_worst:14.45,texture_worst:21.74,perimeter_worst:93.63,area_worst:624.1,smoothness_worst:.1475,compactness_worst:.1979,concavity_worst:.1423,concave_points_worst:.08045,symmetry_worst:.3071,fractal_dimension_worst:.08557,"":""},{id:917092,diagnosis:"B",radius_mean:9.295,texture_mean:13.9,perimeter_mean:59.96,area_mean:257.8,smoothness_mean:.1371,compactness_mean:.1225,concavity_mean:.03332,concave_points_mean:.02421,symmetry_mean:.2197,fractal_dimension_mean:.07696,radius_se:.3538,texture_se:1.13,perimeter_se:2.388,area_se:19.63,smoothness_se:.01546,compactness_se:.0254,concavity_se:.02197,concave_points_se:.0158,symmetry_se:.03997,fractal_dimension_se:.003901,radius_worst:10.57,texture_worst:17.84,perimeter_worst:67.84,area_worst:326.6,smoothness_worst:.185,compactness_worst:.2097,concavity_worst:.09996,concave_points_worst:.07262,symmetry_worst:.3681,fractal_dimension_worst:.08982,"":""},{id:91762702,diagnosis:"M",radius_mean:24.63,texture_mean:21.6,perimeter_mean:165.5,area_mean:1841,smoothness_mean:.103,compactness_mean:.2106,concavity_mean:.231,concave_points_mean:.1471,symmetry_mean:.1991,fractal_dimension_mean:.06739,radius_se:.9915,texture_se:.9004,perimeter_se:7.05,area_se:139.9,smoothness_se:.004989,compactness_se:.03212,concavity_se:.03571,concave_points_se:.01597,symmetry_se:.01879,fractal_dimension_se:.00476,radius_worst:29.92,texture_worst:26.93,perimeter_worst:205.7,area_worst:2642,smoothness_worst:.1342,compactness_worst:.4188,concavity_worst:.4658,concave_points_worst:.2475,symmetry_worst:.3157,fractal_dimension_worst:.09671,"":""},{id:91789,diagnosis:"B",radius_mean:11.26,texture_mean:19.83,perimeter_mean:71.3,area_mean:388.1,smoothness_mean:.08511,compactness_mean:.04413,concavity_mean:.005067,concave_points_mean:.005664,symmetry_mean:.1637,fractal_dimension_mean:.06343,radius_se:.1344,texture_se:1.083,perimeter_se:.9812,area_se:9.332,smoothness_se:.0042,compactness_se:.0059,concavity_se:.003846,concave_points_se:.004065,symmetry_se:.01487,fractal_dimension_se:.002295,radius_worst:11.93,texture_worst:26.43,perimeter_worst:76.38,area_worst:435.9,smoothness_worst:.1108,compactness_worst:.07723,concavity_worst:.02533,concave_points_worst:.02832,symmetry_worst:.2557,fractal_dimension_worst:.07613,"":""},{id:917896,diagnosis:"B",radius_mean:13.71,texture_mean:18.68,perimeter_mean:88.73,area_mean:571,smoothness_mean:.09916,compactness_mean:.107,concavity_mean:.05385,concave_points_mean:.03783,symmetry_mean:.1714,fractal_dimension_mean:.06843,radius_se:.3191,texture_se:1.249,perimeter_se:2.284,area_se:26.45,smoothness_se:.006739,compactness_se:.02251,concavity_se:.02086,concave_points_se:.01352,symmetry_se:.0187,fractal_dimension_se:.003747,radius_worst:15.11,texture_worst:25.63,perimeter_worst:99.43,area_worst:701.9,smoothness_worst:.1425,compactness_worst:.2566,concavity_worst:.1935,concave_points_worst:.1284,symmetry_worst:.2849,fractal_dimension_worst:.09031,"":""},{id:917897,diagnosis:"B",radius_mean:9.847,texture_mean:15.68,perimeter_mean:63,area_mean:293.2,smoothness_mean:.09492,compactness_mean:.08419,concavity_mean:.0233,concave_points_mean:.02416,symmetry_mean:.1387,fractal_dimension_mean:.06891,radius_se:.2498,texture_se:1.216,perimeter_se:1.976,area_se:15.24,smoothness_se:.008732,compactness_se:.02042,concavity_se:.01062,concave_points_se:.006801,symmetry_se:.01824,fractal_dimension_se:.003494,radius_worst:11.24,texture_worst:22.99,perimeter_worst:74.32,area_worst:376.5,smoothness_worst:.1419,compactness_worst:.2243,concavity_worst:.08434,concave_points_worst:.06528,symmetry_worst:.2502,fractal_dimension_worst:.09209,"":""},{id:91805,diagnosis:"B",radius_mean:8.571,texture_mean:13.1,perimeter_mean:54.53,area_mean:221.3,smoothness_mean:.1036,compactness_mean:.07632,concavity_mean:.02565,concave_points_mean:.0151,symmetry_mean:.1678,fractal_dimension_mean:.07126,radius_se:.1267,texture_se:.6793,perimeter_se:1.069,area_se:7.254,smoothness_se:.007897,compactness_se:.01762,concavity_se:.01801,concave_points_se:.00732,symmetry_se:.01592,fractal_dimension_se:.003925,radius_worst:9.473,texture_worst:18.45,perimeter_worst:63.3,area_worst:275.6,smoothness_worst:.1641,compactness_worst:.2235,concavity_worst:.1754,concave_points_worst:.08512,symmetry_worst:.2983,fractal_dimension_worst:.1049,"":""},{id:91813701,diagnosis:"B",radius_mean:13.46,texture_mean:18.75,perimeter_mean:87.44,area_mean:551.1,smoothness_mean:.1075,compactness_mean:.1138,concavity_mean:.04201,concave_points_mean:.03152,symmetry_mean:.1723,fractal_dimension_mean:.06317,radius_se:.1998,texture_se:.6068,perimeter_se:1.443,area_se:16.07,smoothness_se:.004413,compactness_se:.01443,concavity_se:.01509,concave_points_se:.007369,symmetry_se:.01354,fractal_dimension_se:.001787,radius_worst:15.35,texture_worst:25.16,perimeter_worst:101.9,area_worst:719.8,smoothness_worst:.1624,compactness_worst:.3124,concavity_worst:.2654,concave_points_worst:.1427,symmetry_worst:.3518,fractal_dimension_worst:.08665,"":""},{id:91813702,diagnosis:"B",radius_mean:12.34,texture_mean:12.27,perimeter_mean:78.94,area_mean:468.5,smoothness_mean:.09003,compactness_mean:.06307,concavity_mean:.02958,concave_points_mean:.02647,symmetry_mean:.1689,fractal_dimension_mean:.05808,radius_se:.1166,texture_se:.4957,perimeter_se:.7714,area_se:8.955,smoothness_se:.003681,compactness_se:.009169,concavity_se:.008732,concave_points_se:.00574,symmetry_se:.01129,fractal_dimension_se:.001366,radius_worst:13.61,texture_worst:19.27,perimeter_worst:87.22,area_worst:564.9,smoothness_worst:.1292,compactness_worst:.2074,concavity_worst:.1791,concave_points_worst:.107,symmetry_worst:.311,fractal_dimension_worst:.07592,"":""},{id:918192,diagnosis:"B",radius_mean:13.94,texture_mean:13.17,perimeter_mean:90.31,area_mean:594.2,smoothness_mean:.1248,compactness_mean:.09755,concavity_mean:.101,concave_points_mean:.06615,symmetry_mean:.1976,fractal_dimension_mean:.06457,radius_se:.5461,texture_se:2.635,perimeter_se:4.091,area_se:44.74,smoothness_se:.01004,compactness_se:.03247,concavity_se:.04763,concave_points_se:.02853,symmetry_se:.01715,fractal_dimension_se:.005528,radius_worst:14.62,texture_worst:15.38,perimeter_worst:94.52,area_worst:653.3,smoothness_worst:.1394,compactness_worst:.1364,concavity_worst:.1559,concave_points_worst:.1015,symmetry_worst:.216,fractal_dimension_worst:.07253,"":""},{id:918465,diagnosis:"B",radius_mean:12.07,texture_mean:13.44,perimeter_mean:77.83,area_mean:445.2,smoothness_mean:.11,compactness_mean:.09009,concavity_mean:.03781,concave_points_mean:.02798,symmetry_mean:.1657,fractal_dimension_mean:.06608,radius_se:.2513,texture_se:.504,perimeter_se:1.714,area_se:18.54,smoothness_se:.007327,compactness_se:.01153,concavity_se:.01798,concave_points_se:.007986,symmetry_se:.01962,fractal_dimension_se:.002234,radius_worst:13.45,texture_worst:15.77,perimeter_worst:86.92,area_worst:549.9,smoothness_worst:.1521,compactness_worst:.1632,concavity_worst:.1622,concave_points_worst:.07393,symmetry_worst:.2781,fractal_dimension_worst:.08052,"":""},{id:91858,diagnosis:"B",radius_mean:11.75,texture_mean:17.56,perimeter_mean:75.89,area_mean:422.9,smoothness_mean:.1073,compactness_mean:.09713,concavity_mean:.05282,concave_points_mean:.0444,symmetry_mean:.1598,fractal_dimension_mean:.06677,radius_se:.4384,texture_se:1.907,perimeter_se:3.149,area_se:30.66,smoothness_se:.006587,compactness_se:.01815,concavity_se:.01737,concave_points_se:.01316,symmetry_se:.01835,fractal_dimension_se:.002318,radius_worst:13.5,texture_worst:27.98,perimeter_worst:88.52,area_worst:552.3,smoothness_worst:.1349,compactness_worst:.1854,concavity_worst:.1366,concave_points_worst:.101,symmetry_worst:.2478,fractal_dimension_worst:.07757,"":""},{id:91903901,diagnosis:"B",radius_mean:11.67,texture_mean:20.02,perimeter_mean:75.21,area_mean:416.2,smoothness_mean:.1016,compactness_mean:.09453,concavity_mean:.042,concave_points_mean:.02157,symmetry_mean:.1859,fractal_dimension_mean:.06461,radius_se:.2067,texture_se:.8745,perimeter_se:1.393,area_se:15.34,smoothness_se:.005251,compactness_se:.01727,concavity_se:.0184,concave_points_se:.005298,symmetry_se:.01449,fractal_dimension_se:.002671,radius_worst:13.35,texture_worst:28.81,perimeter_worst:87,area_worst:550.6,smoothness_worst:.155,compactness_worst:.2964,concavity_worst:.2758,concave_points_worst:.0812,symmetry_worst:.3206,fractal_dimension_worst:.0895,"":""},{id:91903902,diagnosis:"B",radius_mean:13.68,texture_mean:16.33,perimeter_mean:87.76,area_mean:575.5,smoothness_mean:.09277,compactness_mean:.07255,concavity_mean:.01752,concave_points_mean:.0188,symmetry_mean:.1631,fractal_dimension_mean:.06155,radius_se:.2047,texture_se:.4801,perimeter_se:1.373,area_se:17.25,smoothness_se:.003828,compactness_se:.007228,concavity_se:.007078,concave_points_se:.005077,symmetry_se:.01054,fractal_dimension_se:.001697,radius_worst:15.85,texture_worst:20.2,perimeter_worst:101.6,area_worst:773.4,smoothness_worst:.1264,compactness_worst:.1564,concavity_worst:.1206,concave_points_worst:.08704,symmetry_worst:.2806,fractal_dimension_worst:.07782,"":""},{id:91930402,diagnosis:"M",radius_mean:20.47,texture_mean:20.67,perimeter_mean:134.7,area_mean:1299,smoothness_mean:.09156,compactness_mean:.1313,concavity_mean:.1523,concave_points_mean:.1015,symmetry_mean:.2166,fractal_dimension_mean:.05419,radius_se:.8336,texture_se:1.736,perimeter_se:5.168,area_se:100.4,smoothness_se:.004938,compactness_se:.03089,concavity_se:.04093,concave_points_se:.01699,symmetry_se:.02816,fractal_dimension_se:.002719,radius_worst:23.23,texture_worst:27.15,perimeter_worst:152,area_worst:1645,smoothness_worst:.1097,compactness_worst:.2534,concavity_worst:.3092,concave_points_worst:.1613,symmetry_worst:.322,fractal_dimension_worst:.06386,"":""},{id:919537,diagnosis:"B",radius_mean:10.96,texture_mean:17.62,perimeter_mean:70.79,area_mean:365.6,smoothness_mean:.09687,compactness_mean:.09752,concavity_mean:.05263,concave_points_mean:.02788,symmetry_mean:.1619,fractal_dimension_mean:.06408,radius_se:.1507,texture_se:1.583,perimeter_se:1.165,area_se:10.09,smoothness_se:.009501,compactness_se:.03378,concavity_se:.04401,concave_points_se:.01346,symmetry_se:.01322,fractal_dimension_se:.003534,radius_worst:11.62,texture_worst:26.51,perimeter_worst:76.43,area_worst:407.5,smoothness_worst:.1428,compactness_worst:.251,concavity_worst:.2123,concave_points_worst:.09861,symmetry_worst:.2289,fractal_dimension_worst:.08278,"":""},{id:919555,diagnosis:"M",radius_mean:20.55,texture_mean:20.86,perimeter_mean:137.8,area_mean:1308,smoothness_mean:.1046,compactness_mean:.1739,concavity_mean:.2085,concave_points_mean:.1322,symmetry_mean:.2127,fractal_dimension_mean:.06251,radius_se:.6986,texture_se:.9901,perimeter_se:4.706,area_se:87.78,smoothness_se:.004578,compactness_se:.02616,concavity_se:.04005,concave_points_se:.01421,symmetry_se:.01948,fractal_dimension_se:.002689,radius_worst:24.3,texture_worst:25.48,perimeter_worst:160.2,area_worst:1809,smoothness_worst:.1268,compactness_worst:.3135,concavity_worst:.4433,concave_points_worst:.2148,symmetry_worst:.3077,fractal_dimension_worst:.07569,"":""},{id:91979701,diagnosis:"M",radius_mean:14.27,texture_mean:22.55,perimeter_mean:93.77,area_mean:629.8,smoothness_mean:.1038,compactness_mean:.1154,concavity_mean:.1463,concave_points_mean:.06139,symmetry_mean:.1926,fractal_dimension_mean:.05982,radius_se:.2027,texture_se:1.851,perimeter_se:1.895,area_se:18.54,smoothness_se:.006113,compactness_se:.02583,concavity_se:.04645,concave_points_se:.01276,symmetry_se:.01451,fractal_dimension_se:.003756,radius_worst:15.29,texture_worst:34.27,perimeter_worst:104.3,area_worst:728.3,smoothness_worst:.138,compactness_worst:.2733,concavity_worst:.4234,concave_points_worst:.1362,symmetry_worst:.2698,fractal_dimension_worst:.08351,"":""},{id:919812,diagnosis:"B",radius_mean:11.69,texture_mean:24.44,perimeter_mean:76.37,area_mean:406.4,smoothness_mean:.1236,compactness_mean:.1552,concavity_mean:.04515,concave_points_mean:.04531,symmetry_mean:.2131,fractal_dimension_mean:.07405,radius_se:.2957,texture_se:1.978,perimeter_se:2.158,area_se:20.95,smoothness_se:.01288,compactness_se:.03495,concavity_se:.01865,concave_points_se:.01766,symmetry_se:.0156,fractal_dimension_se:.005824,radius_worst:12.98,texture_worst:32.19,perimeter_worst:86.12,area_worst:487.7,smoothness_worst:.1768,compactness_worst:.3251,concavity_worst:.1395,concave_points_worst:.1308,symmetry_worst:.2803,fractal_dimension_worst:.0997,"":""},{id:921092,diagnosis:"B",radius_mean:7.729,texture_mean:25.49,perimeter_mean:47.98,area_mean:178.8,smoothness_mean:.08098,compactness_mean:.04878,concavity_mean:0,concave_points_mean:0,symmetry_mean:.187,fractal_dimension_mean:.07285,radius_se:.3777,texture_se:1.462,perimeter_se:2.492,area_se:19.14,smoothness_se:.01266,compactness_se:.009692,concavity_se:0,concave_points_se:0,symmetry_se:.02882,fractal_dimension_se:.006872,radius_worst:9.077,texture_worst:30.92,perimeter_worst:57.17,area_worst:248,smoothness_worst:.1256,compactness_worst:.0834,concavity_worst:0,concave_points_worst:0,symmetry_worst:.3058,fractal_dimension_worst:.09938,"":""},{id:921362,diagnosis:"B",radius_mean:7.691,texture_mean:25.44,perimeter_mean:48.34,area_mean:170.4,smoothness_mean:.08668,compactness_mean:.1199,concavity_mean:.09252,concave_points_mean:.01364,symmetry_mean:.2037,fractal_dimension_mean:.07751,radius_se:.2196,texture_se:1.479,perimeter_se:1.445,area_se:11.73,smoothness_se:.01547,compactness_se:.06457,concavity_se:.09252,concave_points_se:.01364,symmetry_se:.02105,fractal_dimension_se:.007551,radius_worst:8.678,texture_worst:31.89,perimeter_worst:54.49,area_worst:223.6,smoothness_worst:.1596,compactness_worst:.3064,concavity_worst:.3393,concave_points_worst:.05,symmetry_worst:.279,fractal_dimension_worst:.1066,"":""},{id:921385,diagnosis:"B",radius_mean:11.54,texture_mean:14.44,perimeter_mean:74.65,area_mean:402.9,smoothness_mean:.09984,compactness_mean:.112,concavity_mean:.06737,concave_points_mean:.02594,symmetry_mean:.1818,fractal_dimension_mean:.06782,radius_se:.2784,texture_se:1.768,perimeter_se:1.628,area_se:20.86,smoothness_se:.01215,compactness_se:.04112,concavity_se:.05553,concave_points_se:.01494,symmetry_se:.0184,fractal_dimension_se:.005512,radius_worst:12.26,texture_worst:19.68,perimeter_worst:78.78,area_worst:457.8,smoothness_worst:.1345,compactness_worst:.2118,concavity_worst:.1797,concave_points_worst:.06918,symmetry_worst:.2329,fractal_dimension_worst:.08134,"":""},{id:921386,diagnosis:"B",radius_mean:14.47,texture_mean:24.99,perimeter_mean:95.81,area_mean:656.4,smoothness_mean:.08837,compactness_mean:.123,concavity_mean:.1009,concave_points_mean:.0389,symmetry_mean:.1872,fractal_dimension_mean:.06341,radius_se:.2542,texture_se:1.079,perimeter_se:2.615,area_se:23.11,smoothness_se:.007138,compactness_se:.04653,concavity_se:.03829,concave_points_se:.01162,symmetry_se:.02068,fractal_dimension_se:.006111,radius_worst:16.22,texture_worst:31.73,perimeter_worst:113.5,area_worst:808.9,smoothness_worst:.134,compactness_worst:.4202,concavity_worst:.404,concave_points_worst:.1205,symmetry_worst:.3187,fractal_dimension_worst:.1023,"":""},{id:921644,diagnosis:"B",radius_mean:14.74,texture_mean:25.42,perimeter_mean:94.7,area_mean:668.6,smoothness_mean:.08275,compactness_mean:.07214,concavity_mean:.04105,concave_points_mean:.03027,symmetry_mean:.184,fractal_dimension_mean:.0568,radius_se:.3031,texture_se:1.385,perimeter_se:2.177,area_se:27.41,smoothness_se:.004775,compactness_se:.01172,concavity_se:.01947,concave_points_se:.01269,symmetry_se:.0187,fractal_dimension_se:.002626,radius_worst:16.51,texture_worst:32.29,perimeter_worst:107.4,area_worst:826.4,smoothness_worst:.106,compactness_worst:.1376,concavity_worst:.1611,concave_points_worst:.1095,symmetry_worst:.2722,fractal_dimension_worst:.06956,"":""},{id:922296,diagnosis:"B",radius_mean:13.21,texture_mean:28.06,perimeter_mean:84.88,area_mean:538.4,smoothness_mean:.08671,compactness_mean:.06877,concavity_mean:.02987,concave_points_mean:.03275,symmetry_mean:.1628,fractal_dimension_mean:.05781,radius_se:.2351,texture_se:1.597,perimeter_se:1.539,area_se:17.85,smoothness_se:.004973,compactness_se:.01372,concavity_se:.01498,concave_points_se:.009117,symmetry_se:.01724,fractal_dimension_se:.001343,radius_worst:14.37,texture_worst:37.17,perimeter_worst:92.48,area_worst:629.6,smoothness_worst:.1072,compactness_worst:.1381,concavity_worst:.1062,concave_points_worst:.07958,symmetry_worst:.2473,fractal_dimension_worst:.06443,"":""},{id:922297,diagnosis:"B",radius_mean:13.87,texture_mean:20.7,perimeter_mean:89.77,area_mean:584.8,smoothness_mean:.09578,compactness_mean:.1018,concavity_mean:.03688,concave_points_mean:.02369,symmetry_mean:.162,fractal_dimension_mean:.06688,radius_se:.272,texture_se:1.047,perimeter_se:2.076,area_se:23.12,smoothness_se:.006298,compactness_se:.02172,concavity_se:.02615,concave_points_se:.009061,symmetry_se:.0149,fractal_dimension_se:.003599,radius_worst:15.05,texture_worst:24.75,perimeter_worst:99.17,area_worst:688.6,smoothness_worst:.1264,compactness_worst:.2037,concavity_worst:.1377,concave_points_worst:.06845,symmetry_worst:.2249,fractal_dimension_worst:.08492,"":""},{id:922576,diagnosis:"B",radius_mean:13.62,texture_mean:23.23,perimeter_mean:87.19,area_mean:573.2,smoothness_mean:.09246,compactness_mean:.06747,concavity_mean:.02974,concave_points_mean:.02443,symmetry_mean:.1664,fractal_dimension_mean:.05801,radius_se:.346,texture_se:1.336,perimeter_se:2.066,area_se:31.24,smoothness_se:.005868,compactness_se:.02099,concavity_se:.02021,concave_points_se:.009064,symmetry_se:.02087,fractal_dimension_se:.002583,radius_worst:15.35,texture_worst:29.09,perimeter_worst:97.58,area_worst:729.8,smoothness_worst:.1216,compactness_worst:.1517,concavity_worst:.1049,concave_points_worst:.07174,symmetry_worst:.2642,fractal_dimension_worst:.06953,"":""},{id:922577,diagnosis:"B",radius_mean:10.32,texture_mean:16.35,perimeter_mean:65.31,area_mean:324.9,smoothness_mean:.09434,compactness_mean:.04994,concavity_mean:.01012,concave_points_mean:.005495,symmetry_mean:.1885,fractal_dimension_mean:.06201,radius_se:.2104,texture_se:.967,perimeter_se:1.356,area_se:12.97,smoothness_se:.007086,compactness_se:.007247,concavity_se:.01012,concave_points_se:.005495,symmetry_se:.0156,fractal_dimension_se:.002606,radius_worst:11.25,texture_worst:21.77,perimeter_worst:71.12,area_worst:384.9,smoothness_worst:.1285,compactness_worst:.08842,concavity_worst:.04384,concave_points_worst:.02381,symmetry_worst:.2681,fractal_dimension_worst:.07399,"":""},{id:922840,diagnosis:"B",radius_mean:10.26,texture_mean:16.58,perimeter_mean:65.85,area_mean:320.8,smoothness_mean:.08877,compactness_mean:.08066,concavity_mean:.04358,concave_points_mean:.02438,symmetry_mean:.1669,fractal_dimension_mean:.06714,radius_se:.1144,texture_se:1.023,perimeter_se:.9887,area_se:7.326,smoothness_se:.01027,compactness_se:.03084,concavity_se:.02613,concave_points_se:.01097,symmetry_se:.02277,fractal_dimension_se:.00589,radius_worst:10.83,texture_worst:22.04,perimeter_worst:71.08,area_worst:357.4,smoothness_worst:.1461,compactness_worst:.2246,concavity_worst:.1783,concave_points_worst:.08333,symmetry_worst:.2691,fractal_dimension_worst:.09479,"":""},{id:923169,diagnosis:"B",radius_mean:9.683,texture_mean:19.34,perimeter_mean:61.05,area_mean:285.7,smoothness_mean:.08491,compactness_mean:.0503,concavity_mean:.02337,concave_points_mean:.009615,symmetry_mean:.158,fractal_dimension_mean:.06235,radius_se:.2957,texture_se:1.363,perimeter_se:2.054,area_se:18.24,smoothness_se:.00744,compactness_se:.01123,concavity_se:.02337,concave_points_se:.009615,symmetry_se:.02203,fractal_dimension_se:.004154,radius_worst:10.93,texture_worst:25.59,perimeter_worst:69.1,area_worst:364.2,smoothness_worst:.1199,compactness_worst:.09546,concavity_worst:.0935,concave_points_worst:.03846,symmetry_worst:.2552,fractal_dimension_worst:.0792,"":""},{id:923465,diagnosis:"B",radius_mean:10.82,texture_mean:24.21,perimeter_mean:68.89,area_mean:361.6,smoothness_mean:.08192,compactness_mean:.06602,concavity_mean:.01548,concave_points_mean:.00816,symmetry_mean:.1976,fractal_dimension_mean:.06328,radius_se:.5196,texture_se:1.918,perimeter_se:3.564,area_se:33,smoothness_se:.008263,compactness_se:.0187,concavity_se:.01277,concave_points_se:.005917,symmetry_se:.02466,fractal_dimension_se:.002977,radius_worst:13.03,texture_worst:31.45,perimeter_worst:83.9,area_worst:505.6,smoothness_worst:.1204,compactness_worst:.1633,concavity_worst:.06194,concave_points_worst:.03264,symmetry_worst:.3059,fractal_dimension_worst:.07626,"":""},{id:923748,diagnosis:"B",radius_mean:10.86,texture_mean:21.48,perimeter_mean:68.51,area_mean:360.5,smoothness_mean:.07431,compactness_mean:.04227,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1661,fractal_dimension_mean:.05948,radius_se:.3163,texture_se:1.304,perimeter_se:2.115,area_se:20.67,smoothness_se:.009579,compactness_se:.01104,concavity_se:0,concave_points_se:0,symmetry_se:.03004,fractal_dimension_se:.002228,radius_worst:11.66,texture_worst:24.77,perimeter_worst:74.08,area_worst:412.3,smoothness_worst:.1001,compactness_worst:.07348,concavity_worst:0,concave_points_worst:0,symmetry_worst:.2458,fractal_dimension_worst:.06592,"":""},{id:923780,diagnosis:"B",radius_mean:11.13,texture_mean:22.44,perimeter_mean:71.49,area_mean:378.4,smoothness_mean:.09566,compactness_mean:.08194,concavity_mean:.04824,concave_points_mean:.02257,symmetry_mean:.203,fractal_dimension_mean:.06552,radius_se:.28,texture_se:1.467,perimeter_se:1.994,area_se:17.85,smoothness_se:.003495,compactness_se:.03051,concavity_se:.03445,concave_points_se:.01024,symmetry_se:.02912,fractal_dimension_se:.004723,radius_worst:12.02,texture_worst:28.26,perimeter_worst:77.8,area_worst:436.6,smoothness_worst:.1087,compactness_worst:.1782,concavity_worst:.1564,concave_points_worst:.06413,symmetry_worst:.3169,fractal_dimension_worst:.08032,"":""},{id:924084,diagnosis:"B",radius_mean:12.77,texture_mean:29.43,perimeter_mean:81.35,area_mean:507.9,smoothness_mean:.08276,compactness_mean:.04234,concavity_mean:.01997,concave_points_mean:.01499,symmetry_mean:.1539,fractal_dimension_mean:.05637,radius_se:.2409,texture_se:1.367,perimeter_se:1.477,area_se:18.76,smoothness_se:.008835,compactness_se:.01233,concavity_se:.01328,concave_points_se:.009305,symmetry_se:.01897,fractal_dimension_se:.001726,radius_worst:13.87,texture_worst:36,perimeter_worst:88.1,area_worst:594.7,smoothness_worst:.1234,compactness_worst:.1064,concavity_worst:.08653,concave_points_worst:.06498,symmetry_worst:.2407,fractal_dimension_worst:.06484,"":""},{id:924342,diagnosis:"B",radius_mean:9.333,texture_mean:21.94,perimeter_mean:59.01,area_mean:264,smoothness_mean:.0924,compactness_mean:.05605,concavity_mean:.03996,concave_points_mean:.01282,symmetry_mean:.1692,fractal_dimension_mean:.06576,radius_se:.3013,texture_se:1.879,perimeter_se:2.121,area_se:17.86,smoothness_se:.01094,compactness_se:.01834,concavity_se:.03996,concave_points_se:.01282,symmetry_se:.03759,fractal_dimension_se:.004623,radius_worst:9.845,texture_worst:25.05,perimeter_worst:62.86,area_worst:295.8,smoothness_worst:.1103,compactness_worst:.08298,concavity_worst:.07993,concave_points_worst:.02564,symmetry_worst:.2435,fractal_dimension_worst:.07393,"":""},{id:924632,diagnosis:"B",radius_mean:12.88,texture_mean:28.92,perimeter_mean:82.5,area_mean:514.3,smoothness_mean:.08123,compactness_mean:.05824,concavity_mean:.06195,concave_points_mean:.02343,symmetry_mean:.1566,fractal_dimension_mean:.05708,radius_se:.2116,texture_se:1.36,perimeter_se:1.502,area_se:16.83,smoothness_se:.008412,compactness_se:.02153,concavity_se:.03898,concave_points_se:.00762,symmetry_se:.01695,fractal_dimension_se:.002801,radius_worst:13.89,texture_worst:35.74,perimeter_worst:88.84,area_worst:595.7,smoothness_worst:.1227,compactness_worst:.162,concavity_worst:.2439,concave_points_worst:.06493,symmetry_worst:.2372,fractal_dimension_worst:.07242,"":""},{id:924934,diagnosis:"B",radius_mean:10.29,texture_mean:27.61,perimeter_mean:65.67,area_mean:321.4,smoothness_mean:.0903,compactness_mean:.07658,concavity_mean:.05999,concave_points_mean:.02738,symmetry_mean:.1593,fractal_dimension_mean:.06127,radius_se:.2199,texture_se:2.239,perimeter_se:1.437,area_se:14.46,smoothness_se:.01205,compactness_se:.02736,concavity_se:.04804,concave_points_se:.01721,symmetry_se:.01843,fractal_dimension_se:.004938,radius_worst:10.84,texture_worst:34.91,perimeter_worst:69.57,area_worst:357.6,smoothness_worst:.1384,compactness_worst:.171,concavity_worst:.2,concave_points_worst:.09127,symmetry_worst:.2226,fractal_dimension_worst:.08283,"":""},{id:924964,diagnosis:"B",radius_mean:10.16,texture_mean:19.59,perimeter_mean:64.73,area_mean:311.7,smoothness_mean:.1003,compactness_mean:.07504,concavity_mean:.005025,concave_points_mean:.01116,symmetry_mean:.1791,fractal_dimension_mean:.06331,radius_se:.2441,texture_se:2.09,perimeter_se:1.648,area_se:16.8,smoothness_se:.01291,compactness_se:.02222,concavity_se:.004174,concave_points_se:.007082,symmetry_se:.02572,fractal_dimension_se:.002278,radius_worst:10.65,texture_worst:22.88,perimeter_worst:67.88,area_worst:347.3,smoothness_worst:.1265,compactness_worst:.12,concavity_worst:.01005,concave_points_worst:.02232,symmetry_worst:.2262,fractal_dimension_worst:.06742,"":""},{id:925236,diagnosis:"B",radius_mean:9.423,texture_mean:27.88,perimeter_mean:59.26,area_mean:271.3,smoothness_mean:.08123,compactness_mean:.04971,concavity_mean:0,concave_points_mean:0,symmetry_mean:.1742,fractal_dimension_mean:.06059,radius_se:.5375,texture_se:2.927,perimeter_se:3.618,area_se:29.11,smoothness_se:.01159,compactness_se:.01124,concavity_se:0,concave_points_se:0,symmetry_se:.03004,fractal_dimension_se:.003324,radius_worst:10.49,texture_worst:34.24,perimeter_worst:66.5,area_worst:330.6,smoothness_worst:.1073,compactness_worst:.07158,concavity_worst:0,concave_points_worst:0,symmetry_worst:.2475,fractal_dimension_worst:.06969,"":""},{id:925277,diagnosis:"B",radius_mean:14.59,texture_mean:22.68,perimeter_mean:96.39,area_mean:657.1,smoothness_mean:.08473,compactness_mean:.133,concavity_mean:.1029,concave_points_mean:.03736,symmetry_mean:.1454,fractal_dimension_mean:.06147,radius_se:.2254,texture_se:1.108,perimeter_se:2.224,area_se:19.54,smoothness_se:.004242,compactness_se:.04639,concavity_se:.06578,concave_points_se:.01606,symmetry_se:.01638,fractal_dimension_se:.004406,radius_worst:15.48,texture_worst:27.27,perimeter_worst:105.9,area_worst:733.5,smoothness_worst:.1026,compactness_worst:.3171,concavity_worst:.3662,concave_points_worst:.1105,symmetry_worst:.2258,fractal_dimension_worst:.08004,"":""},{id:925291,diagnosis:"B",radius_mean:11.51,texture_mean:23.93,perimeter_mean:74.52,area_mean:403.5,smoothness_mean:.09261,compactness_mean:.1021,concavity_mean:.1112,concave_points_mean:.04105,symmetry_mean:.1388,fractal_dimension_mean:.0657,radius_se:.2388,texture_se:2.904,perimeter_se:1.936,area_se:16.97,smoothness_se:.0082,compactness_se:.02982,concavity_se:.05738,concave_points_se:.01267,symmetry_se:.01488,fractal_dimension_se:.004738,radius_worst:12.48,texture_worst:37.16,perimeter_worst:82.28,area_worst:474.2,smoothness_worst:.1298,compactness_worst:.2517,concavity_worst:.363,concave_points_worst:.09653,symmetry_worst:.2112,fractal_dimension_worst:.08732,"":""},{id:925292,diagnosis:"B",radius_mean:14.05,texture_mean:27.15,perimeter_mean:91.38,area_mean:600.4,smoothness_mean:.09929,compactness_mean:.1126,concavity_mean:.04462,concave_points_mean:.04304,symmetry_mean:.1537,fractal_dimension_mean:.06171,radius_se:.3645,texture_se:1.492,perimeter_se:2.888,area_se:29.84,smoothness_se:.007256,compactness_se:.02678,concavity_se:.02071,concave_points_se:.01626,symmetry_se:.0208,fractal_dimension_se:.005304,radius_worst:15.3,texture_worst:33.17,perimeter_worst:100.2,area_worst:706.7,smoothness_worst:.1241,compactness_worst:.2264,concavity_worst:.1326,concave_points_worst:.1048,symmetry_worst:.225,fractal_dimension_worst:.08321,"":""},{id:925311,diagnosis:"B",radius_mean:11.2,texture_mean:29.37,perimeter_mean:70.67,area_mean:386,smoothness_mean:.07449,compactness_mean:.03558,concavity_mean:0,concave_points_mean:0,symmetry_mean:.106,fractal_dimension_mean:.05502,radius_se:.3141,texture_se:3.896,perimeter_se:2.041,area_se:22.81,smoothness_se:.007594,compactness_se:.008878,concavity_se:0,concave_points_se:0,symmetry_se:.01989,fractal_dimension_se:.001773,radius_worst:11.92,texture_worst:38.3,perimeter_worst:75.19,area_worst:439.6,smoothness_worst:.09267,compactness_worst:.05494,concavity_worst:0,concave_points_worst:0,symmetry_worst:.1566,fractal_dimension_worst:.05905,"":""},{id:925622,diagnosis:"M",radius_mean:15.22,texture_mean:30.62,perimeter_mean:103.4,area_mean:716.9,smoothness_mean:.1048,compactness_mean:.2087,concavity_mean:.255,concave_points_mean:.09429,symmetry_mean:.2128,fractal_dimension_mean:.07152,radius_se:.2602,texture_se:1.205,perimeter_se:2.362,area_se:22.65,smoothness_se:.004625,compactness_se:.04844,concavity_se:.07359,concave_points_se:.01608,symmetry_se:.02137,fractal_dimension_se:.006142,radius_worst:17.52,texture_worst:42.79,perimeter_worst:128.7,area_worst:915,smoothness_worst:.1417,compactness_worst:.7917,concavity_worst:1.17,concave_points_worst:.2356,symmetry_worst:.4089,fractal_dimension_worst:.1409,"":""},{id:926125,diagnosis:"M",radius_mean:20.92,texture_mean:25.09,perimeter_mean:143,area_mean:1347,smoothness_mean:.1099,compactness_mean:.2236,concavity_mean:.3174,concave_points_mean:.1474,symmetry_mean:.2149,fractal_dimension_mean:.06879,radius_se:.9622,texture_se:1.026,perimeter_se:8.758,area_se:118.8,smoothness_se:.006399,compactness_se:.0431,concavity_se:.07845,concave_points_se:.02624,symmetry_se:.02057,fractal_dimension_se:.006213,radius_worst:24.29,texture_worst:29.41,perimeter_worst:179.1,area_worst:1819,smoothness_worst:.1407,compactness_worst:.4186,concavity_worst:.6599,concave_points_worst:.2542,symmetry_worst:.2929,fractal_dimension_worst:.09873,"":""},{id:926424,diagnosis:"M",radius_mean:21.56,texture_mean:22.39,perimeter_mean:142,area_mean:1479,smoothness_mean:.111,compactness_mean:.1159,concavity_mean:.2439,concave_points_mean:.1389,symmetry_mean:.1726,fractal_dimension_mean:.05623,radius_se:1.176,texture_se:1.256,perimeter_se:7.673,area_se:158.7,smoothness_se:.0103,compactness_se:.02891,concavity_se:.05198,concave_points_se:.02454,symmetry_se:.01114,fractal_dimension_se:.004239,radius_worst:25.45,texture_worst:26.4,perimeter_worst:166.1,area_worst:2027,smoothness_worst:.141,compactness_worst:.2113,concavity_worst:.4107,concave_points_worst:.2216,symmetry_worst:.206,fractal_dimension_worst:.07115,"":""},{id:926682,diagnosis:"M",radius_mean:20.13,texture_mean:28.25,perimeter_mean:131.2,area_mean:1261,smoothness_mean:.0978,compactness_mean:.1034,concavity_mean:.144,concave_points_mean:.09791,symmetry_mean:.1752,fractal_dimension_mean:.05533,radius_se:.7655,texture_se:2.463,perimeter_se:5.203,area_se:99.04,smoothness_se:.005769,compactness_se:.02423,concavity_se:.0395,concave_points_se:.01678,symmetry_se:.01898,fractal_dimension_se:.002498,radius_worst:23.69,texture_worst:38.25,perimeter_worst:155,area_worst:1731,smoothness_worst:.1166,compactness_worst:.1922,concavity_worst:.3215,concave_points_worst:.1628,symmetry_worst:.2572,fractal_dimension_worst:.06637,"":""},{id:926954,diagnosis:"M",radius_mean:16.6,texture_mean:28.08,perimeter_mean:108.3,area_mean:858.1,smoothness_mean:.08455,compactness_mean:.1023,concavity_mean:.09251,concave_points_mean:.05302,symmetry_mean:.159,fractal_dimension_mean:.05648,radius_se:.4564,texture_se:1.075,perimeter_se:3.425,area_se:48.55,smoothness_se:.005903,compactness_se:.03731,concavity_se:.0473,concave_points_se:.01557,symmetry_se:.01318,fractal_dimension_se:.003892,radius_worst:18.98,texture_worst:34.12,perimeter_worst:126.7,area_worst:1124,smoothness_worst:.1139,compactness_worst:.3094,concavity_worst:.3403,concave_points_worst:.1418,symmetry_worst:.2218,fractal_dimension_worst:.0782,"":""}],c=[{id:1,diagnosis:"M",radius_mean:16.6,texture_mean:28.08,perimeter_mean:108.3,area_mean:858.1,smoothness_mean:.08455,compactness_mean:.1023,concavity_mean:.09251,concave_points_mean:.05302,symmetry_mean:.159,fractal_dimension_mean:.05648,radius_se:.4564,texture_se:1.075,perimeter_se:3.425,area_se:48.55,smoothness_se:.005903,compactness_se:.03731,concavity_se:.0473,concave_points_se:.01557,symmetry_se:.01318,fractal_dimension_se:.003892,radius_worst:18.98,texture_worst:34.12,perimeter_worst:126.7,area_worst:1124,smoothness_worst:.1139,compactness_worst:.3094,concavity_worst:.3403,concave_points_worst:.1418,symmetry_worst:.2218,fractal_dimension_worst:.0782},{id:2,diagnosis:"M",radius_mean:16.6,texture_mean:28.08,perimeter_mean:108.3,area_mean:858.1,smoothness_mean:.08455,compactness_mean:.1023,concavity_mean:.09251,concave_points_mean:.05302,symmetry_mean:.159,fractal_dimension_mean:.05648,radius_se:.4564,texture_se:1.075,perimeter_se:3.425,area_se:48.55,smoothness_se:.005903,compactness_se:.03731,concavity_se:.0473,concave_points_se:.01557,symmetry_se:.01318,fractal_dimension_se:.003892,radius_worst:18.98,texture_worst:34.12,perimeter_worst:126.7,area_worst:1124,smoothness_worst:.1139,compactness_worst:.3094,concavity_worst:.3403,concave_points_worst:.1418,symmetry_worst:.2218,fractal_dimension_worst:.0782},{id:1,diagnosis:"B",radius_mean:10,texture_mean:28.08,perimeter_mean:90,area_mean:500,smoothness_mean:.08455,compactness_mean:.1023,concavity_mean:.09251,concave_points_mean:.05302,symmetry_mean:.159,fractal_dimension_mean:.05648,radius_se:.4564,texture_se:1.075,perimeter_se:3.425,area_se:48.55,smoothness_se:.005903,compactness_se:.03731,concavity_se:.0473,concave_points_se:.01557,symmetry_se:.01318,fractal_dimension_se:.003892,radius_worst:18.98,texture_worst:34.12,perimeter_worst:126.7,area_worst:1124,smoothness_worst:.1139,compactness_worst:.3094,concavity_worst:.3403,concave_points_worst:.1418,symmetry_worst:.2218,fractal_dimension_worst:.0782},{id:2,diagnosis:"B",radius_mean:11.5,texture_mean:22,perimeter_mean:108.3,area_mean:858.1,smoothness_mean:.08,compactness_mean:.1023,concavity_mean:.09251,concave_points_mean:.05302,symmetry_mean:.159,fractal_dimension_mean:.05648,radius_se:.4564,texture_se:1.075,perimeter_se:3.425,area_se:48.55,smoothness_se:.005903,compactness_se:.03731,concavity_se:.0473,concave_points_se:.01557,symmetry_se:.01318,fractal_dimension_se:.003892,radius_worst:18.98,texture_worst:34.12,perimeter_worst:126.7,area_worst:1124,smoothness_worst:.1139,compactness_worst:.3094,concavity_worst:.3403,concave_points_worst:.1418,symmetry_worst:.2218,fractal_dimension_worst:.0782}];class l{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class u{refCount(e){return m("refCount")}incRef(e){return m("incRef")}timerAvailable(){return!0}time(e){return m("time")}read(e){return m("read")}readSync(e){return m("readSync")}readToGPU(e,t){return m("readToGPU")}numDataIds(){return m("numDataIds")}disposeData(e,t){return m("disposeData")}write(e,t,n){return m("write")}move(e,t,n,s,a){return m("move")}createTensorFromGPUData(e,t,n){return m("createTensorFromGPUData")}memory(){return m("memory")}floatPrecision(){return m("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return m("dispose")}}function m(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function _(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,h(e,t,n)}function d(e,t,n){return Math.max(e,Math.min(t,n))}function p(e){return e%2===0?e:e+1}function h(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function f(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";f(v(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function w(e){f(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function v(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1===0}function b(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;return new Promise(((a,r)=>{let o=0;const i=()=>{if(e())return void a();o++;const c=t(o);null!=n&&o>=n?r():null!=s?s(i,c):setTimeout(i,c)};i()}))}function S(e,t){let n=1,s=-1;for(let r=0;r<e.length;++r)if(e[r]>=0)n*=e[r];else if(-1===e[r]){if(-1!==s)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(s," and dim ").concat(r));s=r}else if(e[r]<0)throw Error("Shapes can not be < 0. Found ".concat(e[r]," at dim ").concat(r));if(-1===s){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const a=e.slice();return a[s]=t/n,a}function C(e,t){const n=t.length;return f((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),f(e.every((e=>x(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],s=[],a=null!=t&&Array.isArray(t)&&0===t.length,r=null==t||a?null:C(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=r){if(r[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==r[o]||r[o]>i)&&1===e[i]&&(n.push(e[i]),s.push(i)),r[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function T(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function F(e){return"string"===typeof e||e instanceof String}function D(e){return"number"===typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":D(e)?"float32":F(e)?"string":"boolean"===typeof e?"bool":"float32"}function O(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function z(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const r=t[0]*(s?2:1);for(let t=0;t<r;t++)a[t]=n[e+t]}else{const r=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<r;t++)a[t]=z(e+t*i,o,n,s)}return a}function P(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return z(0,e,t,n)}function W(e,t){const n=U(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function U(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function V(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return P(e,new Float32Array(n));if("int32"===t)return P(e,new Int32Array(n));if("bool"===t)return P(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function G(e){e.forEach((t=>{f(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function H(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let a=0;a<e.length-1;++a)s+=n[a]*e[a];return s}function j(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(e/n[a]),e-=s[a]*n[a];return s[s.length-1]=e,s}function K(e){return e&&e.then&&"function"===typeof e.then}const q="tfjsflags";class X{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Y,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(K(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(q in e){e[q].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function Y(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,s=new Array(n>1?n-1:0),a=1;a<n;a++)s[a-1]=arguments[a];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,s[0],s[1]),s.join("=")})),t}function Q(){return Z}let J,Z=null;function $(){if(null==J){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}J=e}return J}function ee(e,t){const n=function(){const e=$();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const te="Abs",ne="Acos",se="Acosh",ae="Add",re="AddN",oe="All",ie="Any",ce="ArgMax",le="ArgMin",ue="Asin",me="Asinh",_e="Atan",de="Atanh",pe="Atan2",he="AvgPool",fe="AvgPoolGrad",ye="AvgPool3D",we="AvgPool3DGrad",ge="BatchMatMul",ve="BatchToSpaceND",xe="Bincount",be="BitwiseAnd",ke="BroadcastArgs",Ie="Cast",Se="Ceil",Ce="ClipByValue",Ne="Complex",Te="ComplexAbs",Ee="Concat",Re="Conv2D",Ae="Conv2DBackpropFilter",Fe="Conv2DBackpropInput",De="Conv3D",Me="Conv3DBackpropFilterV2",Oe="Conv3DBackpropInputV2",Le="Cos",Be="Cosh",ze="Cumprod",Pe="Cumsum",We="CropAndResize",Ue="DenseBincount",Ve="DepthToSpace",Ge="DepthwiseConv2dNative",He="DepthwiseConv2dNativeBackpropFilter",je="DepthwiseConv2dNativeBackpropInput",Ke="Diag",qe="Dilation2D",Xe="Dilation2DBackpropInput",Ye="Dilation2DBackpropFilter",Qe="Draw",Je="RealDiv",Ze="Einsum",$e="Elu",et="EluGrad",tt="Erf",nt="Equal",st="Exp",at="ExpandDims",rt="Expm1",ot="FFT",it="Fill",ct="FlipLeftRight",lt="Floor",ut="FloorDiv",mt="FusedBatchNorm",_t="GatherV2",dt="GatherNd",pt="Greater",ht="GreaterEqual",ft="Identity",yt="IFFT",wt="Imag",gt="IsFinite",vt="IsInf",xt="IsNan",bt="LeakyRelu",kt="Less",It="LessEqual",St="LinSpace",Ct="Log",Nt="Log1p",Tt="LogicalAnd",Et="LogicalNot",Rt="LogicalOr",At="LRN",Ft="LRNGrad",Dt="Max",Mt="Maximum",Ot="MaxPool",Lt="MaxPoolGrad",Bt="MaxPool3D",zt="MaxPool3DGrad",Pt="MaxPoolWithArgmax",Wt="Mean",Ut="Min",Vt="Minimum",Gt="MirrorPad",Ht="Mod",jt="Multinomial",Kt="Multiply",qt="Neg",Xt="NotEqual",Yt="NonMaxSuppressionV3",Qt="NonMaxSuppressionV4",Jt="NonMaxSuppressionV5",Zt="OnesLike",$t="OneHot",en="Pack",tn="PadV2",nn="Pow",sn="Prelu",an="Prod",rn="RaggedGather",on="RaggedRange",cn="RaggedTensorToTensor",ln="Range",un="Real",mn="Reciprocal",_n="Relu",dn="Reshape",pn="ResizeNearestNeighbor",hn="ResizeNearestNeighborGrad",fn="ResizeBilinear",yn="ResizeBilinearGrad",wn="Relu6",gn="Reverse",vn="Round",xn="Rsqrt",bn="ScatterNd",kn="TensorScatterUpdate",In="SearchSorted",Sn="Select",Cn="Selu",Nn="Slice",Tn="Sin",En="Sinh",Rn="Sign",An="Sigmoid",Fn="Softplus",Dn="Sqrt",Mn="Sum",On="SpaceToBatchND",Ln="SplitV",Bn="Softmax",zn="SparseFillEmptyRows",Pn="SparseReshape",Wn="SparseSegmentMean",Un="SparseSegmentSum",Vn="SparseToDense",Gn="SquaredDifference",Hn="Square",jn="StaticRegexReplace",Kn="StridedSlice",qn="StringNGrams",Xn="StringSplit",Yn="StringToHashBucketFast",Qn="Sub",Jn="Tan",Zn="Tanh",$n="Tile",es="TopK",ts="Transform",ns="Transpose",ss="Unique",as="Unpack",rs="UnsortedSegmentSum",os="ZerosLike",is="Step",cs="FromPixels",ls="RotateWithOffset",us="_FusedMatMul",ms="FusedConv2D",_s="FusedDepthwiseConv2D";function ds(){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(...arguments)}function ps(){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.log(...arguments)}const hs=ee("kernelRegistry",(()=>new Map)),fs=ee("gradRegistry",(()=>new Map));function ys(e,t){const n=bs(e,t);return hs.get(n)}function ws(e){return fs.get(e)}function gs(e){const t=hs.entries(),n=[];for(;;){const{done:s,value:a}=t.next();if(s)break;const[r,o]=a,[i]=r.split("_");i===e&&n.push(o)}return n}function vs(e){const{kernelName:t,backendName:n}=e,s=bs(t,n);hs.has(s)&&ds("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),hs.set(s,e)}function xs(e){const{kernelName:t}=e;fs.has(t)&&Q().getBool("DEBUG")&&ds("Overriding the gradient for '".concat(t,"'")),fs.set(t,e)}function bs(e,t){return"".concat(t,"_").concat(e)}function ks(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Is=n(353);const Ss=n.n(Is)()||Is;function Cs(e){return Ss.fromString(e,!0,16)}const Ns=Cs("c3a5c85c97cb3127"),Ts=Cs("b492b66fbe98f273"),Es=Cs("9ae16a3b2f90404f");function Rs(e){return e.xor(e.shru(47))}function As(e,t,n){const s=e.slice(t,t+n);return Ss.fromBytes(Array.from(s),!0,!0)}function Fs(e,t){return As(e,t,8)}function Ds(e,t){return As(e,t,4)}function Ms(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Os(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Cs("9ddfea08eb382d69"),s=e.xor(t).mul(n);s=s.xor(s.shru(47));let a=t.xor(s).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ls(e,t,n,s){return function(e,t,n,s,a,r){a=a.add(e),r=Ms(r.add(a).add(s),21);const o=a;return a=(a=a.add(t)).add(n),r=r.add(Ms(a,44)),[a.add(s),r.add(o)]}(Fs(e,t),Fs(e,t+8),Fs(e,t+16),Fs(e,t+24),n,s)}function Bs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ss.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Es.add(2*t),s=Fs(e,0).add(Es),a=Fs(e,t-8);return Os(Ms(a,37).mul(n).add(s),Ms(s,25).add(a).mul(n),n)}if(t>=4){const n=Es.add(2*t);return Os(Ds(e,0).shl(3).add(t),Ds(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return Rs(Es.mul(n).xor(Ns.mul(s))).mul(Es)}return Es}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Es.add(2*t),s=Fs(e,0).mul(Ts),a=Fs(e,8),r=Fs(e,t-8).mul(n),o=Fs(e,t-16).mul(Es);return Os(Ms(s.add(a),43).add(Ms(r,30)).add(o),s.add(Ms(a.add(Es),18)).add(r),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Es.add(2*t),s=Fs(e,0).mul(Es),a=Fs(e,8),r=Fs(e,t-8).mul(n),o=Fs(e,t-16).mul(Es),i=Ms(s.add(a),43).add(Ms(r,30)).add(o),c=Os(i,s.add(Ms(a.add(Es),18)).add(r),n),l=Fs(e,16).mul(n),u=Fs(e,24),m=i.add(Fs(e,t-32)).mul(n),_=c.add(Fs(e,t-24)).mul(n);return Os(Ms(l.add(u),43).add(Ms(m,30)).add(_),l.add(Ms(u.add(s),18)).add(m),n)}(e,t);let s=n,a=n.mul(Ts).add(113),r=Rs(a.mul(Es).add(113)).mul(Es),o=[Ss.UZERO,Ss.UZERO],i=[Ss.UZERO,Ss.UZERO];s=s.mul(Es).add(Fs(e,0));let c=0;const l=64*(t-1>>6),u=l+(t-1&63)-63;do{s=Ms(s.add(a).add(o[0]).add(Fs(e,c+8)),37).mul(Ts),a=Ms(a.add(o[1]).add(Fs(e,c+48)),42).mul(Ts),s=s.xor(i[1]),a=a.add(o[0]).add(Fs(e,c+40)),r=Ms(r.add(i[0]),33).mul(Ts),o=Ls(e,c,o[1].mul(Ts),s.add(i[0])),i=Ls(e,c+32,r.add(i[1]),a.add(Fs(e,c+16))),[r,s]=[s,r],c+=64}while(c!==l);const m=Ts.add(r.and(255).shl(1));return c=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=Ms(s.add(a).add(o[0]).add(Fs(e,c+8)),37).mul(m),a=Ms(a.add(o[1]).add(Fs(e,c+48)),42).mul(m),s=s.xor(i[1].mul(9)),a=a.add(o[0].mul(9).add(Fs(e,c+40))),r=Ms(r.add(i[0]),33).mul(m),o=Ls(e,c,o[1].mul(m),s.add(i[0])),i=Ls(e,c+32,r.add(i[1]),a.add(Fs(e,c+16))),[r,s]=[s,r],Os(Os(o[0],i[0],m).add(Rs(a).mul(Ns)).add(r),Os(o[1],i[1],m).add(s),m)}function zs(e,t){return"string"===t?Us(e):Ps([e],t)}function Ps(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Hs(e)),Q().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(s,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function Ws(){return Q().platform.now()}function Us(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Q().platform.encode(e,t)}function Vs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Q().platform.decode(e,t)}function Gs(e){return null!=Q().platform.isTypedArray?Q().platform.isTypedArray(e):ks(e)}function Hs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||K(e)||null==e||Gs(e)&&n)t.push(e);else if(Array.isArray(e)||Gs(e))for(let s=0;s<e.length;++s)Hs(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let a=0;a<=s;a++)Hs(e[a],t,n)}return t}class js{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new qs)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let r;const o=Ws();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();r=Promise.resolve({kernelMs:Ws()-o})}if(Q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<s.length;i++){const t=s[i];t.data().then((n=>{Ks(n,t.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:a,extraInfo:r}=e;n.forEach((e=>{Promise.all([e.data(),s,r]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Ks(e,t,n){if("float32"!==t)return!1;for(let s=0;s<e.length;s++){const t=e[s];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class qs{logKernelProfile(e,t,n,s,a,r){const o="number"===typeof s?k("".concat(s,"ms"),9):s.error,i=k(e,25),c=t.rank,l=t.size,u=k(t.shape.toString(),14);let m="";for(const _ in a){const e=a[_];if(null!=e){const n=e.shape||t.shape,s=n.length;m+="".concat(_,": ").concat(s,"D ").concat(s>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(m,"\t%c").concat(r),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Xs=20,Ys=3,Qs=7;function Js(e,t,n,s){const a=B(t),r=function(e,t,n,s){const a=g(t),r=s[s.length-1],o=new Array(r).fill(0),i=t.length,c="complex64"===n?ta(e):e;if(i>1)for(let l=0;l<a/r;l++){const e=l*r;for(let t=0;t<r;t++)o[t]=Math.max(o[t],Zs(c[e+t],0,n).length)}return o}(e,t,n,a),o=t.length,i=ea(e,t,n,a,r),c=["Tensor"];return s&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(t,"]")),c.push("  values:")),c.push(i.map((e=>"    "+e)).join("\n")),c.join("\n")}function Zs(e,t,n){let s;return s=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(Qs))," + ")+"".concat(parseFloat(e[1].toFixed(Qs)),"j"):F(e)?"'".concat(e,"'"):"bool"===n?$s(e):parseFloat(e.toFixed(Qs)).toString(),k(s,t)}function $s(e){return 0===e?"false":"true"}function ea(e,t,n,s,a){let r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=t[0],c=t.length;if(0===c){if("complex64"===n){return[Zs(ta(e)[0],0,n)]}return"bool"===n?[$s(e[0])]:[e[0].toString()]}if(1===c){if(i>Xs){const t=Ys*o;let s=Array.from(e.slice(0,t)),r=Array.from(e.slice((i-Ys)*o,i*o));return"complex64"===n&&(s=ta(s),r=ta(r)),["["+s.map(((e,t)=>Zs(e,a[t],n))).join(", ")+", ..., "+r.map(((e,t)=>Zs(e,a[i-Ys+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ta(e):Array.from(e)).map(((e,t)=>Zs(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),u=s.slice(1),m=s[0]*o,_=[];if(i>Xs){for(let t=0;t<Ys;t++){const s=t*m,r=s+m;_.push(...ea(e.slice(s,r),l,n,u,a,!1))}_.push("...");for(let t=i-Ys;t<i;t++){const s=t*m,r=s+m;_.push(...ea(e.slice(s,r),l,n,u,a,t===i-1))}}else for(let h=0;h<i;h++){const t=h*m,s=t+m;_.push(...ea(e.slice(t,s),l,n,u,a,h===i-1))}const d=2===c?",":"";_[0]="["+(i>0?_[0]+d:"");for(let h=1;h<_.length-1;h++)_[h]=" "+_[h]+d;let p=",\n";for(let h=2;h<c;h++)p+="\n";return _[_.length-1]=" "+_[_.length-1]+"]"+(r?"":p),_}function ta(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class na{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=g(e),null!=n){const e=n.length;f(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||E(t,this.size),this.strides=B(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];0===n.length&&(n=[0]),f(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let s=0;for(const r of t){if(r<0||r>=this.shape[s]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}s++}let a=t[t.length-1];for(let r=0;r<t.length-1;++r)a+=this.strides[r]*t[r];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return sa().makeTensor(this.values,this.shape,this.dtype)}}let sa=null,aa=null,ra=null;class oa{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=g(e),this.strides=B(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return aa.buffer(this.shape,this.dtype,e)}bufferSync(){return aa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return P(this.shape,e,"complex64"===this.dtype)}arraySync(){return P(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=sa().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>Vs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),sa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=sa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Vs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await sa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),sa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return aa.print(this,e)}clone(){return this.throwIfDisposed(),aa.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Js(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),aa.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),sa().makeVariable(this,e,t,n)}}function ia(){return ee("Tensor",(()=>oa))}Object.defineProperty(oa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ia();class ca extends oa{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!v(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));sa().disposeTensor(this),this.dataId=e.dataId,sa().incRef(this,null)}dispose(){sa().disposeVariable(this),this.isDisposedInternal=!0}}var la,ua,ma,_a,da;Object.defineProperty(ca,Symbol.hasInstance,{value:e=>e instanceof oa&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(la||(la={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ua||(ua={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ma||(ma={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(_a||(_a={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(da||(da={}));const pa={float32:_a,int32:ua,bool:ma,complex64:da};function ha(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return pa[e][t]}function fa(e){return ha(e,"int32")}function ya(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function wa(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ga(e,t){if(e.dtype===t.dtype)return[e,t];const n=ha(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function va(e,t){return t.some((t=>t.id===e.id))}function xa(e){const t=[];return ba(e,t,new Set),t}function ba(e,t,n){if(null==e)return;if(e instanceof oa)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),ba(e,t,n))}}function ka(e){return null!=e.kernelName}class Ia{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Sa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ia}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(ds("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new js(this.backendInstance),!0}setupRegisteredKernels(){gs(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){gs(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof u||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ds("Initialization of backend ".concat(e," failed")),ds(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(n){return ds("Initialization of backend ".concat(e," failed")),ds(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:a}=this.initializeBackend(n);if(a||s)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,a=this.readSync(t),r=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(s){throw t(),s}}nextTensorId(){return Sa.nextTensorId++}nextVariableId(){return Sa.nextVariableId++}clone(e){const t=Na.runKernel(ft,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Na.runKernel(Ie,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=ys(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-a-r;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),a=this.state.numBytes,r=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=ka(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ka(e)){const{kernelName:t,inputs:a,attrs:r}=e;null==this.backendName&&this.backend;const c=ys(t,this.backendName);f(null!=c,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();i=c.kernelFunc({inputs:a,attrs:r,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:l,attrs:u}=e,m=ka(e)?null:e.backwardsFunc;let _;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(_=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(_),t=_.outputs):t=o()})),s&&this.addTapeNode(c,l,t,m,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:_.timeMs,extraInfo:_.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=ws(e);if(null!=s){const e=s.inputsToSave||[],a=s.outputsToSave||[];let r;s.saveAllInputs?(f(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(t).map((e=>t[e]))):r=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return r.concat(o)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let a=e;"string"===n&&F(e[0])&&(a=e.map((e=>Us(e))));const r=s.write(a,t,n),o=new oa(t,n,r,this.nextTensorId());if(this.trackTensor(o,s),"string"===n){const e=this.state.tensorInfo.get(r),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,s){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:a}=e,r=new oa(s,a,n,this.nextTensorId());return this.trackTensor(r,t),r}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const a=new ca(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name ".concat(a.name," was already registered"));return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*A(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ca||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*A(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,a,r){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=ws(e);null!=i&&(s=i.gradFunc),null!=s&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=U(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],a,r))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=xa(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(f(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));f(a instanceof oa,(()=>"The result y returned by f() must be a tensor."));const r=function(e,t,n){const s={},a={};for(let c=0;c<t.length;c++)s[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],r=n.inputs;for(const e in r){const o=r[e];let i=!1;for(let e=0;e<t.length;e++)if(s[o.id]){n.outputs.forEach((e=>s[e.id]=!0)),i=!0,a[n.id]=!0;break}if(i)break}}const r={};r[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(r[t.outputs[e].id]){for(const e in n)r[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(a[t.id]&&o[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];s[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,a);if(!s&&0===r.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=W(g(e),"float32");return Na.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,s){for(let a=t.length-1;a>=0;a--){const r=t[a],o=[];if(r.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==r.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(r.kernelName,"."));const i=r.gradient(o);for(const t in r.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(a.dtype,"'"));const o=r.inputs[t];if(!v(a.shape,o.shape))throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(a.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=s(t,a),t.dispose()}}}}(e,r,(e=>this.tidy(e)),Ta);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:s}}))}customGrad(e){var t=this;return f(O(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,s=new Array(n),a=0;a<n;a++)s[a]=arguments[a];let r;f(s.every((e=>e instanceof oa)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};s.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(r=e(...s,n),f(r.value instanceof oa,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),f(O(r.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),r.value),backwardsFunc:(e,t)=>{const n=r.gradFunc(e,t),a=Array.isArray(n)?n:[n];f(a.length===s.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),f(a.every((e=>e instanceof oa)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ws(),n=await this.backend.time(e);return n.wallMs=Ws()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ia;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ca(){const e=$();if(null==e._tfengine){const t=new X(e);e._tfengine=new Sa(t)}var t;return t=e._tfengine.ENV,Z=t,sa=()=>e._tfengine,e._tfengine}Sa.nextTensorId=0,Sa.nextVariableId=0;const Na=Ca();function Ta(e,t){const n={a:e,b:t};return Na.runKernel(ae,n)}let Ea;function Ra(e){if(void 0!==Ea)return Ea;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Aa(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const Fa=Q();function Da(e,t){let n=e;if(Gs(e))return"string"===t?[]:[e.length];if(ya(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(wa(e))return[e.buffer.size/(null==t?4:A(t))];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||Gs(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&Q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ma(e,s,[]),s}function Ma(e,t,n){if(n=n||[],!Array.isArray(e)&&!Gs(e))return void f(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));f(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),f(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const s=t.slice(1);for(let a=0;a<e.length;++a)Ma(e[a],s,n.concat(a))}function Oa(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(s,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function La(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof ia())return Oa(s,e.dtype,t,n),e;let a=M(e);if("string"!==a&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),Oa(s,a,t,n),null==e||!Gs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const s=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(s,"'"))}const r=Da(e,a);Gs(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?Ps(e,a):Hs(e,[],!0);return Na.makeTensor(o,r,a)}function Ba(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,a)=>La(e,"".concat(t,"[").concat(a,"]"),n,s)))}Fa.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Fa.registerFlag("IS_BROWSER",(()=>Aa())),Fa.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Fa.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Fa.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Fa.registerFlag("PROD",(()=>!1)),Fa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Fa.getBool("DEBUG"))),Fa.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Fa.registerFlag("IS_TEST",(()=>!1)),Fa.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Fa.getBool("DEBUG"))),Fa.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Fa.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Fa.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function za(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=function(){Na.startScope(n);try{const e=s(...arguments);return K(e)&&console.error("Cannot return a Promise inside of tidy."),Na.endScope(e),e}catch(e){throw Na.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Pa=za({complex_:function(e,t){const n=La(e,"real","complex"),s=La(t,"imag","complex");y(n.shape,s.shape,"real and imag shapes, ".concat(n.shape," and ").concat(s.shape,", ")+"must match in call to tf.complex().");const a={real:n,imag:s};return Na.runKernel(Ne,a)}});function Wa(e,t,n,s){if(null==s)s=M(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(wa(e)||ya(e)){if("float32"!==s&&"int32"!==s)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(s,"."));return Na.backend.createTensorFromGPUData(e,t||n,s)}if(!Gs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){G(t);const e=g(t),s=g(n);f(e===s,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(s)));for(let a=0;a<n.length;++a){const e=n[a],s=a!==n.length-1||e!==g(t.slice(a));f(n[a]===t[a]||!s,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return Gs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Ps(e,s):Hs(e,[],!0),Na.makeTensor(e,t,s)}function Ua(e,t,n){return Wa(e,t,Da(e,n),n)}const Va={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ga{static join(e){return new Ga(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Gs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+s.byteLength;this.shards.push({buffer:s,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const s=new ArrayBuffer(t-e),a=new Uint8Array(s);let r=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],s=e+r-n.start,i=r,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,s,c-s);if(a.set(l,i),r+=l.length,t<n.end)break}return s}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,s=e.length;for(;n<=s;){const a=Math.floor((s-n)/2)+n,r=t(e[a]);if(0===r)return a;r<0?s=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Ha(){return Na}function ja(){return Na.memory()}function Ka(e,t){return Na.tidy(e,t)}function qa(e){xa(e).forEach((e=>e.dispose()))}function Xa(e){return Na.keep(e)}function Ya(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Na.registerBackend(e,t,n)}function Qa(){return Na.backend}ra=function(e){Q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Ja=4;async function Za(e,t){const n=[],s=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let r=0;r<a.length;++r){const o=a[r],i=Array.isArray(e)?e[r].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ja*t.length,s=new Uint8Array(n);let a=0;for(let r=0;r<t.length;r++){const e=t[r],n=new Uint8Array(new Uint32Array([e.length]).buffer);s.set(n,a),a+=Ja,s.set(e,a),a+=e.length}e(s)}));s.push(e)}else s.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:nr(await Promise.all(s)),specs:n}}function $a(e,t){const n=new Ga(e),s={};let a=0;for(const r of t){const e=er(r,((e,t)=>n.slice(a+e,a+t)));s[r.name]=tr(r,n.slice(a,a+e)),a+=e}return s}function er(e,t){const n=g(e.shape);let s;if("quantization"in e){const t=e.quantization;s=Va[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=Ja+new Uint32Array(t(e,e+Ja))[0];return e}s=Va[e.dtype]}return n*s}function tr(e,t){const n=e.name,s=e.dtype,a=e.shape,r=g(a);let o,i=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==s)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(s,"."))}const c=Va[a.dtype],l="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===s)if("uint8"===a.dtype||"uint16"===a.dtype){o=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let o=0;o<s.length;o++){const a=s[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];r[o]=i}return new Float32Array(a)}}();o=e(l)}}else{if("int32"!==s)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(s));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");o=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];o[e]=Math.round(t*a.scale+a.min)}}i+=r*c}else if("string"===s){const n=g(e.shape);o=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+Ja))[0];i+=Ja;const n=new Uint8Array(t.slice(i,i+e));o.push(n),i+=e}}else{const e=Va[s];if("float32"===s)o=new Float32Array(t);else if("int32"===s)o=new Int32Array(t);else{if("bool"!==s){if("complex64"===s){o=new Float32Array(t);const e=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let t=0;t<e.length;t++)e[t]=o[2*t],n[t]=o[2*t+1];const s=Ua(e,a,"float32"),r=Ua(n,a,"float32"),i=Pa(s,r);return s.dispose(),r.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(s))}o=new Uint8Array(t)}i+=r*e}return Ua(o,a,s)}function nr(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const s=new Uint8Array(t);let a=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),s.buffer}const sr="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function ar(e){return sr?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function rr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function or(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),function(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}(e,n,s)}function ir(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ar(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ar(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ga(e.weightData).byteLength}}function cr(e){const t=[];for(const n of e)t.push(...n.weights);return t}class lr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==lr.instance&&(lr.instance=new lr),lr.instance}static registerSaveRouter(e){lr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){lr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return lr.getHandlers(e,"save")}static getLoadHandlers(e,t){return lr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?lr.getInstance().loadRouters:lr.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&s.push(a)})),s}}const ur="tensorflowjs",mr="models_store",_r="model_info_store";function dr(){if(!Q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function pr(e){const t=e.result;t.createObjectStore(mr,{keyPath:"modelPath"}),t.createObjectStore(_r,{keyPath:"modelPath"})}class hr{constructor(e){if(this.indexedDB=dr(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(ur,1);s.onupgradeneeded=()=>pr(s),s.onsuccess=()=>{const a=s.result;if(null==t){const t=a.transaction(mr,"readonly"),s=t.objectStore(mr).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return a.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(s.result.modelArtifacts)},s.onerror=e=>(a.close(),n(s.error)),t.oncomplete=()=>a.close()}else{t.weightData=Ga.join(t.weightData);const s=ir(t),o=a.transaction(_r,"readwrite");let i,c,l=o.objectStore(_r);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(r){return n(r)}i.onsuccess=()=>{c=a.transaction(mr,"readwrite");const i=c.objectStore(mr);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(r){return n(r)}u.onsuccess=()=>e({modelArtifactsInfo:s}),u.onerror=e=>{l=o.objectStore(_r);const t=l.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(u.error)),t.onerror=e=>(a.close(),n(u.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}}},s.onerror=e=>n(s.error)}))}}hr.URL_SCHEME="indexeddb://";const fr=e=>{return Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hr.URL_SCHEME)?(t=e.slice(hr.URL_SCHEME.length),new hr(t)):null;var t};lr.registerSaveRouter(fr),lr.registerLoadRouter(fr);class yr{constructor(){this.indexedDB=dr()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ur,1);n.onupgradeneeded=()=>pr(n),n.onsuccess=()=>{const s=n.result,a=s.transaction(_r,"readonly"),r=a.objectStore(_r).getAll();r.onsuccess=()=>{const t={};for(const e of r.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},r.onerror=e=>(s.close(),t(r.error)),a.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(hr.URL_SCHEME)?t.slice(hr.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(ur,1);s.onupgradeneeded=()=>pr(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(_r,"readwrite"),o=r.objectStore(_r),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const s=o.delete(e),r=()=>{c=a.transaction(mr,"readwrite");const s=c.objectStore(mr).delete(e);s.onsuccess=()=>t(i.result.modelArtifactsInfo),s.onerror=e=>n(i.error)};s.onsuccess=r,s.onerror=e=>(r(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),r.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},s.onerror=e=>n(s.error)}))}}const wr="/",gr="tensorflowjs_models",vr="info",xr="model_topology",br="weight_specs",kr="weight_data",Ir="model_metadata";function Sr(e){return{info:[gr,e,vr].join(wr),topology:[gr,e,xr].join(wr),weightSpecs:[gr,e,br].join(wr),weightData:[gr,e,kr].join(wr),modelMetadata:[gr,e,Ir].join(wr)}}function Cr(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Nr(e){const t=e.split(wr);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(wr)}class Tr{constructor(e){if(!Q().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Sr(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),a=ir(e),r=Ga.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,function(e){if(sr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,a=t.length;s<a;s++)n+=String.fromCharCode(t[s]);return btoa(n)}(r));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw Cr(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=s;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(sr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}(r),t}}Tr.URL_SCHEME="localstorage://";const Er=e=>{return Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Tr.URL_SCHEME)?(t=e.slice(Tr.URL_SCHEME.length),new Tr(t)):null;var t};lr.registerSaveRouter(Er),lr.registerLoadRouter(Er);class Rr{constructor(){f(Q().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),f("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=gr+wr,n=wr+vr;for(let s=0;s<this.LS.length;++s){const a=this.LS.key(s);if(a.startsWith(t)&&a.endsWith(n)){e[Nr(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=Sr(e=(t=e).startsWith(Tr.URL_SCHEME)?t.slice(Tr.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const s=JSON.parse(this.LS.getItem(n.info));return Cr(n),s}}const Ar="://";class Fr{constructor(){this.managers={}}static getInstance(){return null==Fr.instance&&(Fr.instance=new Fr),Fr.instance}static registerManager(e,t){f(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ar)&&(e=e.slice(0,e.indexOf(Ar))),f(e.length>0,(()=>"scheme must not be an empty string."));const n=Fr.getInstance();f(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=Fr.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Fr.getInstance().managers)}}class Dr{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&Q().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return ks(e)}}if(Q().get("IS_BROWSER")){Q().setPlatform("browser",new Dr);try{Fr.registerManager(Tr.URL_SCHEME,new Rr)}catch(JL){}try{Fr.registerManager(hr.URL_SCHEME,new yr)}catch(JL){}}const Mr=()=>n(817);let Or;class Lr{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Q().global.fetch?Q().global.fetch(e,t):(null==Or&&(Or=Mr()),Or(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function Br(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",G(e),new na(e,t,n)}Q().get("IS_NODE")&&!Q().get("IS_BROWSER")&&Q().setPlatform("node",new Lr);const zr=za({cast_:function(e,t){const n=La(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},a={dtype:t};return Na.runKernel(Ie,s,a)}});const Pr=za({clone_:function(e){const t={x:La(e,"x","clone","string_or_numeric")};return Na.runKernel(ft,t)}});Ca();aa={buffer:Br,cast:zr,clone:Pr,print:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}};const Wr=za({add_:function(e,t){let n=La(e,"a","add"),s=La(t,"b","add");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(ae,a)}});const Ur=za({floorDiv_:function(e,t){let n=La(e,"a","floorDiv"),s=La(t,"b","floorDiv");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(ut,a)}});const Vr=za({div_:function(e,t){let n=La(e,"a","div"),s=La(t,"b","div");if([n,s]=ga(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Ur(n,s);const a={a:n,b:s};return Na.runKernel(Je,a,{})}});const Gr=za({mul_:function(e,t){let n=La(e,"a","mul"),s=La(t,"b","mul");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(Kt,a)}});const Hr=za({sqrt_:function(e){const t={x:La(e,"x","sqrt","float32")};return Na.runKernel(Dn,t)}});const jr=za({square_:function(e){const t=La(e,"x","square");return Na.runKernel("Square",{x:t},{})}});const Kr=za({zerosLike_:function(e){const t={x:La(e,"x","zerosLike")};return Na.runKernel(os,t)}});function qr(e){return Na.customGrad(e)}function Xr(e,t){if((Gs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Gs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Wa(e,[],[],t)}const Yr=new Map,Qr=new Map;class Jr{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Zr{constructor(){this.classNameMap={}}static getMap(){return null==Zr.instance&&(Zr.instance=new Zr),Zr.instance}static register(e){Zr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function $r(e,t,n){f(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),f("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),f(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const s=t+">"+n;return Zr.register(e),Yr.set(s,e),Qr.set(e,s),e}class eo extends Jr{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:s,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return qa(a),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){f(O(e),(()=>"The f passed in variableGrads(f) must be a function")),f(null==t||Array.isArray(t)&&t.every((e=>e instanceof ca)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Na.registeredVariables)t.push(Na.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),f(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(a," variables is ")+"trainable."));const{value:r,grads:o}=Na.gradients(e,t,null,!0);f(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),f(0===r.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(r.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=s&&s.forEach((e=>i[e.name]=null)),{value:r,grads:i}}(e,t)}dispose(){null!=this.iterations_&&qa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Xr(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(eo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class to extends eo{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Na.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Na.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:Ka((()=>Kr(s).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:Ka((()=>Kr(s).variable(a)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Ka((()=>{const e=Wr(Gr(o,this.rho),Gr(jr(r),1-this.rho)),t=Gr(Vr(Hr(Wr(i,this.epsilon)),Hr(Wr(o,this.epsilon))),r),n=Wr(Gr(i,this.rho),Gr(jr(t),1-this.rho));o.assign(e),i.assign(n);const a=Wr(Gr(t,-this.learningRate),s);s.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(qa(this.accumulatedGrads.map((e=>e.variable))),qa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function no(e,t,n){G(e);const s={shape:e,value:t,dtype:n=n||M(t)};return Na.runKernel(it,{},s)}class so extends eo{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Na.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:Ka((()=>no(s.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=this.accumulatedGrads[n].variable;Ka((()=>{const e=Wr(r,jr(a));r.assign(e);const t=Wr(Gr(Vr(a,Hr(Wr(e,Na.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&qa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const ao=za({pow_:function(e,t){let n=La(e,"base","pow"),s=La(t,"exp","pow");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(nn,a)}});const ro=za({sub_:function(e,t){let n=La(e,"a","sub"),s=La(t,"b","sub");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(Qn,a)}});class oo extends eo{static get className(){return"Adam"}constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ka((()=>{this.accBeta1=Xr(t).variable(),this.accBeta2=Xr(n).variable()})),null==s&&(this.epsilon=Na.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ka((()=>{const n=ro(1,this.accBeta1),s=ro(1,this.accBeta2);t.forEach(((t,a)=>{const r=Na.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(t,"/m"),variable:Ka((()=>Kr(r).variable(o)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:"".concat(t,"/v"),variable:Ka((()=>Kr(r).variable(o)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=Wr(Gr(c,this.beta1),Gr(i,1-this.beta1)),m=Wr(Gr(l,this.beta2),Gr(jr(i),1-this.beta2)),_=Vr(u,n),d=Vr(m,s);c.assign(u),l.assign(m);const p=Wr(Gr(Vr(_,Wr(Hr(d),this.epsilon)),-this.learningRate),r);r.assign(p)})),this.accBeta1.assign(Gr(this.accBeta1,this.beta1)),this.accBeta2.assign(Gr(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&qa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&qa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ka((()=>{this.accBeta1.assign(ao(this.beta1,this.iterations_+1)),this.accBeta2.assign(ao(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const io=za({abs_:function(e){const t=La(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Na.runKernel(Te,e)}{const e={x:t};return Na.runKernel(te,e)}}});function co(e,t){const n=e.length,s=[];for(let a=0;a<n;a++){const r=n-1-a,o=e[r]||1;(t[t.length-1-a]||1)>1&&1===o&&s.unshift(r)}return s}function lo(e,t){const n=[];for(let s=0;s<t.length;s++){const a=e[e.length-s-1],r=t.length-s-1,o=t[r];(null==a||1===a&&o>1)&&n.unshift(r)}return n}function uo(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let a=0;a<n;a++){let r=e[e.length-a-1];null==r&&(r=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===r)s[n-a-1]=o;else if(1===o)s[n-a-1]=r;else{if(r!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}s[n-a-1]=r}}return s}const mo=za({maximum_:function(e,t){let n=La(e,"a","maximum"),s=La(t,"b","maximum");[n,s]=ga(n,s),"bool"===n.dtype&&(n=zr(n,"int32"),s=zr(s,"int32")),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(Mt,a)}});class _o extends eo{static get className(){return"Adamax"}constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ka((()=>{this.iteration=Xr(0).variable(),this.accBeta1=Xr(t).variable()})),null==s&&(this.epsilon=Na.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ka((()=>{const n=ro(1,this.accBeta1),s=Vr(-this.learningRate,Wr(Gr(this.iteration,this.decay),1));t.forEach(((t,a)=>{const r=Na.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(t,"/m"),variable:Kr(r).variable(o)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:"".concat(t,"/v"),variable:Kr(r).variable(o)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=Wr(Gr(c,this.beta1),Gr(i,1-this.beta1)),m=Gr(l,this.beta2),_=io(i),d=mo(m,_);c.assign(u),l.assign(d);const p=Wr(Gr(Vr(s,n),Vr(u,Wr(d,this.epsilon))),r);r.assign(p)})),this.iteration.assign(Wr(this.iteration,1)),this.accBeta1.assign(Gr(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&qa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&qa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class po extends eo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=Na.registeredVariables[t];Ka((()=>{const e=Wr(Gr(this.c,s),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Xa(Xr(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ho extends po{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Xr(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Na.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:Ka((()=>Kr(s).variable(e)))}}const a=this.accumulations[n].variable,r=Array.isArray(e)?e[n].tensor:e[t];null!=r&&Ka((()=>{let e;const t=Wr(Gr(this.m,a),r);e=this.useNesterov?Wr(Gr(this.c,Wr(r,Gr(t,this.m))),s):Wr(Gr(this.c,t),s),a.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&qa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class fo extends eo{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==s&&(this.epsilon=Na.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Na.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:Ka((()=>Kr(s).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:Ka((()=>Kr(s).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:Ka((()=>Kr(s).variable(a)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Ka((()=>{const e=Wr(Gr(o,this.decay),Gr(jr(r),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Wr(Gr(t,this.decay),Gr(r,1-this.decay)),c=Vr(Gr(r,this.learningRate),Hr(ro(e,Wr(jr(a),this.epsilon)))),l=Wr(Gr(i,this.momentum),c);o.assign(e),t.assign(a),i.assign(l);const u=ro(s,l);s.assign(u)}else{const e=Wr(Gr(o,this.decay),Gr(jr(r),1-this.decay)),t=Wr(Gr(i,this.momentum),Vr(Gr(r,this.learningRate),Hr(Wr(e,this.epsilon))));o.assign(e),i.assign(t);const n=ro(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&qa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&qa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&qa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const yo=[to,so,oo,_o,ho,fo,po];function wo(e){return new Promise((e=>setTimeout(e))).then(e)}class go{constructor(e){if(!Q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(go.URL_SCHEME)&&(e=e.slice(go.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ga.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=rr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await wo((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await wo((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ir(e)}}}}go.URL_SCHEME="downloads://";function vo(e,t,n,s){!function(e){f(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){f(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),f(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),f(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,s=null==s?1:s);let a=0;return Promise.all(e.map((r=>(r.then((r=>{const o=n+ ++a/e.length*(s-n);return t(o),r})),r))))}async function xo(e,t){null==t&&(t={});const n=null==t.fetchFunc?Q().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(s):await vo(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await vo(a,t.onProgress,.5,1)}lr.registerSaveRouter((e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(go.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new go(e)}(e.slice(go.URL_SCHEME.length)):null));class bo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(f("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Q().platform.fetch,f(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&f(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=rr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ga.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ir(e),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(s.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(a){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return or(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=cr(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const s=null==t.fetchFunc?Q().platform.fetch:t.fetchFunc;let a,r=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;r<e.length;){if(!a){const n=(await s(e[r],t.requestInit,{isBinary:!0})).body;a=n.getReader()}const{done:i,value:c}=await a.read();if(!i)return void n.enqueue(c);r++,a=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,r/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),a=n>t?e.substring(n):"";return[s+"/",a]}(t),a=this.weightPathPrefix||n,r=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):r.push(a+e+s);return this.weightUrlConverter&&r.push(...await Promise.all(o)),r}async loadWeights(e){const t=await this.getWeightUrls(e);return[cr(e),await xo(t,this.loadOptions)]}}function ko(e){return null!=e.match(bo.URL_SCHEME_REGEX)}bo.URL_SCHEME_REGEX=/^https?:\/\//;const Io=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ko(e))):ko(e),n)return So(e,t)}return null};function So(e,t){return new bo(e,t)}lr.registerSaveRouter(Io),lr.registerLoadRouter(Io);const Co=-2,No=-1;function To(e,t,n){const s=e.shape.length;f(s===t.length,(()=>"Error in slice".concat(s,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(s,")."))),f(s===n.length,(()=>"Error in slice".concat(s,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(s,").")));for(let a=0;a<s;++a)f(t[a]+n[a]<=e.shape[a],(()=>"Error in slice".concat(s,"D: begin[").concat(a,"] + size[").concat(a,"] ")+"(".concat(t[a]+n[a],") would overflow input.shape[").concat(a,"] (").concat(e.shape[a],")")))}function Eo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ro(e,t,n){const s=[];for(let a=0;a<e.length;a++)s[a]=Math.ceil((t[a]-e[a])/n[a]);return s}function Ao(e,t,n,s){const a=[...e];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<n;r++)0===r?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Fo(e,t,n){return n<=e?n:n-(t-1)}function Do(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Mo(e,t,n,s,a,r,o,i,c){const l=e.length;let u=new Array(l),m=new Array(l),_=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;u=Oo(o,c,l,s,e),m=Lo(i,c,l,a,e),_=Ao(r,c,l,e)}else for(let d=0;d<l;d++)u[d]=zo(o,s,r,e,d,c),m[d]=Po(i,a,r,e,d,c),_[d]=Bo(r,d,c);return{begin:u,end:m,strides:_}}function Oo(e,t,n,s,a){const r=[...a],o=Do(n,t);for(let i=0;i<r.length;i++)if(o.indexOf(i)>-1)r[i]=0;else{const a=Fo(t,n,i);let o=s[a];e&1<<a&&(o=0),r[i]=o}return r}function Lo(e,t,n,s,a){const r=[...a],o=Do(n,t);for(let i=0;i<r.length;i++)if(o.indexOf(i)>-1)r[i]=Number.MAX_SAFE_INTEGER;else{const a=Fo(t,n,i);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),r[i]=o}for(let i=0;i<r.length;i++){const e=a[i];r[i]<0&&(r[i]+=e),r[i]=d(0,r[i],a[i])}return r}function Bo(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function zo(e,t,n,s,a,r){let o=t[a];const i=n[a]||1;(e&1<<a||r&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=s[a];return o<0&&(o+=c),o=d(0,o,c-1),o}function Po(e,t,n,s,a,r){let o=t[a];const i=n[a]||1;(e&1<<a||r&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=s[a];return o<0&&(o+=c),o=i>0?d(0,o,c):d(-1,o,c-1),o}function Wo(e,t,n){let s=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){s=a;break}for(let a=s+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Uo(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Vo(e,t,n){let s;const a=e.shape.length;let r;return s="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{f(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(f(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-s[n]))),[s,r]}function Go(e,t,n,s,a,r,o,i,c){let l;if(null==s?(l=new Array(t.length),l.fill(1)):l=s,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const m={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:r,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let w=0;w<m.dims;w++)u&&0!==(1<<w&i)&&m.numAddAxisAfterEllipsis++,1<<w&o&&(u=!0);u||(m.ellipsisMask|=1<<m.dims,m.dims++);const _={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Co),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(No),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(m,_);let d=!0,p=!0,h=!0;const f=[],y=[];for(let w=0;w<e.length;++w){if(0===_.strides[w])throw Error("strides[".concat(w,"] must be non-zero"));const t=!!(_.shrinkAxisMask&1<<w),n=e[w];if(-1===n){f.push(t?1:-1);continue}const s=[_.beginMask&1<<w,_.endMask&1<<w],a=[_.strides[w]>0?0:-1,_.strides[w]>0?n:n-1];if(t&&_.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&1===_.strides[w];const r=!!(_.beginMask&1<<w&&_.endMask&1<<w);if(_.beginValid&&_.endValid){if(t){const e=_.begin[w]<0?n+_.begin[w]:_.begin[w];if(_.begin[w]=e,_.end[w]=_.begin[w]+1,e<0||e>=n)throw Error("slice index ".concat(_.begin[w]," of dimension ").concat(w," out of bounds."))}else _.begin[w]=Ho(_.begin[w],0,_.strides[w],n,s,a),_.end[w]=Ho(_.end[w],1,_.strides[w],n,s,a);const e=1===_.strides[w]&&0===_.begin[w]&&_.end[w]===n;d=d&&e,p=p&&(0===w&&1===_.strides[w]||e)}else d=d&&1===_.strides[w]&&r,p=p&&(0===w&&1===_.strides[w]||r);let o,i=!1;if(_.beginValid&&_.endValid?(o=_.end[w]-_.begin[w],i=!0):t?(o=1,i=!0):r&&n>=0&&(o=_.strides[w]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==_.strides[w]<0?0:Math.trunc(o/_.strides[w])+(o%_.strides[w]!==0?1:0),f.push(e)}else f.push(-1)}for(let w=0;w<_.finalShapeGatherIndices.length;++w){const e=_.finalShapeGatherIndices[w];e>=0?y.push(f[e]):e===Co&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>_.finalShapeGatherIndices[t]!==Co)),finalShape:y,isIdentity:d,sliceDim0:p,isSimpleSlice:h,begin:_.begin,end:_.end,strides:_.strides}}function Ho(e,t,n,s,a,r){if(a[t])return n>0?r[t]:r[t+1&1];{const t=e<0?s+e:e;return t<r[0]?r[0]:t>r[1]?r[1]:t}}const jo=za({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:La(e,"x","all","bool")},a={axis:t,keepDims:n};return Na.runKernel(oe,s,a)}});const Ko=za({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:La(e,"x","any","bool")},a={axis:t,keepDims:n};return Na.runKernel(ie,s,a)}});const qo=za({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:La(e,"x","argMax")},s={axis:t};return Na.runKernel(ce,n,s)}});function Xo(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",r=arguments.length>5?arguments[5]:void 0;return Jo(e,[...t,e[3]],n,r,s,null,null,ii(a))}function Yo(e,t,n,s,a,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=ei(t);let l;if("channelsLast"===o)l=[i,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,e[1],e[1]]}return Jo(e,l,n,s,a,r,!1,o)}function Qo(e,t,n,s,a,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=ti(t);let u,m;if("NDHWC"===o)m="channelsLast",u=[i,c,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));m="channelsFirst",u=[i,c,l,e[1],e[1]]}return Zo(e,u,n,s,a,!1,m,r)}function Jo(e,t,n,s,a,r){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,m]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,l,u]=e}const[_,d,,p]=t,[h,f]=ei(n),[y,w]=ei(s),g=ni(_,y),v=ni(d,w),{padInfo:x,outHeight:b,outWidth:k}=function(e,t,n,s,a,r,o,i,c){let l,u,m;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,a){null==s&&(s=$o(e,t,n));const r=e[0],o=e[1],i=si((r-t+2*s)/n+1,a),c=si((o-t+2*s)/n+1,a);return[i,c]}([t,n],r,s,e,i);u=a[0],m=a[1]}else if("same"===e){u=Math.ceil(t/s),m=Math.ceil(n/a);const e=Math.max(0,(u-1)*s+r-t),i=Math.max(0,(m-1)*a+o-n),c=Math.floor(e/2),_=e-c,d=Math.floor(i/2);l={top:c,bottom:_,left:d,right:i-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/s),m=Math.ceil((n-o+1)/a);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const _="channelsLast"===c?e[1][0]:e[2][0],d="channelsLast"===c?e[1][1]:e[2][1],p="channelsLast"===c?e[2][0]:e[3][0],h="channelsLast"===c?e[2][1]:e[3][1];l={top:_,bottom:d,left:p,right:h,type:0===_&&0===d&&0===p&&0===h?"VALID":"EXPLICIT"},u=si((t-r+_+d)/s+1,i),m=si((n-o+p+h)/a+1,i)}}return{padInfo:l,outHeight:u,outWidth:m}}(a,l,u,h,f,g,v,r,i),I=o?p*m:p;let S;return"channelsFirst"===i?S=[c,I,b,k]:"channelsLast"===i&&(S=[c,b,k,I]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:m,outHeight:b,outWidth:k,outChannels:I,padInfo:x,strideHeight:h,strideWidth:f,filterHeight:_,filterWidth:d,effectiveFilterHeight:g,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:w,inShape:e,outShape:S,filterShape:t}}function Zo(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,m,_]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,m,_]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,_,l,u,m]=e}const[d,p,h,,f]=t,[y,w,g]=ti(n),[v,x,b]=ti(s),k=ni(d,v),I=ni(p,x),S=ni(h,b),{padInfo:C,outDepth:N,outHeight:T,outWidth:E}=function(e,t,n,s,a,r,o,i,c,l,u){let m,_,d,p;"valid"===e&&(e=0);if("number"===typeof e){m={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const h=function(e,t,n,s,a,r){null==a&&(a=$o(e,t[0],s[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*a>=t[i]&&(o[i]=si((e[i]-t[i]+2*a)/s[i]+1,r));return o}([t,n,s,1],[i,c,l],1,[a,r,o],e,u);_=h[0],d=h[1],p=h[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{_=Math.ceil(t/a),d=Math.ceil(n/r),p=Math.ceil(s/o);const e=(_-1)*a+i-t,u=(d-1)*r+c-n,h=(p-1)*o+l-s,f=Math.floor(e/2),y=e-f,w=Math.floor(u/2),g=u-w,v=Math.floor(h/2);m={top:w,bottom:g,left:v,right:h-v,front:f,back:y,type:"SAME"}}}return{padInfo:m,outDepth:_,outHeight:d,outWidth:p}}(a,l,u,m,y,w,g,k,I,S,i),R=r?f*_:f;let A;return"channelsFirst"===o?A=[c,R,N,T,E]:"channelsLast"===o&&(A=[c,N,T,E,R]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:m,inChannels:_,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:C,strideDepth:y,strideHeight:w,strideWidth:g,filterDepth:d,filterHeight:p,filterWidth:h,effectiveFilterDepth:k,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:x,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function $o(e,t,n){const s=ni(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+s)/2)}function ei(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ti(e){return"number"===typeof e?[e,e,e]:e}function ni(e,t){return t<=1?e:e+(e-1)*(t-1)}function si(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function ai(e){const[t,n,s]=ei(e);return 1===t&&1===n&&1===s}function ri(e,t){return ai(e)||ai(t)}function oi(e){return ei(e).every((e=>e>0))}function ii(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function ci(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)f(x(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{f(x(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const li=za({reshape_:function(e,t){const n={x:La(e,"x","reshape","string_or_numeric")},s={shape:t};return Na.runKernel(dn,n,s)}});const ui=za({avgPool_:function(e,t,n,s,a){const r=La(e,"x","avgPool","float32");f(ri(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=r,i=!1;3===r.rank&&(i=!0,o=li(r,[1,r.shape[0],r.shape[1],r.shape[2]])),f(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),ci("avgPool",s,a);const c={x:o},l={filterSize:t,strides:n,pad:s,dimRoundingMode:a};let u=Na.runKernel(he,c,l);return u=zr(u,r.dtype),i?li(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const mi=za({avgPool3d_:function(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=La(e,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=li(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),f("NDHWC"===r,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),f("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),ci("avgPool3d",s,a);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:a,dataFormat:r};let m=Na.runKernel(ye,l,u);return m=zr(m,i.dtype),c?li(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const _i=za({batchNorm_:function(e,t,n,s,a,r){null==r&&(r=.001);const o=La(e,"x","batchNorm"),i=La(t,"mean","batchNorm"),c=La(n,"variance","batchNorm");let l,u;null!=a&&(l=La(a,"scale","batchNorm")),null!=s&&(u=La(s,"offset","batchNorm")),f(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const m={x:function(e){let t;return t=0===e.rank||1===e.rank?li(e,[1,1,1,e.size]):2===e.rank?li(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?li(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:u,mean:i,variance:c},_={varianceEpsilon:r},d=Na.runKernel(mt,m,_);return li(d,o.shape)}});const di=za({batchNorm2d_:function(e,t,n,s,a,r){const o=La(e,"x","batchNorm"),i=La(t,"mean","batchNorm"),c=La(n,"variance","batchNorm");let l,u;return null!=a&&(l=La(a,"scale","batchNorm")),null!=s&&(u=La(s,"offset","batchNorm")),f(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),f(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),f(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&f(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&f(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),_i(o,i,c,u,l,r)}});const pi=za({batchNorm3d_:function(e,t,n,s,a,r){const o=La(e,"x","batchNorm"),i=La(t,"mean","batchNorm"),c=La(n,"variance","batchNorm");let l,u;return null!=a&&(l=La(a,"scale","batchNorm")),null!=s&&(u=La(s,"offset","batchNorm")),f(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),f(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),f(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&f(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&f(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),_i(o,i,c,u,l,r)}});const hi=za({batchNorm4d_:function(e,t,n,s,a,r){const o=La(e,"x","batchNorm"),i=La(t,"mean","batchNorm"),c=La(n,"variance","batchNorm");let l,u;return null!=a&&(l=La(a,"scale","batchNorm")),null!=s&&(u=La(s,"offset","batchNorm")),f(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),f(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),f(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&f(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&f(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),_i(o,i,c,u,l,r)}});const fi=za({broadcastTo_:function(e,t){let n=La(e,"broadcastTo","x");const s=n.shape;if(G(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=li(n,e)}const a=n.shape,r=Array.from(t);for(let c=t.length-1;c>=0;c--)if(a[c]===t[c])r[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(s,"] cannot be broadcast to [").concat(t,"]."));if(0===r.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Pr(n);const o={x:n},i={reps:r};return Na.runKernel($n,o,i)}});const yi=za({clipByValue_:function(e,t,n){const s=La(e,"x","clipByValue");if(f(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return no(s.shape,t,s.dtype);const a={x:s},r={clipValueMin:t,clipValueMax:n};return Na.runKernel(Ce,a,r)}});const wi=za({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;f(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ba(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return Pr(n[0]);const s=n,a={axis:t};return Na.runKernel(Ee,s,a)}});const gi=za({concat1d_:function(e){return wi(e,0)}});const vi=za({concat2d_:function(e,t){return wi(e,t)}});const xi=za({concat3d_:function(e,t){return wi(e,t)}});const bi=za({concat4d_:function(e,t){return wi(e,t)}});const ki=za({conv2d_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=La(e,"x","conv2d","float32"),c=La(t,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=li(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),f(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),ci("conv2d",s,o);const m="NHWC"===a?l.shape[3]:l.shape[1];f(m===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(m,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),f(ri(n,r),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(r,"'"))),f(oi(r),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),f(oi(n),(()=>"Error in conv2D: Strides should be larger than 0."));const _={x:l,filter:c},d={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:o},p=Na.runKernel(Re,_,d);return u?li(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Ii=za({conv1d_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=La(e,"x","conv1d"),c=La(t,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=li(i,[1,i.shape[0],i.shape[1]])),f(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),f(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),ci("conv1d",s,o),f(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),f(ri(n,r),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(r,"'"))),f(oi(r),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),f(oi(n),(()=>"Error in conv1D: Stride should be larger than 0.")),f("NWC"===a,(()=>"Error in conv1d: got dataFormat of ".concat(a," but only NWC is currently supported.")));const m=li(c,[1,c.shape[0],c.shape[1],c.shape[2]]),_=li(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=ki(_,m,[1,n],s,"NHWC",[1,r],o);return li(d,u?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}});const Si=za({conv2DBackpropInput_:function(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;f(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,c=t,l=!1;3===t.rank&&(l=!0,c=li(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),f(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),f(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),f(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===r?i[3]:i[1],m="NHWC"===r?c.shape[3]:c.shape[1];f(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),f(m===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(m,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),ci("conv2dDerInput",a,o);const _={dy:c,filter:n},d={strides:s,pad:a,dataFormat:r,dimRoundingMode:o,inputShape:i},p=Na.runKernel(Fe,_,d);return l?li(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Ci=za({conv2dTranspose_:function(e,t,n,s,a,r){const o=La(e,"x","conv2dTranspose"),i=La(t,"filter","conv2dTranspose");return Si(n,o,i,s,a,"NHWC",r)}});const Ni=za({conv3d_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=La(e,"x","conv3d"),i=La(t,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=li(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),f(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),f(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),f(ri(n,r),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(r,"'"))),f("NDHWC"===a,(()=>"Error in conv3d: got dataFormat of ".concat(a," but only NDHWC is currently supported."))),f(oi(r),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),f(oi(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},m={strides:n,pad:s,dataFormat:a,dilations:r},_=Na.runKernel(De,u,m);return l?li(_,[_.shape[1],_.shape[2],_.shape[3],_.shape[4]]):_}});const Ti=za({conv3DBackpropInput_:function(e,t,n,s,a){f(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let r=e,o=t,i=!1;4===t.rank&&(i=!0,o=li(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,e[0],e[1],e[2],e[3]]);const c=r[4],l=o.shape[4];f(5===r.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(r.length,"."))),f(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),f(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),f(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),f(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},m={pad:a,strides:s,inputShape:r},_=Na.runKernel(Oe,u,m);return i?li(_,[_.shape[1],_.shape[2],_.shape[3],_.shape[4]]):_}});const Ei=za({conv3dTranspose_:function(e,t,n,s,a){const r=La(e,"x","conv3dTranspose"),o=La(t,"filter","conv3dTranspose");return Ti(n,r,o,s,a)}});const Ri=za({denseBincount_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=La(e,"x","denseBincount"),r=La(t,"weights","denseBincount");f("int32"===a.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(a.dtype))),f(a.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(a.rank,"."))),f(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),f(r.size===a.size||0===r.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const o={x:a,weights:r},i={size:n,binaryOutput:s};return Na.runKernel(Ue,o,i)}});const Ai=za({depthwiseConv2d_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=La(e,"x","depthwiseConv2d","float32"),c=La(t,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=li(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),f(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const m="NHWC"===a?l.shape[3]:l.shape[1];f(m===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(m,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),ci("depthwiseConv2d",s,o);const _={x:l,filter:c},d={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:o},p=Na.runKernel(Ge,_,d);return u?li(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Fi=za({elu_:function(e){const t={x:La(e,"x","elu","float32")};return Na.runKernel($e,t)}});const Di=za({equal_:function(e,t){let n=La(e,"a","equal","string_or_numeric"),s=La(t,"b","equal","string_or_numeric");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(nt,a)}});const Mi=za({erf_:function(e){let t=La(e,"x","erf");f("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=zr(t,"float32"));const n={x:t};return Na.runKernel(tt,n)}});const Oi=za({exp_:function(e){const t={x:La(e,"x","exp")};return Na.runKernel(st,t)}});const Li=za({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=La(e,"x","expandDims","string_or_numeric");f(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},a={dim:t};return Na.runKernel(at,s,a)}});const Bi=za({tile_:function(e,t){const n=La(e,"x","tile","string_or_numeric");f(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const s={x:n},a={reps:t};return Na.runKernel($n,s,a)}});const zi=za({eye_:function(e,t,n){null==t&&(t=e);const s=Br([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const r=li(s.toTensor(),[e,t]);if(null==n)return r;if(1===n.length)return Bi(Li(r,0),[n[0],1,1]);if(2===n.length)return Bi(Li(Li(r,0),0),[n[0],n[1],1,1]);if(3===n.length)return Bi(Li(Li(Li(r,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Pi=za({floor_:function(e){const t={x:La(e,"x","floor","float32")};return Na.runKernel(lt,t)}});const Wi=za({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a={x:La(e,"x","gather"),indices:La(t,"indices","gather","int32")},r={axis:n,batchDims:s};return Na.runKernel(_t,a,r)}});const Ui=za({greater_:function(e,t){let n=La(e,"a","greater","string_or_numeric"),s=La(t,"b","greater","string_or_numeric");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(pt,a)}});const Vi=za({greaterEqual_:function(e,t){let n=La(e,"a","greaterEqual","string_or_numeric"),s=La(t,"b","greaterEqual","string_or_numeric");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(ht,a)}});const Gi=za({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:La(e,"x","leakyRelu")},s={alpha:t};return Na.runKernel(bt,n,s)}});const Hi=za({log_:function(e){const t={x:La(e,"x","log","float32")};return Na.runKernel(Ct,t)}});const ji=za({log1p_:function(e){const t={x:La(e,"x","log1p")};return Na.runKernel(Nt,t)}});const Ki=za({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:La(e,"x","max")},a={reductionIndices:t,keepDims:n};return Na.runKernel(Dt,s,a)}});const qi=za({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=La(e,"x","sum");"bool"===s.dtype&&(s=zr(s,"int32"));const a={x:s},r={axis:t,keepDims:n};return Na.runKernel(Mn,a,r)}});const Xi=za({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=La(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const s=qr(((e,n)=>{const s=Ki(e,t,!0),a=ro(e,s),r=ro(zr(a,"float32"),Hi(qi(Oi(a),t,!0)));n([r]);return{value:r,gradFunc:(e,n)=>{const[s]=n,a=Oi(s);return ro(e,Gr(qi(e,t,!0),a))}}}));return s(n)}});function Yi(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Qi(e,t,n){const s=e.length+t.length,a=[];let r=0,o=0;for(let i=0;i<s;i++)-1===n.indexOf(i)?a.push(e[r++]):a.push(t[o++]);return a}function Ji(e,t){const n=[],s=e.length;for(let a=0;a<s;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Zi(e,t){return Qi(e,t.map((e=>1)),t)}function $i(e,t,n){f(Yi(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function ec(e,t){if(Yi(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function tc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function nc(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const sc=za({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=La(e,"x","logSumExp"),a=C(t,s.shape),r=Ki(s,a,!0),o=ro(s,r),i=Oi(o),c=qi(i,a),l=Hi(c),u=Wr(li(r,l.shape),l);if(n){const e=Zi(u.shape,a);return li(u,e)}return u}});const ac=za({logicalAnd_:function(e,t){const n=La(e,"a","logicalAnd","bool"),s=La(t,"b","logicalAnd","bool");uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(Tt,a)}});const rc=za({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=La(e,"a","matMul"),r=La(t,"b","matMul");[a,r]=ga(a,r);const o={a:a,b:r},i={transposeA:n,transposeB:s};return Na.runKernel(ge,o,i)}});const oc=za({maxPool_:function(e,t,n,s,a){const r=La(e,"x","maxPool");let o=r,i=!1;3===r.rank&&(i=!0,o=li(r,[1,r.shape[0],r.shape[1],r.shape[2]])),f(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),f(ri(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),ci("maxPool",s,a);const c={x:o},l={filterSize:t,strides:n,pad:s,dimRoundingMode:a},u=Na.runKernel(Ot,c,l);return i?li(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const ic=za({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=La(e,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=li(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),f("NDHWC"===r,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),ci("maxPool3d",s,a);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:a,dataFormat:r},m=Na.runKernel(Bt,l,u);return c?li(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const cc=za({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:La(e,"x","mean")},a={axis:t,keepDims:n};return Na.runKernel(Wt,s,a)}});const lc=za({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:La(e,"x","min")},a={axis:t,keepDims:n};return Na.runKernel(Ut,s,a)}});const uc=za({minimum_:function(e,t){let n=La(e,"a","minimum"),s=La(t,"b","minimum");[n,s]=ga(n,s),"bool"===n.dtype&&(n=zr(n,"int32"),s=zr(s,"int32")),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(Vt,a)}});const mc=za({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=C(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=La(e,"x","moments")).shape),s=cc(e,n,t);let a=s.shape;t||(a=Zi(s.shape,n));const r=jr(ro(zr(e,"float32"),li(s,a)));return{mean:s,variance:cc(r,n,t)}}});const _c=za({neg_:function(e){const t={x:La(e,"x","neg")};return Na.runKernel(qt,t)}});const dc=za({notEqual_:function(e,t){let n=La(e,"a","notEqual","string_or_numeric"),s=La(t,"b","notEqual","string_or_numeric");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(Xt,a)}});const pc=za({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const r={indices:La(e,"indices","oneHot","int32")},o={dtype:a,depth:t,onValue:n,offValue:s};return Na.runKernel($t,r,o)}});function hc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(G(e),"complex64"===t){const t=hc(e,"float32"),n=hc(e,"float32");return Pa(t,n)}const n=U(g(e),t);return Na.makeTensor(n,e,t)}function fc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(G(e),"complex64"===t){const t=fc(e,"float32"),n=hc(e,"float32");return Pa(t,n)}const n=W(g(e),t);return Na.makeTensor(n,e,t)}const yc=za({onesLike_:function(e){const t={x:La(e,"x","onesLike")};return Na.runKernel(Zt,t)}});const wc=za({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=La(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},r={x:s};return Na.runKernel(tn,r,a)}});const gc=za({prelu_:function(e,t){const n={x:La(e,"x","prelu"),alpha:La(t,"alpha","prelu")};return Na.runKernel(sn,n)}});var vc=n(334);class xc{constructor(e,t,n,s,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=a||Math.random();this.random=vc.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,a,r;do{s=2*this.random()-1,a=2*this.random()-1,r=s*s+a*a}while(r>=1||0===r);const o=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class bc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"===typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=vc.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const kc=za({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(G(e),null!=s&&"bool"===s)throw new Error("Unsupported data type ".concat(s));const r=new xc(t,n,s,!1,a),o=Br(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});const Ic=za({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;G(e);const r=Br(e,s),o=new bc(t,n,null,a);for(let i=0;i<r.values.length;i++)r.values[i]=o.nextValue();return r.toTensor()}});function Sc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:s};return Na.runKernel(ln,{},a)}const Cc=za({relu_:function(e){const t={x:La(e,"x","relu")};return Na.runKernel(_n,t)}});const Nc=za({reverse_:function(e,t){const n={x:La(e,"x","reverse")},s={dims:t};return Na.runKernel(gn,n,s)}});const Tc=za({selu_:function(e){const t={x:La(e,"x","selu")};return Na.runKernel(Cn,t)}});const Ec=za({separableConv2d_:function(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=La(e,"x","separableConv2d"),c=La(t,"depthwiseFilter","separableConv2d"),l=La(n,"pointwiseFilter","separableConv2d");let u=i,m=!1;if(3===i.rank&&(m=!0,u=li(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");f(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),f(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),f(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),f(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),f(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const _=c.shape[2],d=c.shape[3];f(l.shape[2]===_*d,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(_*d,", ")+"but got ".concat(l.shape[2],".")));const p=Ai(u,c,s,a,o,r),h=ki(p,l,1,"valid",o);return m?li(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Rc=za({sigmoid_:function(e){const t={x:La(e,"x","sigmoid","float32")};return Na.runKernel(An,t)}});const Ac=za({slice_:function(e,t,n){const s=La(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:t,size:n};return Na.runKernel(Nn,a,r)}});const Fc=za({slice1d_:function(e,t,n){const s=La(e,"x","slice1d");return f(1===s.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(s.rank," tensor"))),Ac(s,[t],[n])}});const Dc=za({slice2d_:function(e,t,n){const s=La(e,"x","slice2d");return f(2===s.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(s.rank," tensor"))),Ac(s,t,n)}});const Mc=za({slice3d_:function(e,t,n){const s=La(e,"x","slice3d");return f(3===s.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(s.rank," tensor"))),Ac(s,t,n)}});const Oc=za({slice4d_:function(e,t,n){const s=La(e,"x","slice4d");return f(4===s.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(s.rank," tensor"))),Ac(s,t,n)}});const Lc=za({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=La(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const s={logits:n},a={dim:t};return Na.runKernel(Bn,s,a)}});const Bc=za({softplus_:function(e){const t={x:La(e,"x","softplus")};return Na.runKernel(Fn,t)}});const zc=za({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s={x:La(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Na.runKernel(Ln,s,a)}});const Pc=za({squeeze_:function(e,t){const n=La(e,"x","squeeze","string_or_numeric");return li(n,N(n.shape,t).newShape)}});const Wc=za({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Ba(e,"tensors","stack","string_or_numeric");f(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&f(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,a={axis:t};return Na.runKernel(en,s,a)}});const Uc=za({tanh_:function(e){const t={x:La(e,"x","tanh","float32")};return Na.runKernel(Zn,t)}});function Vc(e,t){w(e);const n=Da(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Wa(e,null,n,t)}function Gc(e,t,n){if(w(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Da(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Wa(e,t,s,n)}const Hc=za({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(G(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const r=new xc(t,n,s,!0,a),o=Br(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});const jc=za({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=La(e,"x","unstack","string_or_numeric");f(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const s={value:n},a={axis:t};return Na.runKernel(as,s,a)}});const Kc=za({where_:function(e,t,n){const s=La(t,"a","where"),a=La(n,"b","where"),r=La(e,"condition","where","bool"),o=uo(uo(r.shape,s.shape),a.shape),i={condition:fi(r,o),t:fi(s,o),e:fi(a,o)};return Na.runKernel(Sn,i)}});const qc=za({imag_:function(e){const t={input:La(e,"input","imag")};return Na.runKernel(wt,t)}});const Xc=za({real_:function(e){const t={input:La(e,"input","real")};return Na.runKernel(un,t)}});const Yc=za({transpose_:function(e,t,n){const s=La(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),f(s.rank===t.length,(()=>"Error in transpose: rank of input ".concat(s.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{f(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(s.rank-1)+" but got ".concat(t)))})),s.rank<=1)return s.clone();const a={x:s},r={perm:t};return"complex64"===s.dtype?Ka((()=>{let e=Xc(s),t=qc(s);return e=Na.runKernel(ns,{x:e},r),t=Na.runKernel(ns,{x:t},r),n&&(t=_c(t)),Pa(e,t)})):Na.runKernel(ns,a,r)}});const Qc=za({dropout_:function(e,t,n,s){const a=La(e,"x","dropout");if(f("float32"===a.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(a.dtype," tensor instead."))),f(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof oa?a.clone():a;const r=function(e,t){if(null==t)return e.shape.slice();if(v(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(a,n),o=1-t,i=Vr(Pi(Wr(Ic(r,0,1,"float32",s),o)),o);return Gr(a,i)}});const Jc=za({fft_:function(e){f("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Na.runKernel(ot,t)}});const Zc=za({rfft_:function(e,t){f("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const s=e.size/n;let a;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,a=Ac(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,a=wi([e,hc(s)],e.shape.length-1),n=t}else a=e;const r=Kr(a),o=li(Pa(a,r),[s,n]),i=Jc(o),c=Math.floor(n/2)+1,l=Xc(i),u=qc(i),m=zc(l,[c,n-c],l.shape.length-1),_=zc(u,[c,n-c],u.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=c,li(Pa(m[0],_[0]),d)}});const $c=za({ifft_:function(e){f("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Na.runKernel(yt,t)}});const el=za({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const a=li(e,[n,t]);s=$c(a)}else{const a=[n,2*(t-1)],r=li(Xc(e),[n,t]),o=li(qc(e),[n,t]),i=Nc(Ac(r,[0,1],[n,t-2]),1),c=Gr(Nc(Ac(o,[0,1],[n,t-2]),1),Xr(-1)),l=wi([r,i],1),u=wi([o,c],1),m=li(Pa(l,u),[a[0],a[1]]);s=$c(m)}if(s=Xc(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=li(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}});const tl=za({conv2DBackpropFilter_:function(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=li(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=li(t,[1,t.shape[0],t.shape[1],t.shape[2]])),f(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),f(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),f(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===r?i.shape[3]:i.shape[1],u="NHWC"===r?c.shape[3]:c.shape[1];f(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),f(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),ci("conv2dDerFilter",a,o);const m={x:i,dy:c},_={strides:s,pad:a,dataFormat:r,dimRoundingMode:o,filterShape:n};return Na.runKernel(Ae,m,_)}});const nl=za({relu6_:function(e){const t={x:La(e,"x","relu6")};return Na.runKernel(wn,t)}});const sl=za({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:La(e,"x","step")},s={alpha:t};return Na.runKernel(is,n,s)}});function al(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Gr(e,sl(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function rl(e,t){let n=t;const s=lo(e.shape,t.shape);return s.length>0&&(n=qi(n,s)),li(n,e.shape)}function ol(e,t,n,s){if("linear"===t)return e;if("relu"===t)return Cc(e);if("elu"===t)return Fi(e);if("relu6"===t)return nl(e);if("prelu"===t)return gc(e,n);if("leakyrelu"===t)return Gi(e,s);if("sigmoid"===t)return Rc(e);throw new Error("Unknown fused activation ".concat(t,"."))}const il=(e,t)=>!(e>0)||"linear"===t;const cl=za({fusedConv2d_:function(e){let{x:t,filter:n,strides:s,pad:a,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:m}=e;if(l=l||"linear",!1===il(Na.state.gradientDepth,l)){f("NHWC"===r,(()=>"Error in fused conv2d: got dataFormat of ".concat(r," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=ki(t,n,s,a,r,o,i);return null!=c&&(e=Wr(e,c)),ol(e,l,u,m)}const _=La(t,"x","conv2d","float32"),d=La(n,"filter","conv2d","float32");let p=_,h=!1;3===_.rank&&(h=!0,p=li(_,[1,_.shape[0],_.shape[1],_.shape[2]])),f(4===p.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(p.rank,"."))),f(4===d.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(d.rank,"."))),ci("fused conv2d",a,i);const y="NHWC"===r?p.shape[3]:p.shape[1];f(d.shape[2]===y,(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(d.shape[2],"."))),f(ri(s,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(o,"'")));const w=Jo(p.shape,d.shape,s,o,a,i);let g,v;if(null!=c&&(g=La(c,"bias","fused conv2d"),[g]=ga(g,_),"NHWC"===r?uo(w.outShape,g.shape):(f(g.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(g.shape.length,"."))),f(0===g.shape.length||g.shape[0]===w.outChannels||1===g.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(g.shape,") is not ")+"compatible with the number of output channels "+"(".concat(w.outChannels,")"))))),null!=u){const e=u.shape;if(f(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)f(1===e[0]||e[0]===w.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(w.outChannels,").")));else if(3===e.length)try{uo(e,w.outShape)}catch(I){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(w.outShape,").");throw Error(t)}v=La(u,"prelu weights","fused conv2d")}const x=(e,t)=>{f("NHWC"===r,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(r," but only NHWC is currently supported.")));const[n,i,c,u]=t,m=al(e,c,l);f(ai(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const _=[Si(i.shape,m,n,s,a),tl(i,m,n.shape,s,a)];if(null!=u){const e=rl(u,m);_.push(e)}return _},b={x:p,filter:d,bias:g,preluActivationWeights:v},k={strides:s,pad:a,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:m};if(null==c){const e=qr(((e,t,n)=>{let s=Na.runKernel(ms,b,k);return n([t,e,s]),h&&(s=li(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d)}{const e=qr(((e,t,n,s)=>{let a=Na.runKernel(ms,b,k);return s([t,e,a,n]),h&&(a=li(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(p,d,g)}}});const ll=za({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=li(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=li(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:c},u={strides:s,pad:a,dimRoundingMode:o,dilations:r,filterShape:n};return Na.runKernel(He,l,u)}});const ul=za({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t,c=!1;3===t.rank&&(c=!0,i=li(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},u={strides:s,pad:a,dimRoundingMode:o,dilations:r,inputShape:e},m=Na.runKernel(je,l,u);return c?li(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const ml=za({fusedMatMul_:function(e){let{a:t,b:n,transposeA:s=!1,transposeB:a=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===il(Na.state.gradientDepth,o)){let e=rc(t,n,s,a);return null!=r&&(e=Wr(e,r)),ol(e,o,i,c)}let l=La(t,"a","fused matMul"),u=La(n,"b","fused matMul");[l,u]=ga(l,u);const m=s?l.shape[l.rank-2]:l.shape[l.rank-1],_=a?u.shape[u.rank-1]:u.shape[u.rank-2],d=s?l.shape[l.rank-1]:l.shape[l.rank-2],p=a?u.shape[u.rank-2]:u.shape[u.rank-1],h=l.shape.slice(0,-2),y=u.shape.slice(0,-2),w=g(h),v=g(y);f(m===_,(()=>"Error in fused matMul: inner shapes (".concat(m,") and (")+"".concat(_,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(s)+" and transposeB=".concat(a," must match.")));const x=uo(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),b=li(l,s?[w,m,d]:[w,d,m]),k=li(u,a?[v,p,_]:[v,_,p]);let I,S;null!=r&&(I=La(r,"bias","fused matMul"),[I]=ga(I,l),uo(x,I.shape)),null!=i&&(S=La(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[n,i,c,l]=t,u=al(li(e,c.shape),c,o);let m,_;if(s||a?!s&&a?(m=rc(u,i,!1,!1),_=rc(u,n,!0,!1)):s&&!a?(m=rc(i,u,!1,!0),_=rc(n,u,!1,!1)):(m=rc(i,u,!0,!0),_=rc(u,n,!0,!0)):(m=rc(u,i,!1,!0),_=rc(n,u,!0,!1)),null!=r){return[m,_,rl(l,u)]}return[m,_]},N={a:b,b:k,bias:I,preluActivationWeights:S},T={transposeA:s,transposeB:a,activation:o,leakyreluAlpha:c};if(null==r){const e=qr(((e,t,n)=>{const s=Na.runKernel(us,N,T);return n([e,t,s]),{value:li(s,x),gradFunc:C}}));return e(b,k)}{const e=qr(((e,t,n,s)=>{const a=Na.runKernel(us,N,T);return s([e,t,a,n]),{value:li(a,x),gradFunc:C}}));return e(b,k,I)}}});const _l=za({cropAndResize_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=La(e,"image","cropAndResize"),i=La(t,"boxes","cropAndResize","float32"),c=La(n,"boxInd","cropAndResize","int32"),l=i.shape[0];f(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),f(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),f(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),f(2===s.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(s.length,"."))),f(s[0]>=1&&s[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(s))),f("bilinear"===a||"nearest"===a,(()=>"method must be bilinear or nearest, but was ".concat(a)));const u={image:o,boxes:i,boxInd:c},m={method:a,extrapolationValue:r,cropSize:s};return Na.runKernel(We,u,m)}});const dl=za({flipLeftRight_:function(e){const t=La(e,"image","flipLeftRight","float32");f(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Na.runKernel(ct,n,{})}});const pl=za({grayscaleToRGB_:function(e){const t=La(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];f(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),f(1===s,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(s,".")));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Bi(t,a)}});const hl=za({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];const a=n.map(((e,t)=>La(e,"tensors".concat(t),"einsum"))),r={equation:e};return Na.runKernel(Ze,a,r)}});const fl=za({rgbToGrayscale_:function(e){const t=La(e,"image","RGBToGrayscale"),n=t.rank-1,s=t.shape[n];f(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),f(3===s,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(s,".")));const a=t.dtype,r=zr(t,"float32"),o=Vc([.2989,.587,.114]);let i;switch(t.rank){case 2:i=hl("ij,j->i",r,o);break;case 3:i=hl("ijk,k->ij",r,o);break;case 4:i=hl("ijkl,l->ijk",r,o);break;case 5:i=hl("ijklm,m->ijkl",r,o);break;case 6:i=hl("ijklmn,n->ijklm",r,o);break;default:throw new Error("Not a valid tensor rank.")}return i=Li(i,-1),zr(i,a)}});const yl=za({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=La(e,"image","rotateWithOffset","float32");f(4===a.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(a.rank,".")));const r={image:a},o={radians:t,fillValue:n,center:s};return Na.runKernel(ls,r,o)}});function wl(e,t,n,s,a,r){null==s&&(s=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==r&&(r=0);const o=e.shape[0];return n=Math.min(n,o),f(0<=s&&s<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(s,"'"))),f(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),f(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),f(1===t.rank,(()=>"scores must be a 1D tensor")),f(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),f(0<=r&&r<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(r,"'"))),{maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}const gl=za({nonMaxSuppression_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=La(e,"boxes","nonMaxSuppression","float32"),o=La(t,"scores","nonMaxSuppression","float32"),i=wl(r,o,n,s,a);n=i.maxOutputSize,s=i.iouThreshold,a=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:s,scoreThreshold:a};return Na.runKernel(Yt,{boxes:r,scores:o},c)}});function vl(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,a=e.length,r=0,o=!1;for(;s<a;){r=s+(a-s>>>1);const i=n(t,e[r]);i>0?s=r+1:(a=r,o=!i)}return o?s:-s-1}(e,t,n||xl)}(e,t,n),a=s<0?-(s+1):s;e.splice(a,0,t)}function xl(e,t){return e>t?1:e<t?-1:0}function bl(e,t,n,s,a){return Sl(e,t,n,s,a,0)}function kl(e,t,n,s,a,r){return Sl(e,t,n,s,a,0,!1,r,!0)}function Il(e,t,n,s,a,r){return Sl(e,t,n,s,a,r,!0)}function Sl(e,t,n,s,a,r){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let f=0;f<t.length;f++)t[f]>a&&l.push({score:t[f],boxIndex:f,suppressBeginIndex:0});l.sort(Tl);const u=r>0?-.5/r:0,m=[],_=[];for(;m.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:r,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let c=m.length-1;c>=o;--c){const n=Cl(e,r,m[c]);if(n>=s){i=!0;break}if(t.score=t.score*Nl(s,u,n),t.score<=a)break}t.suppressBeginIndex=m.length,i||(t.score===n?(m.push(r),_.push(t.score)):t.score>a&&vl(l,t,Tl))}const d=m.length,p=n-d;i&&p>0&&(m.push(...new Array(p).fill(0)),_.push(...new Array(p).fill(0)));const h={selectedIndices:m};return o&&(h.selectedScores=_),c&&(h.validOutputs=d),h}function Cl(e,t,n){const s=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),r=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),l=Math.min(a[0],a[2]),u=Math.min(a[1],a[3]),m=Math.max(a[0],a[2]),_=Math.max(a[1],a[3]),d=(i-r)*(c-o),p=(m-l)*(_-u);if(d<=0||p<=0)return 0;const h=Math.max(r,l),f=Math.max(o,u),y=Math.min(i,m),w=Math.min(c,_),g=Math.max(y-h,0)*Math.max(w-f,0);return g/(d+p-g)}function Nl(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Tl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const El=async function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=La(e,"boxes","nonMaxSuppressionAsync"),o=La(t,"scores","nonMaxSuppressionAsync"),i=wl(r,o,n,s,a);n=i.maxOutputSize,s=i.iouThreshold,a=i.scoreThreshold;const c=await Promise.all([r.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:m}=bl(l,u,n,s,a);return r!==e&&r.dispose(),o!==t&&o.dispose(),Vc(m,"int32")};const Rl=za({nonMaxSuppressionWithScore_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=La(e,"boxes","nonMaxSuppression"),i=La(t,"scores","nonMaxSuppression"),c=wl(o,i,n,s,a,r);n=c.maxOutputSize,s=c.iouThreshold,a=c.scoreThreshold,r=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},m=Na.runKernel(Jt,l,u);return{selectedIndices:m[0],selectedScores:m[1]}}});const Al=async function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=La(e,"boxes","nonMaxSuppressionAsync"),i=La(t,"scores","nonMaxSuppressionAsync"),c=wl(o,i,n,s,a,r);n=c.maxOutputSize,s=c.iouThreshold,a=c.scoreThreshold,r=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],m=l[1],{selectedIndices:_,selectedScores:d}=Il(u,m,n,s,a,r);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Vc(_,"int32"),selectedScores:Vc(d)}};const Fl=za({nonMaxSuppressionPadded_:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=La(e,"boxes","nonMaxSuppression"),i=La(t,"scores","nonMaxSuppression"),c=wl(o,i,n,s,a,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:r},m=Na.runKernel(Qt,l,u);return{selectedIndices:m[0],validOutputs:m[1]}}});const Dl=async function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=La(e,"boxes","nonMaxSuppressionAsync"),i=La(t,"scores","nonMaxSuppressionAsync"),c=wl(o,i,n,s,a,null),l=c.maxOutputSize,u=c.iouThreshold,m=c.scoreThreshold,[_,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:p,validOutputs:h}=kl(_,d,l,u,m,r);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Vc(p,"int32"),validOutputs:Xr(h,"int32")}};const Ml=za({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=La(e,"images","resizeBilinear");f(3===a.rank||4===a.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(a.rank,"."))),f(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),f(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let r=a,o=!1;3===a.rank&&(o=!0,r=li(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:r},c={alignCorners:n,halfPixelCenters:s,size:t},l=Na.runKernel(fn,i,c);return o?li(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Ol=za({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=La(e,"images","resizeNearestNeighbor");f(3===a.rank||4===a.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(a.rank,"."))),f(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),f("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),f(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let r=a,o=!1;3===a.rank&&(o=!0,r=li(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:r},c={alignCorners:n,halfPixelCenters:s,size:t},l=Na.runKernel(pn,i,c);return o?li(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Ll=za({bincount_:function(e,t,n){const s=La(e,"x","bincount"),a=La(t,"weights","bincount");f("int32"===s.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(s.dtype))),f(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),f(a.size===s.size||0===a.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(s.shape,", weights shape: ")+"".concat(a.shape,".")));const r={x:s,weights:a},o={size:n};return Na.runKernel(xe,r,o)}});const Bl=za({lessEqual_:function(e,t){let n=La(e,"a","lessEqual","string_or_numeric"),s=La(t,"b","lessEqual","string_or_numeric");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(It,a)}});const zl=za({round_:function(e){const t={x:La(e,"x","round")};return Na.runKernel(vn,t)}});const Pl=za({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=La(e,"image","threshold"),r=a.shape[0]*a.shape[1];let o,i,c,l,u=Gr(Vc([s]),255);if(f(3===a.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(a.rank,"."))),f(3===a.shape[2]||1===a.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(a.shape[2],"."))),f("int32"===a.dtype||"float32"===a.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(a.dtype,"."))),f("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===a.shape[2]){[o,i,c]=zc(a,[1,1,1],-1);const e=Gr(o,.2989),t=Gr(i,.587),n=Gr(c,.114);l=Wr(Wr(e,t),n)}else l=e;if("otsu"===t){u=function(e,t){let n,s,a,r,o,i,c=Vc([-1]),l=Vc([0]),u=Vc([0]);for(let m=0;m<e.size-1;m++){n=Ac(e,0,m+1),s=Ac(e,m+1),o=Vr(qi(n),t),i=Vr(qi(s),t);const _=qi(Gr(n,Sc(0,n.size)));a=Vr(_,qi(n));const d=no(s.shape,n.size),p=Wr(Sc(0,s.size),d),h=Gr(s,p);r=Vr(qi(h),qi(s));const f=ro(a,r),y=ro(a,r),w=Gr(o,i);u=Gr(Gr(w,f),y);const g=Ui(u,l);l=Kc(g,u,l),c=Kc(g,Vc([m]),c)}return c}(Ll(zr(zl(l),"int32"),Ua([]),256),r)}const m=n?Bl(l,u):Ui(l,u);return zr(Gr(m,255),"int32")}});const Wl=za({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5?arguments[5]:void 0;const o=La(e,"image","transform","float32"),i=La(t,"transforms","transform","float32");f(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),f(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),f(null==r||2===r.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(r,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:s,fillValue:a,outputShape:r};return Na.runKernel(ts,c,l)}});const Ul=za({less_:function(e,t){let n=La(e,"a","less","string_or_numeric"),s=La(t,"b","less","string_or_numeric");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(kt,a)}});const Vl=za({bandPart_:function(e,t,n){const s=La(e,"a","bandPart");f(s.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(s.rank,".")));const a=s.shape,[r,o]=s.shape.slice(-2);let i,c;"number"===typeof t?(f(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),f(t<=r,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(r,")."))),i=La(t<0?r:t,"numLower","bandPart")):(f("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Kc(Ul(t,0),r,uc(t,r))),"number"===typeof n?(f(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),f(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=La(n<0?o:n,"numUpper","bandPart")):(f("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=Kc(Ul(n,0),o,uc(n,o)));const l=li(Sc(0,r,1,"int32"),[-1,1]),u=Sc(0,o,1,"int32"),m=ro(l,u),_=ac(Bl(m,i),Vi(m,_c(c))),d=hc([r,o],s.dtype);return li(Wc(jc(li(s,[-1,r,o])).map((e=>Kc(_,e,d)))),a)}});function Gl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return io(e);if(1!==e.rank&&null===n)return Gl(li(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return qi(io(e),n);if(t===1/0)return Ki(io(e),n);if(t===-1/0)return lc(io(e),n);if("euclidean"===t||2===t)return Hr(qi(ao(io(e),Xr(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return Ki(qi(io(e),n[0]),n[1]-1);if(t===1/0)return Ki(qi(io(e),n[1]),n[0]);if(t===-1/0)return lc(qi(io(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Hr(qi(jr(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Hl=za({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Gl(e=La(e,"x","norm"),t,n);let r=a.shape;if(s){const t=C(n,e.shape);r=Zi(a.shape,t)}return li(a,r)}});const jl=za({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,f(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)f(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=zc(e,e.shape[0],0).map((e=>Pc(e,[0])));f(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],s=e;for(let a=0;a<e.length;++a)n.push(Na.tidy((()=>{let e=s[a];if(a>0)for(let t=0;t<a;++t){const s=Gr(qi(Gr(n[t],e)),n[t]);e=ro(e,s)}return Vr(e,Hl(e,"euclidean"))})));return t?Wc(n,0):n}});function Kl(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Na.tidy((()=>{f(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],s=e.shape[1];let a=zi(n),r=Pr(e);const o=Gc([[1]],[1,1]);let i=Pr(o);const c=n>=s?s:n;for(let e=0;e<c;++e){const t=r,c=i,l=a;[i,r,a]=Na.tidy((()=>{const t=Ac(r,[e,e],[n-e,1]),c=Hl(t),l=Ac(r,[e,e],[1,1]),u=Kc(Ui(l,0),Gc([[-1]]),Gc([[1]])),m=ro(l,Gr(u,c)),_=Vr(t,m);i=1===_.shape[0]?Pr(o):wi([o,Ac(_,[1,0],[_.shape[0]-1,_.shape[1]])],0);const d=_c(Vr(rc(u,m),c)),p=Ac(r,[e,0],[n-e,s]),h=Gr(d,i),f=Yc(i);if(0===e)r=ro(p,rc(h,rc(f,p)));else{const t=ro(p,rc(h,rc(f,p)));r=wi([Ac(r,[0,0],[e,s]),t],0)}const y=Yc(h),w=Ac(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=ro(w,rc(rc(w,i),y));else{const t=ro(w,rc(rc(w,i),y));a=wi([Ac(a,[0,0],[n,e]),t],1)}return[i,r,a]})),qa([t,c,l])}return!t&&n>s&&(a=Ac(a,[0,0],[n,s]),r=Ac(r,[0,0],[s,s])),[a,r]}))}const ql=za({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(f(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Kl(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=jc(li(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],r=[];s.forEach((e=>{const[n,s]=Kl(e,t);a.push(n),r.push(s)}));return[li(Wc(a,0),e.shape),li(Wc(r,0),e.shape)]}}});var Xl;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Xl||(Xl={}));const Yl=za({squaredDifference_:function(e,t){let n=La(e,"a","squaredDifference"),s=La(t,"b","squaredDifference");[n,s]=ga(n,s),uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(Gn,a,{})}});const Ql={flipLeftRight:dl,grayscaleToRGB:pl,resizeNearestNeighbor:Ol,resizeBilinear:Ml,rgbToGrayscale:fl,rotateWithOffset:yl,cropAndResize:_l,nonMaxSuppression:gl,nonMaxSuppressionAsync:El,nonMaxSuppressionWithScore:Rl,nonMaxSuppressionWithScoreAsync:Al,nonMaxSuppressionPadded:Fl,nonMaxSuppressionPaddedAsync:Dl,threshold:Pl,transform:Wl},Jl={bandPart:Vl,gramSchmidt:jl,qr:ql};const Zl=class{static sgd(e){return new po(e)}static momentum(e,t){return new ho(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new fo(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new oo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new to(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new _o(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new so(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},$l="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function eu(){return new Promise((e=>$l((()=>e()))))}function tu(e,t){const n=e[0].length;e.forEach(((e,t)=>{f(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),f(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const s=e[0];e.forEach(((e,a)=>{for(let r=0;r<n;r++)f(r===t||e[r]===s[r],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(a,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(s,") ")+"along the non-concatenated axis ".concat(a,".")))}))}function nu(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var su;function au(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(s.length));for(let a=1;a<n.length;++a){const r=n[a],o=s[s.length-n.length+a],i=s[o];if(r>=0)if(i>=0){if(i!==r)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(a+e,"] = ").concat(r," but shape[").concat(a+e,"] = ").concat(i))}else s[o]=r}return s}function ru(e){const t={FIRST_DIM_SIZE:su.FIRST_DIM_SIZE,VALUE_ROWIDS:su.VALUE_ROWIDS,ROW_LENGTHS:su.ROW_LENGTHS,ROW_SPLITS:su.ROW_SPLITS,ROW_LIMITS:su.ROW_LIMITS,ROW_STARTS:su.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function ou(e){return 0===e.length?0:e[0]===su.FIRST_DIM_SIZE?e.length-1:e.length}function iu(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(s,")"));for(let a=0;a<Math.min(n,s-1);++a){const n=e[a],s=t[a+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(a-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(a-e.length,"] = ").concat(s))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(su||(su={}));const cu=30;function lu(e){return e<=cu?e:L(e,Math.floor(Math.sqrt(e)))}function uu(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function mu(e,t,n){let s=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)s=s.concat([e[a+1]/t[a],t[a]]);s=s.concat(e.slice(n+1))}return s}function _u(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let s=t+1;s<e;++s)s<=2*t?(n.push(s),n.push(s-(t+1))):n.push(s)}else{const s=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?a.push(n):s.push(n);n.push(...s),n.push(0),n.push(...a)}return n}function du(e,t,n){let s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];s?a.push(e[0]/n):a.push(e[0]*n);for(let r=1;r<e.length;++r)r<=t.length?s?a.push(t[r-1]*e[r]):a.push(e[r]/t[r-1]):a.push(e[r]);return a}function pu(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function hu(e,t,n){const s=e.slice(0,1);for(let a=0;a<n;++a)s.push(e[a+1]-t[a][0]-t[a][1]);return s}function fu(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(s<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(s,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[s-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[s-1]," vs. ").concat(n));if(0===g(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const a=t.shape,r=a[a.length-1];let o=1;for(let m=0;m<a.length-1;++m)o*=a[m];const i=e.shape,c=a.slice();c.pop();let l=1;for(let m=r;m<n;++m)l*=i[m],c.push(i[m]);const u=[...B(e.shape).map((e=>e/l)),1].slice(0,r);return[c,o,l,u]}function yu(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,r="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(s,", and batchDim: ").concat(a,".");if(n.rank<a)throw new Error(r+" update.rank < ".concat(a,". "));if(e.length<s+(n.rank-a))throw new Error(r+" Output shape length < ".concat(s+(n.rank-a)));if(n.rank!==a+e.length-s)throw new Error(r+" update.rank != ".concat(a+e.length-s));for(let o=0;o<a;++o)if(n.shape[o]!==t.shape[o])throw new Error(r+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-a;++o)if(n.shape[o+a]!==e[o+s])throw new Error(r+" updates.shape[".concat(o+a,"] (").concat(n.shape[o+a],") != shape[").concat(o+a,"] (").concat(e[o+a],")"))}function wu(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}yu(n,t,e)}function gu(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,r=n.length;let o=1;for(let c=a;c<r;++c)o*=n[c];const i=a<1?1:a;return{sliceRank:a,numUpdates:g(t.shape)/i,sliceSize:o,strides:[...B(n.slice(0,a)),1],outputSize:g(n)}}const vu=1.7580993408473768,xu=1.0507009873554805,bu=.3275911,ku=.254829592,Iu=-.284496736,Su=1.421413741,Cu=-1.453152027,Nu=1.061405429;function Tu(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Eu(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Ru(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],s[Math.floor(a/4)]=e[a+1];return{real:n,imag:s}}function Au(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],s[Math.floor(a/4)]=e[a+1];return{real:n,imag:s}}function Fu(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Du(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Mu(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const r=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:n,imag:s}}function Ou(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Lu="->",Bu=/->/g,zu=",",Pu="...";function Wu(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Bu,"").length)/Lu.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Lu,'").'));const[s,a]=e.split(Lu);f(-1===s.indexOf(Pu),(()=>'The ellipsis notation ("'.concat(Pu,'") is not supported yet.')));const r=s.split(zu),o=r.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let m=0;m<a.length;++m){const e=a[m];if(!r.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let m=0;m<s.length;++m){const e=s[m];-1===i.indexOf(e)&&e!==zu&&i.push(e)}const c=new Array(r.length);for(let m=0;m<o;++m){if(new Set(r[m].split("")).size!==r[m].length)throw new Error("Found duplicate axes in input component ".concat(r[m],". ")+"Support for duplicate axes in input is not implemented yet.");c[m]=[];for(let e=0;e<r[m].length;++e)c[m].push(i.indexOf(r[m][e]))}const l=i.length,u=[];for(let m=a.length;m<l;++m)u.push(m);return{allDims:i,summedDims:u,idDims:c}}function Uu(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const s=[];for(let a=0;a<e;++a)-1===n[a]&&s.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Vu(e,t,n){const s=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===s[t[a][n]]?s[t[a][n]]=e[n]:f(s[t[a][n]]===e[n],(()=>"Expected dimension ".concat(s[t[a][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function Gu(e,t){const n=e,s=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let o=0;o<a;++o)s.push([]);const r=[];for(let o=0;o<n.length;++o){const e=ju(t,n[o]);for(const t of e)-1===r.indexOf(t)&&(s[o].push(t),r.push(t))}return{path:n,steps:s}}function Hu(e){return e.every(((e,t)=>e===t))}function ju(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function Ku(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=[];if("number"===typeof t)f(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);f(a<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const s=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-s}f(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function qu(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Xu(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Yu(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Qu(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Ju(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function Zu(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function $u(e,t){const n=g(e),s=g(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(s,". inputShape=").concat(e," outputShape= ").concat(t)}function em(e,t){const n=g(e),s=g(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(s,". inputShape=").concat(e," outputShape=").concat(t)}function tm(){return"segment ids must be >= 0"}function nm(){return"segment ids are not increasing"}function sm(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function am(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function rm(e,t){let n,s=!1;for(e<=cu?(n=e,s=!0):n=L(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=L(e,n+1);return n}function om(e,t,n){const s=[],a=e.length;for(let r=0;r<a;r++)r!==t?s.push(e[r]):s.push(n);return s}function im(e,t,n,s){const a=t.shape.length,r=e.shape.length;if(0!==s&&(s<-a||s>a))throw new Error("Expect batchDims in the range of [-".concat(a,", ").concat(a,"], but got ").concat(s));if(s<0&&(s+=a),s>r)throw new Error("batchDims (".concat(s,") must be less than rank(x) (\n    ").concat(r,")."));if(n<s)throw new Error("batchDims (".concat(s,") must be less than or equal to axis (").concat(n,")."));for(let m=0;m<s;++m)if(e.shape[m]!==t.shape[m])throw new Error("x.shape[".concat(m,"]: ").concat(e.shape[m]," should be equal to indices.shape[").concat(m,"]: ").concat(t.shape[m],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let m=0;m<s;++m)i.push(e.shape[m]),c*=e.shape[m];for(let m=s;m<n;m++)i.push(e.shape[m]),l*=e.shape[m];for(let m=s;m<a;m++)i.push(t.shape[m]);for(let m=n+1;m<r;m++)i.push(e.shape[m]),u*=e.shape[m];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function cm(e){try{return e.map((e=>Vs(e)))}catch(JL){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(JL))}}function lm(e){return e.map((e=>Us(e)))}function um(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=Br(e,"int32"),a=Br([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]),o=r*e.length;a.values.set(t,o)}return a.toTensor()}!function(){for(const e of yo)$r(e)}();const mm={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,sl(zr(n,"float32"),-1))}}},_m={kernelName:ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=jr(zr(n,"float32")),s=Hr(ro(Xr(1),t));return _c(Vr(e,s))}}}},dm={kernelName:se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Hr(ro(jr(zr(n,"float32")),1));return Vr(e,t)}}}},pm={kernelName:ae,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{let t=e;const s=lo(n.shape,a);return s.length>0&&(t=qi(t,s)),li(t,n.shape)},b:()=>{let t=e;const n=lo(s.shape,a);return n.length>0&&(t=qi(t,n)),li(t,s.shape)}}}},hm={kernelName:re,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},fm={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Kr(n)}}},ym={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Kr(n)}}},wm={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,Hr(ro(Xr(1),jr(zr(n,"float32")))))}}},gm={kernelName:me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Hr(Wr(Xr(1),jr(zr(n,"float32"))));return Vr(e,t)}}}},vm={kernelName:pe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{const t=Wr(jr(n),jr(s));let r=Gr(e,Vr(s,t));const o=lo(n.shape,a);return o.length>0&&(r=qi(r,o)),li(r,n.shape)},b:()=>{const t=Wr(jr(n),jr(s));let r=_c(Gr(e,Vr(n,t)));const o=lo(s.shape,a);return o.length>0&&(r=qi(r,o)),li(r,s.shape)}}}},xm={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,Wr(jr(zr(n,"float32")),1))}}},bm={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,ro(Xr(1),jr(zr(n,"float32"))))}}};const km=za({avgPool3dGrad_:function(e,t,n,s,a,r){const o=La(e,"dy","avgPool3dGrad"),i=La(t,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=li(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=li(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),f(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),f(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),ci("avgPool3dGrad",a,r);const m={dy:c,input:l},_={filterSize:n,strides:s,pad:a,dimRoundingMode:r},d=Na.runKernel(we,m,_);return u?li(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Im={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:a,strides:r,pad:o,dimRoundingMode:i}=n;return{x:()=>km(e,s,a,r,o,i)}}};const Sm=za({avgPoolGrad_:function(e,t,n,s,a){const r=La(e,"dy","avgPoolGrad"),o=La(t,"input","avgPoolGrad");f(o.rank===r.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(r.rank,")")));let i=o,c=r,l=!1;3===o.rank&&(l=!0,i=li(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=li(r,[1,r.shape[0],r.shape[1],r.shape[2]])),f(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),f(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},m={filterSize:n,strides:s,pad:a},_=Na.runKernel(fe,u,m);return l?li(_,[_.shape[1],_.shape[2],_.shape[3]]):_}}),Cm={kernelName:he,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:a,strides:r,pad:o}=n;return{x:()=>Sm(e,s,a,r,o)}}},Nm={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,a]=t,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>rc(e,a,!1,!1),b:()=>rc(e,s,!0,!1)}:r&&!o?{a:()=>rc(a,e,!1,!0),b:()=>rc(s,e,!1,!1)}:{a:()=>rc(a,e,!0,!0),b:()=>rc(e,s,!0,!0)}:{a:()=>rc(e,a,!1,!0),b:()=>rc(s,e,!0,!1)}}};const Tm=za({spaceToBatchND_:function(e,t,n){const s=La(e,"x","spaceToBatchND");f(s.rank>=1+t.length,(()=>"input rank ".concat(s.rank," should be > than [blockShape] ").concat(t.length))),f(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),f(s.shape.reduce(((e,s,a)=>a>0&&a<=t.length?e&&(s+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>"input spatial dimensions ".concat(s.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const a={x:s},r={blockShape:t,paddings:n};return Na.runKernel(On,a,r)}}),Em={kernelName:ve,gradFunc:(e,t,n)=>{const{blockShape:s,crops:a}=n;return{x:()=>Tm(e,s,a)}}},Rm={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,a=s.inputShape,r=s.shape,o=Array.from(r);for(let c=a.length-1;c>=0;c--)if(a[c]===r[c])o[c]=1;else if(1!==a[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(r,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>qi(e,i,!0)}}},Am={kernelName:Ie,gradFunc:e=>({x:()=>e.clone()})},Fm={kernelName:Se,gradFunc:e=>({x:()=>Kr(e)})},Dm={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:a,clipValueMax:r}=n;return{x:()=>Kc(ac(Vi(s,a),Bl(s,r)),e,Kr(e))}}},Mm={kernelName:Te,inputsToSave:["x"],gradFunc:mm.gradFunc},Om={kernelName:Ee,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:a}=n,r=C(a,t[0].shape)[0],o=s.map((e=>e[r]));return zc(e,o,r).map((e=>()=>e))}},Lm={kernelName:Re,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,a]=t,{dilations:r,strides:o,pad:i,dataFormat:c}=n;return f(ai(r),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(r,"'"))),{x:()=>Si(s.shape,e,a,o,i,c),filter:()=>tl(s,e,a.shape,o,i,c)}}},Bm={kernelName:Fe,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,a]=t,{strides:r,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>ki(e,a,r,o,i,1,c),filter:()=>tl(e,s,a.shape,r,o,i,c)}}};const zm=za({conv3DBackpropFilter_:function(e,t,n,s,a){let r=e;4===e.rank&&(r=li(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=li(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),f(5===r.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(r.shape,"."))),f(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),f(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),f(r.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(r.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),f(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:r,dy:o},c={strides:s,pad:a,filterShape:n};return Na.runKernel(Me,i,c)}}),Pm={kernelName:De,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:a,pad:r}=n;f(ai(s),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(s,"'")));const[o,i]=t;return{x:()=>Ti(o.shape,e,i,a,r),filter:()=>zm(o,e,i.shape,a,r)}}};const Wm=za({sin_:function(e){const t={x:La(e,"x","sin","float32")};return Na.runKernel(Tn,t)}}),Um={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(_c(Wm(zr(n,"float32"))),e)}}};const Vm=za({sinh_:function(e){const t={x:La(e,"x","sinh")};return Na.runKernel(En,t)}}),Gm={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(Vm(zr(n,"float32")),e)}}};const Hm=za({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={x:La(e,"x","cumsum")},r={axis:t,exclusive:n,reverse:s};return Na.runKernel(Pe,a,r)}}),jm={kernelName:Pe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:a,exclusive:r,reverse:o}=n;return{x:()=>{const t=ec([a],s.rank);let n=Hm(e,a,r,!o);return null!=t&&(n=Yc(n,t)),n}}}},Km={kernelName:Ge,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:o}=n,i=null==s?[1,1]:s;f(ai(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return f(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),f(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),f(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),f(ri(a,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(a," and dilations ")+"'".concat(i,"'."))),ci("depthwiseConv2d",r,o),{x:()=>ul(c.shape,e,l,a,r,i,o),filter:()=>ll(c,e,l.shape,a,r,i,o)}}},qm={kernelName:qe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,a]=t,r={x:s,filter:a,dy:e},o={x:s,filter:a,dy:e};return{x:()=>Na.runKernel(Xe,r,n),filter:()=>Na.runKernel(Ye,o,n)}}},Xm={kernelName:$e,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Na.runKernel(et,s)}}},Ym={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Gr(Oi(_c(jr(n))),2/Math.sqrt(Math.PI));return{x:()=>Gr(e,s)}}},Qm={kernelName:st,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,n)}}},Jm={kernelName:at,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>li(e,n.shape)}}},Zm={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,Oi(n))}}},$m={kernelName:lt,gradFunc:e=>({x:()=>Kr(e)})},e_={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{const t=Vr(e,zr(s,"float32")),r=lo(n.shape,a);return r.length>0?li(qi(t,r),n.shape):t},b:()=>{let t=Gr(e,zr(n,"float32"));const r=lo(s.shape,a);r.length>0&&(t=li(qi(t,r),s.shape));const o=jr(s);return _c(Vr(t,zr(o,"float32")))}}}};const t_=za({rsqrt_:function(e){const t={x:La(e,"x","rsqrt","float32")};return Na.runKernel(xn,t)}}),n_={kernelName:mt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[a,r,o,i]=t,c=null==i?Xr(1):i,l=lo(r.shape,a.shape),u=[];if(1===r.rank){for(let e=0;e<a.shape.length-1;++e)u.push(a.shape[e]);u.push(1)}const m=ro(a,r),_=Gr(e,c),d=t_(Wr(o,Xr(s))),p=Gr(Gr(Gr(d,d),d),Xr(-.5));return{x:()=>1===r.rank?li(Gr(Gr(e,Bi(li(d,[1,1,1,r.shape[0]]),u)),c),a.shape):li(Gr(Gr(e,d),c),a.shape),mean:()=>{let e=Gr(Gr(d,Xr(-1)),_);return 1===r.rank&&(e=qi(e,l)),li(e,r.shape)},variance:()=>{let e=Gr(Gr(p,m),_);return 1===r.rank&&(e=qi(e,l)),li(e,r.shape)},scale:()=>{const t=Gr(m,d);let n=Gr(e,t);return 1===r.rank&&(n=qi(n,l)),li(n,r.shape)},offset:()=>{let t=e;return 1===r.rank&&(t=qi(t,l)),li(t,r.shape)}}}};const s_=za({unsortedSegmentSum_:function(e,t,n){const s=La(e,"x","unsortedSegmentSum"),a=La(t,"segmentIds","unsortedSegmentSum","int32");f(x(n),(()=>"numSegments must be of dtype int"));const r={x:s,segmentIds:a},o={numSegments:n};return Na.runKernel(rs,r,o)}}),a_={kernelName:_t,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,a]=t,{axis:r,batchDims:o}=n,i=C(r,s.shape)[0],c=(e,t,n)=>()=>{const s=e.shape,a=t.size,o=s.slice(0,i),c=o.length,l=s.slice(r,s.length).slice(1),u=l.length,m=r_(0,c),_=r_(c+1,c+1+u),d=o_([o,[a],l]),p=li(n,d),h=li(t,[a]),f=o_([[c],m,_]),y=Yc(p,f);let w=s_(y,h,e.shape[i]);const g=tc(f);return w=Yc(w,g),w};if(1===o){const t=s.shape[0],n=s.split(t,0);return{x:()=>{const t=Wc(n.map(((t,n)=>c(t,a.slice(n,1),e.slice(n,1))())));return t.reshape(s.shape)},indices:()=>a}}return{x:c(s,a,e),indices:()=>a}}};function r_(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function o_(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const i_={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Kr(n),b:()=>Kr(s)}}},c_={kernelName:ft,gradFunc:e=>({x:()=>zr(e,"float32")})},l_={kernelName:gt,gradFunc:e=>({x:()=>Kr(e)})},u_={kernelName:vt,gradFunc:e=>({x:()=>Kr(e)})},m_={kernelName:xt,gradFunc:e=>({x:()=>Kr(e)})},__={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:a}=n,r=Ui(s,0);return{x:()=>Kc(r,e,Gr(e,a))}}},d_={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,Wr(n,1))}}},p_={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,zr(n,"float32"))}}},h_={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:a}=n;return{logits:()=>{const t=Oi(s);return ro(e,Gr(qi(e,a,!0),t))}}}};const f_=za({localResponseNormalizationBackprop_:function(e,t,n){const s={x:e,y:t,dy:n},a={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Na.runKernel(Ft,s,a)}}),y_={kernelName:At,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,a]=t,{depthRadius:r,bias:o,alpha:i,beta:c}=n;return{x:()=>f_(s,a,e,r,o,i,c)}}};function w_(e,t,n,s){return t.rank<n.rank&&(t=li(t,Zi(t.shape,s))),e.rank<n.rank&&(e=li(e,Zi(e.shape,s))),{x:()=>Gr(e,zr(Di(n,t),e.dtype))}}const g_={kernelName:Dt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:a}=s,r=t[0],o=w_(e,t[1],r,C(a,r.shape));return{x:()=>o.x()}}},v_={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Gr(e,zr(Vi(n,s),"float32")),b:()=>Gr(e,zr(Ul(n,s),"float32"))}}};const x_=za({maxPool3dGrad_:function(e,t,n,s,a,r,o){const i=La(e,"dy","maxPool3dGrad"),c=La(t,"input","maxPool3dGrad"),l=La(n,"output","maxPool3dGrad");let u=i,m=c,_=l,d=!1;4===c.rank&&(d=!0,u=li(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=li(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),_=li(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),f(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),f(5===m.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(m.rank,"."))),f(5===_.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(_.rank,"."))),ci("maxPool3dGrad",r,o);const p={dy:u,input:m,output:_},h={filterSize:s,strides:a,pad:r,dimRoundingMode:o},y=Na.runKernel(zt,p,h);return d?li(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),b_={kernelName:Bt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,a]=t,{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>x_(e,s,a,r,o,i,c)}}};const k_=za({maxPoolGrad_:function(e,t,n,s,a,r,o){const i=La(e,"dy","maxPoolGrad"),c=La(t,"input","maxPoolGrad"),l=La(n,"output","maxPoolGrad");f(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),f(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),f(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),ci("maxPoolGrad",r,o);const u={dy:i,input:c,output:l},m={filterSize:s,strides:a,pad:r,dimRoundingMode:o};return Na.runKernel(Lt,u,m)}}),I_={kernelName:Ot,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,a]=t,{filterSize:r,strides:o,pad:i}=n;return{x:()=>k_(e,s,a,r,o,i)}}},S_={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:a}=n,r=C(a,s.shape),o=g(Ji(s.shape,r)[1]);return{x:()=>{const t=s.shape.slice();r.forEach((e=>{t[e]=1}));const n=li(e,t);return Vr(Gr(n,fc(s.shape,"float32")),o)}}}},C_={kernelName:Ut,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:a}=s,[r,o]=t,i=w_(e,o,r,C(a,r.shape));return{x:()=>i.x()}}},N_={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Gr(e,zr(Bl(n,s),"float32")),b:()=>Gr(e,zr(Ui(n,s),"float32"))}}},T_={kernelName:Gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:a}=n,r=a.map((e=>e[0]));return{x:()=>Ac(e,r,s.shape)}}},E_={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{const t=lo(n.shape,a);return t.length>0?li(qi(e,t),n.shape):e},b:()=>{const t=Gr(e,_c(Pi(Vr(n,s)))),r=lo(s.shape,a);return r.length>0?li(qi(t,r),s.shape):t}}}},R_={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{const t=Gr(e,zr(s,"float32")),r=lo(n.shape,a);return r.length>0?li(qi(t,r),n.shape):t},b:()=>{const t=Gr(e,zr(n,"float32")),r=lo(s.shape,a);return r.length>0?li(qi(t,r),s.shape):t}}}},A_={kernelName:qt,gradFunc:e=>({x:()=>_c(e)})},F_={kernelName:$t,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>hc(n.shape,"float32")}}},D_={kernelName:Zt,gradFunc:e=>({x:()=>Kr(e)})},M_={kernelName:en,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return jc(e,s).map((e=>()=>e))}},O_={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:a}=n,r=a.map((e=>e[0]));return{x:()=>Ac(e,r,s.shape)}}},L_={kernelName:nn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,a]=t,r=n,o=s,i=uo(r.shape,o.shape);return{a:()=>{const t=zr(o,"float32");let n=Gr(e,Gr(t,ao(r,ro(t,Xr(1)))));const s=lo(r.shape,i);return s.length>0&&(n=qi(n,s)),li(n,r.shape)},b:()=>{const t=Ui(r,0),n=Kc(t,Hi(r),Kr(r));let s=Gr(e,Gr(a,n));const c=lo(o.shape,i);return c.length>0&&(s=qi(s,c)),li(s,o.shape)}}}},B_={kernelName:sn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,a=Ui(n,0);return{x:()=>Kc(a,e,Gr(e,s)),alpha:()=>{let t=Kc(a,Kr(e),Gr(e,n));const r=lo(s.shape,e.shape);return r.length>0&&(t=qi(t,r)),li(t,s.shape)}}}};const z_=za({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={x:La(e,"x","cumprod")},r={axis:t,exclusive:n,reverse:s};return Na.runKernel(ze,a,r)}});function P_(e,t,n){const s=e.shape.length,a=s-n.length,r=ec(n,s);let o=e;null!=r&&(o=Yc(e,r));const i=o.shape.slice(),c=i.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const s=e.shape.slice();s[n]=1;const a=li(t,s),r=z_(e,n,!0,!1),o=z_(e,n,!0,!0),i=Gr(r,o);return Gr(a,i)}(o.reshape(i),t,a);if(l=l.reshape(o.shape),null!=r){const e=tc(r);l=Yc(l,e)}return l}const W_={kernelName:an,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:a}=n;let r=[];return r=void 0===a||null===a?s.shape.map(((e,t)=>t)):"number"===typeof a?[a]:a,{x:()=>P_(s,e,r)}}},U_={kernelName:Je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{const t=Vr(e,zr(s,"float32")),r=lo(n.shape,a);return r.length>0?li(qi(t,r),n.shape):t},b:()=>{let t=Gr(e,zr(n,"float32"));const r=lo(s.shape,a);r.length>0&&(t=li(qi(t,r),s.shape));const o=jr(s);return _c(Vr(t,zr(o,"float32")))}}}},V_={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,_c(jr(n)))}}},G_={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Gr(Bl(n,6),sl(n));return{x:()=>Gr(e,zr(s,"float32"))}}},H_={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,zr(sl(n),"float32"))}}},j_={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>li(e,n.shape)}}},K_={kernelName:fn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,a={dy:e,images:s};return{images:()=>Na.runKernel(yn,a,n)}}},q_={kernelName:pn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,a={dy:e,images:s};return{images:()=>Na.runKernel(hn,a,n)}}},X_={kernelName:gn,gradFunc:(e,t,n)=>{const{dims:s}=n,a=C(s,e.shape);return{x:()=>Nc(e,a)}}},Y_={kernelName:vn,gradFunc:e=>({x:()=>Kr(e)})},Q_={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_c(Vr(e,Gr(ao(n,1.5),2)))}}};const J_=za({logicalNot_:function(e){const t={x:La(e,"x","logicalNot","bool")};return Na.runKernel(Et,t)}}),Z_={kernelName:Sn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>zr(Kr(n),"float32"),t:()=>Gr(e,zr(n,e.dtype)),e:()=>Gr(e,zr(J_(n),e.dtype))}}},$_={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ui(n,Xr(0)),s=Xr(vu),a=Xr(xu),r=Gr(e,a),o=Gr(Gr(e,s),Oi(zr(n,"float32")));return Kc(t,r,o)}}}},ed={kernelName:An,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,Gr(n,ro(Xr(1),n)))}}},td={kernelName:Rn,gradFunc:e=>({x:()=>Kr(e)})};const nd=za({cos_:function(e){const t={x:La(e,"x","cos","float32")};return Na.runKernel(Le,t)}}),sd={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(nd(zr(n,"float32")),e)}}};const ad=za({cosh_:function(e){const t={x:La(e,"x","cosh","float32")};return Na.runKernel(Be,t)}}),rd={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(ad(zr(n,"float32")),e)}}},od={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:a,size:r}=n,o=s.shape,[i,c]=Vo(s,a,r),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>wc(e,l)}}},id={kernelName:Bn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:a}=n,r=Gr(e,s);return{logits:()=>ro(r,Gr(qi(r,[a],true),s))}}},cd={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,Rc(n))}}};const ld=za({batchToSpaceND_:function(e,t,n){const s=La(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));f(s.rank>=1+t.length,(()=>"input rank is ".concat(s.rank," but should be > than blockShape.length ").concat(t.length))),f(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),f(s.shape[0]%a===0,(()=>"input tensor batch is ".concat(s.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(a)));const r={x:s},o={blockShape:t,crops:n};return Na.runKernel(ve,r,o)}}),ud={kernelName:On,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:a}=n;return{x:()=>ld(e,s,a)}}},md={kernelName:Ln,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>wi(e,s)}}};const _d=[mm,_m,dm,pm,hm,fm,ym,wm,gm,vm,xm,bm,Im,Cm,Nm,Em,Rm,Am,Fm,Dm,Mm,Om,Bm,Lm,Pm,Um,Gm,jm,Km,qm,U_,Xm,Ym,Qm,Jm,Zm,e_,$m,n_,a_,i_,c_,l_,u_,m_,__,d_,p_,h_,y_,g_,g_,v_,b_,I_,S_,C_,N_,T_,E_,R_,A_,F_,D_,M_,O_,O_,L_,B_,W_,V_,G_,H_,j_,K_,q_,X_,Y_,Q_,Z_,$_,ed,td,sd,rd,od,id,cd,ud,ud,md,md,{kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,Gr(Hr(zr(n,"float32")),2))}}},{kernelName:Gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Xr(2);return{a:()=>Gr(e,Gr(a,ro(n,s))),b:()=>Gr(e,Gr(a,ro(s,n)))}}},{kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(e,Gr(zr(n,"float32"),2))}}},{kernelName:is,gradFunc:e=>({x:()=>Kr(e)})},{kernelName:Qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=uo(n.shape,s.shape);return{a:()=>{let t=e;const s=lo(n.shape,a);return s.length>0&&(t=qi(t,s)),li(t,n.shape)},b:()=>{let t=e;const n=lo(s.shape,a);return n.length>0&&(t=qi(t,n)),li(_c(t),s.shape)}}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,a=s.shape.slice(),{axis:r}=n;C(r,s.shape).forEach((e=>{a[e]=1}));const o=li(e,a),i=Gr(o,fc(s.shape,"float32"));return{x:()=>i}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vr(e,jr(nd(n)))}}},{kernelName:Zn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gr(ro(Xr(1),jr(n)),e)}}},{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:a}=n;return{x:()=>{let t=Kr(s);if(1===s.rank)for(let n=0;n<a[0];++n)t=Wr(t,Ac(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<a[0];++n)for(let r=0;r<a[1];++r)t=Wr(t,Ac(e,[n*s.shape[0],r*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<a[0];++n)for(let r=0;r<a[1];++r)for(let o=0;o<a[2];++o)t=Wr(t,Ac(e,[n*s.shape[0],r*s.shape[1],o*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(s.rank," tensors yet."));for(let n=0;n<a[0];++n)for(let r=0;r<a[1];++r)for(let o=0;o<a[2];++o)for(let i=0;i<a[3];++i)t=Wr(t,Ac(e,[n*s.shape[0],r*s.shape[1],o*s.shape[2],i*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:ns,gradFunc:(e,t,n)=>{const s=n,{perm:a}=s,r=tc(a);return{x:()=>Yc(e,r)}}},{kernelName:as,gradFunc:(e,t,n)=>{const s=n,{axis:a}=s;return{value:()=>Wc(e,a)}}},{kernelName:rs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=mo(t,Kr(t)),s=Wi(e,n);let a=Vi(t,Xr(0,"int32"));const r=s.rank-a.rank;for(let i=0;i<r;++i)a=Li(a,i+1);a=ac(a,fc(s.shape,"bool"));const o=Kr(s);return Kc(a,s,o)}(e,n)}}},{kernelName:os,gradFunc:e=>({x:()=>Kr(e)})}];for(const n of _d)xs(n);ia().prototype.abs=function(){return this.throwIfDisposed(),io(this)};const dd=za({acos_:function(e){const t={x:La(e,"x","acos")};return Na.runKernel(ne,t)}});ia().prototype.acos=function(){return this.throwIfDisposed(),dd(this)};const pd=za({acosh_:function(e){const t={x:La(e,"x","acosh")};return Na.runKernel(se,t)}});ia().prototype.acosh=function(){return this.throwIfDisposed(),pd(this)},ia().prototype.add=function(e){return this.throwIfDisposed(),Wr(this,e)},ia().prototype.all=function(e,t){return this.throwIfDisposed(),jo(this,e,t)},ia().prototype.any=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)},ia().prototype.argMax=function(e){return this.throwIfDisposed(),qo(this,e)};const hd=za({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:La(e,"x","argMin")},s={axis:t};return Na.runKernel(le,n,s)}});ia().prototype.argMin=function(e){return this.throwIfDisposed(),hd(this,e)},ia().prototype.asScalar=function(){return this.throwIfDisposed(),f(1===this.size,(()=>"The array must have only 1 element.")),li(this,[])},ia().prototype.asType=function(e){return this.throwIfDisposed(),zr(this,e)},ia().prototype.as1D=function(){return this.throwIfDisposed(),li(this,[this.size])},ia().prototype.as2D=function(e,t){return this.throwIfDisposed(),li(this,[e,t])},ia().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),li(this,[e,t,n])},ia().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),li(this,[e,t,n,s])},ia().prototype.as5D=function(e,t,n,s,a){return this.throwIfDisposed(),li(this,[e,t,n,s,a])};const fd=za({asin_:function(e){const t={x:La(e,"x","asin")};return Na.runKernel(ue,t)}});ia().prototype.asin=function(){return this.throwIfDisposed(),fd(this)};const yd=za({asinh_:function(e){const t={x:La(e,"x","asinh")};return Na.runKernel(me,t)}});ia().prototype.asinh=function(){return this.throwIfDisposed(),yd(this)};const wd=za({atan_:function(e){const t={x:La(e,"x","atan")};return Na.runKernel(_e,t)}});ia().prototype.atan=function(){return this.throwIfDisposed(),wd(this)};const gd=za({atan2_:function(e,t){let n=La(e,"a","atan2"),s=La(t,"b","atan2");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(pe,a)}});ia().prototype.atan2=function(e){return this.throwIfDisposed(),gd(this,e)};const vd=za({atanh_:function(e){const t={x:La(e,"x","atanh")};return Na.runKernel(de,t)}});ia().prototype.atanh=function(){return this.throwIfDisposed(),vd(this)},ia().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),ui(this,e,t,n,s)},ia().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ld(this,e,t)},ia().prototype.batchNorm=function(e,t,n,s,a){return this.throwIfDisposed(),_i(this,e,t,n,s,a)},ia().prototype.broadcastTo=function(e){return this.throwIfDisposed(),fi(this,e)},ia().prototype.cast=function(e){return this.throwIfDisposed(),zr(this,e)};const xd=za({ceil_:function(e){const t={x:La(e,"x","ceil","float32")};return Na.runKernel(Se,t)}});ia().prototype.ceil=function(){return this.throwIfDisposed(),xd(this)},ia().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),yi(this,e,t)},ia().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof oa&&(e=[e]),wi([this,...e],t)},ia().prototype.conv1d=function(e,t,n,s,a,r){return this.throwIfDisposed(),Ii(this,e,t,n,s,a,r)},ia().prototype.conv2dTranspose=function(e,t,n,s,a){return this.throwIfDisposed(),Ci(this,e,t,n,s,a)},ia().prototype.conv2d=function(e,t,n,s,a,r){return this.throwIfDisposed(),ki(this,e,t,n,s,a,r)},ia().prototype.cos=function(){return this.throwIfDisposed(),nd(this)},ia().prototype.cosh=function(){return this.throwIfDisposed(),ad(this)},ia().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),z_(this,e,t,n)},ia().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Hm(this,e,t,n)};const bd=za({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const s=La(e,"x","depthToSpace","float32"),a="NHWC"===n?s.shape[1]:s.shape[2],r="NHWC"===n?s.shape[2]:s.shape[3],o="NHWC"===n?s.shape[3]:s.shape[1];f(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),f(a*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(a," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(s.shape))),f(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t," for depthToSpace with input shape\n        ").concat(s.shape))),f(o%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(o," for depthToSpace with input shape ").concat(s.shape)));const i={x:s},c={blockSize:t,dataFormat:n};return Na.runKernel(Ve,i,c)}});ia().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),bd(this,e,t)},ia().prototype.depthwiseConv2d=function(e,t,n,s,a,r){return this.throwIfDisposed(),Ai(this,e,t,n,s,a,r)};const kd=za({dilation2d_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=La(e,"x","dilation2d"),i=La(t,"filter","dilation2d");f(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),f(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),f("NHWC"===r,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(r)));let c=o,l=!1;3===o.rank&&(c=li(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),f(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},m={strides:n,pad:s,dilations:a},_=Na.runKernel(qe,u,m);return l?li(_,[_.shape[1],_.shape[2],_.shape[3]]):_}});ia().prototype.dilation2d=function(e,t,n,s,a){return this.throwIfDisposed(),kd(this,e,t,n,s,a)};const Id=za({divNoNan_:function(e,t){let n=La(e,"a","div"),s=La(t,"b","div");[n,s]=ga(n,s);const a=Vr(n,s),r=Kr(a),o=Di(s,r);return Kc(o,r,a)}});ia().prototype.divNoNan=function(e){return this.throwIfDisposed(),Id(this,e)},ia().prototype.div=function(e){return this.throwIfDisposed(),Vr(this,e)};const Sd=za({dot_:function(e,t){const n=La(e,"t1","dot"),s=La(t,"t2","dot");f((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(s.rank,".")));const a=1===n.rank?n.size:n.shape[1],r=1===s.rank?s.size:s.shape[0];if(f(a===r,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(a," and ").concat(r,"."))),1===n.rank&&1===s.rank){const e=li(n,[1,-1]),t=li(s,[-1,1]),a=rc(e,t);return li(a,[])}if(1===n.rank&&2===s.rank){const e=li(n,[1,-1]),t=li(s,[s.shape[0],s.shape[1]]),a=rc(e,t);return li(a,[a.size])}if(2===n.rank&&1===s.rank){const e=li(s,[-1,1]),t=rc(n,e);return li(t,[t.size])}{const e=li(s,[s.shape[0],s.shape[1]]);return rc(n,e)}}});ia().prototype.dot=function(e){return this.throwIfDisposed(),Sd(this,e)},ia().prototype.elu=function(){return this.throwIfDisposed(),Fi(this)},ia().prototype.equal=function(e){return this.throwIfDisposed(),Di(this,e)},ia().prototype.erf=function(){return this.throwIfDisposed(),Mi(this)};const Cd=za({euclideanNorm_:function(e){return Hl(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});ia().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Cd(this,e,t)},ia().prototype.exp=function(){return this.throwIfDisposed(),Oi(this)},ia().prototype.expandDims=function(e){return this.throwIfDisposed(),Li(this,e)};const Nd=za({expm1_:function(e){const t={x:La(e,"x","expm1")};return Na.runKernel(rt,t)}});ia().prototype.expm1=function(){return this.throwIfDisposed(),Nd(this)},ia().prototype.fft=function(){return this.throwIfDisposed(),Jc(this)},ia().prototype.flatten=function(){return this.throwIfDisposed(),li(this,[this.size])},ia().prototype.floor=function(){return this.throwIfDisposed(),Pi(this)},ia().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ur(this,e)},ia().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Wi(this,e,t,n)},ia().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Vi(this,e)},ia().prototype.greater=function(e){return this.throwIfDisposed(),Ui(this,e)},ia().prototype.ifft=function(){return this.throwIfDisposed(),$c(this)},ia().prototype.irfft=function(){return this.throwIfDisposed(),el(this)};const Td=za({isFinite_:function(e){const t={x:La(e,"x","isFinite")};return Na.runKernel(gt,t)}});ia().prototype.isFinite=function(){return this.throwIfDisposed(),Td(this)};const Ed=za({isInf_:function(e){const t={x:La(e,"x","isInf")};return Na.runKernel(vt,t)}});ia().prototype.isInf=function(){return this.throwIfDisposed(),Ed(this)};const Rd=za({isNaN_:function(e){const t={x:La(e,"x","isNaN")};return Na.runKernel(xt,t)}});ia().prototype.isNaN=function(){return this.throwIfDisposed(),Rd(this)},ia().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Gi(this,e)},ia().prototype.lessEqual=function(e){return this.throwIfDisposed(),Bl(this,e)},ia().prototype.less=function(e){return this.throwIfDisposed(),Ul(this,e)};const Ad=za({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const r=La(e,"x","localResponseNormalization");f(4===r.rank||3===r.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(r.rank,"."))),f(x(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let o=r,i=!1;3===r.rank&&(i=!0,o=li(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={x:o},l={depthRadius:t,bias:n,alpha:s,beta:a},u=Na.runKernel(At,c,l);return i?li(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});ia().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Ad(this,e,t,n,s)};const Fd=za({logSigmoid_:function(e){const t=La(e,"x","logSigmoid");return qr((e=>({value:_c(Bc(_c(e))),gradFunc:t=>Gr(t,Rc(_c(e)))})))(t)}});ia().prototype.logSigmoid=function(){return this.throwIfDisposed(),Fd(this)},ia().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Xi(this,e)},ia().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),sc(this,e,t)},ia().prototype.log=function(){return this.throwIfDisposed(),Hi(this)},ia().prototype.log1p=function(){return this.throwIfDisposed(),ji(this)},ia().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ac(this,e)},ia().prototype.logicalNot=function(){return this.throwIfDisposed(),J_(this)};const Dd=za({logicalOr_:function(e,t){const n=La(e,"a","logicalOr","bool"),s=La(t,"b","logicalOr","bool");uo(n.shape,s.shape);const a={a:n,b:s};return Na.runKernel(Rt,a)}});ia().prototype.logicalOr=function(e){return this.throwIfDisposed(),Dd(this,e)};const Md=za({logicalXor_:function(e,t){const n=La(e,"a","logicalXor","bool"),s=La(t,"b","logicalXor","bool");return uo(n.shape,s.shape),ac(Dd(e,t),J_(ac(e,t)))}});ia().prototype.logicalXor=function(e){return this.throwIfDisposed(),Md(this,e)},ia().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),rc(this,e,t,n)},ia().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),oc(this,e,t,n,s)},ia().prototype.max=function(e,t){return this.throwIfDisposed(),Ki(this,e,t)},ia().prototype.maximum=function(e){return this.throwIfDisposed(),mo(this,e)},ia().prototype.mean=function(e,t){return this.throwIfDisposed(),cc(this,e,t)},ia().prototype.min=function(e,t){return this.throwIfDisposed(),lc(this,e,t)},ia().prototype.minimum=function(e){return this.throwIfDisposed(),uc(this,e)};const Od=za({mirrorPad_:function(e,t,n){f("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const s=La(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f(t.length===s.rank,(()=>"Padding doesn't match input. Must be ".concat(s.rank,". ")+"Got ".concat(t.length,".")));const a="reflect"===n?1:0;for(let i=0;i<s.rank;i++)f(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),f(t[i][0]>=0&&t[i][0]<=s.shape[i]-a&&t[i][1]>=0&&t[i][1]<=s.shape[i]-a,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(s.shape[i]-a," or less than 0 for input of ")+"shape ".concat(s.shape)));const r={paddings:t,mode:n},o={x:s};return Na.runKernel(Gt,o,r)}});ia().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Od(this,e,t)};const Ld=za({mod_:function(e,t){let n=La(e,"a","mod"),s=La(t,"b","mod");[n,s]=ga(n,s);const a={a:n,b:s};return Na.runKernel(Ht,a)}});ia().prototype.mod=function(e){return this.throwIfDisposed(),Ld(this,e)},ia().prototype.mul=function(e){return this.throwIfDisposed(),Gr(this,e)},ia().prototype.neg=function(){return this.throwIfDisposed(),_c(this)},ia().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Hl(this,e,t,n)},ia().prototype.notEqual=function(e){return this.throwIfDisposed(),dc(this,e)},ia().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),pc(this,e,t,n)},ia().prototype.onesLike=function(){return this.throwIfDisposed(),yc(this)},ia().prototype.pad=function(e,t){return this.throwIfDisposed(),wc(this,e,t)};const Bd=za({pool_:function(e,t,n,s,a,r,o){null==a&&(a=[1,1]),null==r&&(r=1),0===s&&(s="valid");const i=La(e,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=li(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(ri(r,a),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(a,"'")));const u=Yo(c.shape,t,r,a,s),m=[u.dilationHeight,u.dilationWidth];let _;_="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),s=n.map((e=>e-1)),a=s.map((e=>Math.floor(e/2))),r=s.map(((e,t)=>e-a[t]));return s.map(((e,t)=>[a[t],r[t]]))}([u.filterHeight,u.filterWidth],m):[[0,0],[0,0]];const d=1===m[0]&&1===m[1],[p,h]=function(e,t,n){const s=n.map((e=>e[0])),a=n.map((e=>e[1])),r=e.concat(s,a),o=t.map(((e,t)=>(e-r[t]%e)%e)),i=a.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[s[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([u.inHeight,u.inWidth],m,_),y=d?s:"valid",w=d?c:Tm(c,m,p),g=("avg"===n?()=>ui(w,t,r,y,o):()=>oc(w,t,r,y,o))(),v=d?g:ld(g,m,h);return l?li(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});ia().prototype.pool=function(e,t,n,s,a,r){return this.throwIfDisposed(),Bd(this,e,t,n,s,a,r)},ia().prototype.pow=function(e){return this.throwIfDisposed(),ao(this,e)},ia().prototype.prelu=function(e){return this.throwIfDisposed(),gc(this,e)};const zd=za({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=La(e,"x","prod");"bool"===s.dtype&&(s=zr(s,"int32"));const a={x:s},r={axis:t,keepDims:n};return Na.runKernel(an,a,r)}});ia().prototype.prod=function(e,t){return this.throwIfDisposed(),zd(this,e,t)};const Pd=za({reciprocal_:function(e){const t={x:La(e,"x","reciprocal")};return Na.runKernel(mn,t)}});ia().prototype.reciprocal=function(){return this.throwIfDisposed(),Pd(this)},ia().prototype.relu=function(){return this.throwIfDisposed(),Cc(this)},ia().prototype.relu6=function(){return this.throwIfDisposed(),nl(this)},ia().prototype.reshapeAs=function(e){return this.throwIfDisposed(),li(this,e.shape)},ia().prototype.reshape=function(e){return this.throwIfDisposed(),li(this,e)},ia().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Ml(this,e,t,n)},ia().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ol(this,e,t,n)},ia().prototype.reverse=function(e){return this.throwIfDisposed(),Nc(this,e)},ia().prototype.rfft=function(){return this.throwIfDisposed(),Zc(this)},ia().prototype.round=function(){return this.throwIfDisposed(),zl(this)},ia().prototype.rsqrt=function(){return this.throwIfDisposed(),t_(this)},ia().prototype.selu=function(){return this.throwIfDisposed(),Tc(this)},ia().prototype.separableConv2d=function(e,t,n,s,a,r){return this.throwIfDisposed(),Ec(this,e,t,n,s,a,r)},ia().prototype.sigmoid=function(){return this.throwIfDisposed(),Rc(this)};const Wd=za({sign_:function(e){const t={x:La(e,"x","sign")};return Na.runKernel(Rn,t)}});ia().prototype.sign=function(){return this.throwIfDisposed(),Wd(this)},ia().prototype.sin=function(){return this.throwIfDisposed(),Wm(this)},ia().prototype.sinh=function(){return this.throwIfDisposed(),Vm(this)},ia().prototype.slice=function(e,t){return this.throwIfDisposed(),Ac(this,e,t)},ia().prototype.softmax=function(e){return this.throwIfDisposed(),Lc(this,e)},ia().prototype.softplus=function(){return this.throwIfDisposed(),Bc(this)},ia().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Tm(this,e,t)},ia().prototype.split=function(e,t){return this.throwIfDisposed(),zc(this,e,t)},ia().prototype.sqrt=function(){return this.throwIfDisposed(),Hr(this)},ia().prototype.square=function(){return this.throwIfDisposed(),jr(this)},ia().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Yl(this,e)},ia().prototype.squeeze=function(e){return this.throwIfDisposed(),Pc(this,e)},ia().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof oa?[this,e]:[this,...e];return Wc(n,t)},ia().prototype.step=function(e){return this.throwIfDisposed(),sl(this,e)};const Ud=za({stridedSlice_:function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:La(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:s,beginMask:a,endMask:r,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return Na.runKernel(Kn,l,u)}});ia().prototype.stridedSlice=function(e,t,n,s,a,r,o,i){return this.throwIfDisposed(),Ud(this,e,t,n,s,a,r,o,i)},ia().prototype.sub=function(e){return this.throwIfDisposed(),ro(this,e)},ia().prototype.sum=function(e,t){return this.throwIfDisposed(),qi(this,e,t)};const Vd=za({tan_:function(e){const t={x:La(e,"x","tan","float32")};return Na.runKernel(Jn,t)}});ia().prototype.tan=function(){return this.throwIfDisposed(),Vd(this)},ia().prototype.tanh=function(){return this.throwIfDisposed(),Uc(this)},ia().prototype.tile=function(e){return this.throwIfDisposed(),Bi(this,e)},ia().prototype.toBool=function(){return this.throwIfDisposed(),zr(this,"bool")},ia().prototype.toFloat=function(){return this.throwIfDisposed(),zr(this,"float32")},ia().prototype.toInt=function(){return this.throwIfDisposed(),zr(this,"int32")};const Gd=za({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=La(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>a)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(a,") ")+"but got ".concat(t));const r={x:s},o={k:t,sorted:n},[i,c]=Na.runKernel(es,r,o);return{values:i,indices:c}}});ia().prototype.topk=function(e,t){return this.throwIfDisposed(),Gd(this,e,t)},ia().prototype.transpose=function(e){return this.throwIfDisposed(),Yc(this,e)};const Hd=za({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=La(e,"x","unique","string_or_numeric");f(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},a={axis:t},[r,o]=Na.runKernel(ss,s,a);return{values:r,indices:o}}});ia().prototype.unique=function(e){return this.throwIfDisposed(),Hd(this,e)},ia().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),s_(this,e,t)},ia().prototype.unstack=function(e){return this.throwIfDisposed(),jc(this,e)},ia().prototype.where=function(e,t){return this.throwIfDisposed(),Kc(e,this,t)},ia().prototype.zerosLike=function(){return this.throwIfDisposed(),Kr(this)};class jd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jd.prototype)}}class Kd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kd.prototype)}}class qd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qd.prototype)}}class Xd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xd.prototype)}}class Yd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yd.prototype)}}Error;class Qd{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Jd(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Zd(e,t){if(!e)throw new Yd(t)}function $d(e,t){let n=0;for(const s of e)s===t&&n++;return n}function ep(e){return 1===e.length?e[0]:e}function tp(e){return Array.isArray(e)?e:[e]}function np(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function sp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ap={};function rp(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function op(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>op(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?op(t):e[n]=t.value)}}}function ip(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const a=e;let r;if(a in n)r=n[a];else if(a in ap)r=ap[a];else if(r=t[a],null==r)throw new qd("Unknown ".concat(s,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(s," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(s," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return r}{const r=e;if(null==r.className||null==r.config)throw new qd("".concat(s,": Improper config format: ")+"".concat(JSON.stringify(r),".\n")+"'className' and 'config' must set.");const o=r.className;let i,c;if(o in n?[i,c]=n[o]:o in ap?[i,c]=ap.className:o in t&&([i,c]=t[o]),null==i)throw new qd("Unknown ".concat(s,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(s," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(s," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(ap))e[n]=ap[n];for(const a of Object.keys(n))e[a]=n[a];r.config.customObjects=e;const t=Object.assign({},ap);for(const a of Object.keys(n))ap[a]=n[a];op(r.config);const s=c(i,r.config,n,a);return ap=Object.assign({},t),s}{const e=Object.assign({},ap);for(const s of Object.keys(n))ap[s]=n[s];const t=new i(r.config);return ap=Object.assign({},e),t}}}function cp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function lp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function up(e){if(null==e)throw new qd("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function mp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new qd("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function _p(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return Zd(n>=0),Zd(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function dp(e,t){Array.isArray(e)?(f(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>dp(e,"element ".concat(n+1," of ").concat(t))))):f(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(pp(e),".")))}function pp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>pp(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function hp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let fp=0;function yp(){return fp++}const wp={};function gp(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in wp||(wp[e]=0),wp[e]+=1,e+wp[e].toString()}const vp=["channelsFirst","channelsLast"],xp=["nearest","bilinear"],bp=["valid","same","causal"],kp=["max","avg"],Ip=["sum","mul","concat","ave"],Sp=new Map;function Cp(e){mp(vp,"DataFormat",e)}function Np(e){mp(bp,"PaddingMode",e)}function Tp(e){mp(kp,"PoolMode",e)}const Ep=[],Rp="/";function Ap(e,t){Ep.push(e);try{const e=t();return Ep.pop(),e}catch(n){throw Ep.pop(),n}}function Fp(e){if(!Op(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ep.length?"":Ep.join(Rp)+Rp)+e}function Dp(e){if(!Op(e))throw new Error("Not a valid tensor name: '"+e+"'");Sp.has(e)||Sp.set(e,0);const t=Sp.get(e);if(Sp.set(e,Sp.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Sp.set(n,1),n}return e}const Mp=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Op(e){return!!e.match(Mp)}function Lp(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let a=t;a<n;++a)s*=e[a];return s}function Bp(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function zp(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Pp(e,t){if(t<e)throw new qd("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let s=e;s<t;++s)n.push(s);return n}let Wp;function Up(){return null==Wp&&(Wp=Qa().epsilon()),Wp}function Vp(e,t){return zr(e,t)}function Gp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),li(e,n)}function Hp(e,t,n){return Ka((()=>{switch(e.rank){case 1:return Fc(e,t,n);case 2:return Dc(e,[t,0],[n,e.shape[1]]);case 3:return Mc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Oc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ac(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ac(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new qd("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function jp(e,t,n){return Ka((()=>{switch(e.rank){case 1:return Fc(e,t,n);case 2:return Dc(e,[0,t],[e.shape[0],n]);case 3:return Mc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Oc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new qd("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Kp(e,t,n,s){return Ka((()=>{switch(e.rank){case 1:return Fc(e,t,n);case 2:switch(s){case 1:return Hp(e,t,n);case 2:return jp(e,t,n);default:throw new qd("The axis is not within the rank of the tensor "+"".concat(s))}case 3:switch(s){case 1:return Hp(e,t,n);case 2:return Mc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return jp(e,t,n);default:throw new qd("The axis is not within the rank of the tensor "+"".concat(s))}case 4:switch(s){case 1:return Hp(e,t,n);case 2:return Oc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Oc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return jp(e,t,n);default:throw new qd("The axis is not within the rank of the tensor "+"".concat(s))}default:throw new qd("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function qp(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),wi(e,n)}function Xp(e,t){switch(e.rank){case 1:return gi([e,t]);case 2:return vi([e,t],0);case 3:return xi([e,t],0);case 4:return bi([e,t],0);default:throw new qd("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Yp(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new qd("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return Bi(e,t)}function Qp(e){return kc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function Jp(e,t,n,s){if(e.rank<2||t.rank<2)throw new Xd("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Xd("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return ml({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?eh(e.rank,s,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),r=a.pop();e=li(e,[-1,r]);const o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=li(Yc(t,u),[c,-1]);const m=[...a,...l];return li(ml({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?eh(e.rank,s,"channelsLast"):null,activation:n}),m)}}function Zp(e,t,n){return Ka((()=>(t=Array.isArray(t)?Vc(t,"int32"):zr(t,"int32"),Wi(e,t,n))))}function $p(e){return Gr(e,e)}function eh(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new qd("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===s.length?li(t,[1,s[0],1,1,1]):li(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?li(t,[1,1,1,1,s[0]]):li(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?li(t,[1,s[0],1,1]):li(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?li(t,[1,1,1,s[0]]):li(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?li(t,[1,s[0],1]):li(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?li(t,[1,1,s[0]]):li(t,[1].concat(s))}else if(e<3)return t;throw new qd("Unsupported input rank by biasAdd: ".concat(t.rank))}function th(e,t,n){return Ka((()=>(null==n&&(n="channelsLast"),Cp(n),Wr(e,eh(e.rank,t,n)))))}function nh(e,t,n,s){return Ka((()=>Qc(e,t,n,s)))}function sh(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const ah=["fanIn","fanOut","fanAvg"],rh=["normal","uniform","truncatedNormal"];class oh extends Jr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ih extends oh{apply(e,t){return hc(e,t)}}ih.className="Zeros",$r(ih);class ch extends oh{apply(e,t){return fc(e,t)}}ch.className="Ones",$r(ch);class lh extends oh{constructor(e){if(super(),"object"!==typeof e)throw new qd("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new qd("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return Ka((()=>Gr(Xr(this.value),fc(e,t))))}getConfig(){return{value:this.value}}}lh.className="Constant",$r(lh);class uh extends oh{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ic(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}uh.className="RandomUniform",$r(uh);class mh extends oh{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xd("randomNormal does not support dType ".concat(t,"."));return Qp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}mh.className="RandomNormal",$r(mh);class _h extends oh{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xd("truncatedNormal does not support dType ".concat(t,"."));return Hc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_h.className="TruncatedNormal",$r(_h);class dh extends oh{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ka((()=>{if(2!==e.length||e[0]!==e[1])throw new qd("Identity matrix initializer can only be used for 2D square matrices.");return Gr(this.gain,zi(e[0]))}))}getConfig(){return{gain:this.gain}}}dh.className="Identity",$r(dh);class ph extends oh{constructor(e){if(super(),e.scale<0)throw new qd("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,mp(ah,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){mp(rh,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Cp(s),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===s){const s=Lp(e,2);t=e[1]*s,n=e[0]*s}else if("channelsLast"===s){const s=Lp(e,0,e.length-2);t=e[e.length-2]*s,n=e[e.length-1]*s}}else{const s=Lp(e);t=Math.sqrt(s),n=Math.sqrt(s)}return[t,n]}(e),s=n[0],a=n[1];let r=this.scale;if("fanIn"===this.mode?r/=Math.max(1,s):"fanOut"===this.mode?r/=Math.max(1,a):r/=Math.max(1,(s+a)/2),"normal"===this.distribution){const n=Math.sqrt(r);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xd("".concat(this.getClassName()," does not support dType ").concat(t,"."));return Hc(e,0,n,t,this.seed)}{const n=Math.sqrt(3*r);return Ic(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ph.className="VarianceScaling",$r(ph);class hh extends ph{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ph.className}}hh.className="GlorotUniform",$r(hh);class fh extends ph{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ph.className}}fh.className="GlorotNormal",$r(fh);class yh extends ph{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ph.className}}yh.className="HeNormal",$r(yh);class wh extends ph{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ph.className}}wh.className="HeUniform",$r(wh);class gh extends ph{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ph.className}}gh.className="LeCunNormal",$r(gh);class vh extends ph{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ph.className}}vh.className="LeCunUniform",$r(vh);class xh extends oh{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Ka((()=>{if(e.length<2)throw new Xd("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=g(e.slice(0,-1)),s=e[e.length-1],a=n*s;a>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(a,") elements: ")+"Slowness may result.");const r=Qp([Math.max(s,n),Math.min(s,n)],0,1,t,this.seed),o=Jl.qr(r,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return i=Gr(i,c.sign()),n<s&&(i=i.transpose()),Gr(Xr(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}xh.className="Orthogonal",$r(xh);const bh={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function kh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ip(e,Zr.getMap().classNameMap,t,"initializer")}function Ih(e){return rp(e)}function Sh(e){if("string"===typeof e){const t=e in bh?bh[e]:e;if("GlorotNormal"===t)return new fh;if("GlorotUniform"===t)return new hh;if("HeNormal"===t)return new yh;if("HeUniform"===t)return new wh;if("LeCunNormal"===t)return new gh;if("LeCunUniform"===t)return new vh;{const e={};return e.className=t,e.config={},kh(e)}}return e instanceof oh?e:kh(e)}function Ch(e){return Array.isArray(e)&&Array.isArray(e[0])}function Nh(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Th(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new qd("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Eh(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new qd("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Rh(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Ah="Variable";class Fh{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ah,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=yp(),n=null==n?Ah:n,this.originalName=Fp(n),this.name=Dp(this.originalName),this.trainable_=s,this.constraint=a,this.val=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;return Na.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Dh(e){return e.map((e=>e.read()))}function Mh(e){e.forEach((e=>{e[0].write(e[1])}))}class Oh{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Lh{constructor(e,t,n,s,a,r,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=a,this.outputTensorIndex=o,this.id=yp(),null!=r&&(this.originalName=Fp(r),this.name=Dp(this.originalName)),this.rank=t.length}}let Bh=0;class zh{constructor(e,t){this.callArgs=t,this.id=Bh++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ph=0;class Wh extends Jr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ph++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=np(e)+"_"+gp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Kd("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new qd("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return ep(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ep(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new jd("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new jd("Layer ".concat(this.name)+" is not connected, no input to return.");return ep(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new jd("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new jd("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ep(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=tp(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=tp(this.inputSpec);if(t.length!==n.length)throw new qd("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let s=0;s<t.length;s++){const e=t[s],a=n[s];if(null==a)continue;const r=e.rank;if(null!=a.ndim&&r!==a.ndim)throw new qd("Input ".concat(s," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(a.ndim,", found ndim=").concat(r));if(null!=a.maxNDim&&r>a.maxNDim)throw new qd("Input ".concat(s," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(a.maxNDim,", found ndim=").concat(r));if(null!=a.minNDim&&r<a.minNDim)throw new qd("Input ".concat(s," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(a.minNDim,", found ndim=").concat(r,"."));if(null!=a.dtype&&e.dtype!==a.dtype)throw new qd("Input ".concat(s," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(a.dtype,", found dtype=").concat(e.dtype,"."));if(a.axes){const t=e.shape;for(const e in a.axes){const n=Number(e),r=a.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=r&&-1===[r,null].indexOf(o))throw new qd("Input ".concat(s," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(r," but got shape ").concat(t,"."))}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],r=e.shape[t];if(null!=n&&null!=r&&n!==r)throw new qd("Input ".concat(s," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(a.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=tp(e),s=function(e){let t=!0;for(const n of tp(e))if(!(n instanceof Lh)){t=!1;break}return t}(e),a=function(e){let t=!0;for(const n of tp(e))if(n instanceof Lh){t=!1;break}return t}(e);if(s===a)throw new qd("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ap(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of tp(e))t.push(n.shape);this.build(ep(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);const a=tp(s),r=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),r.push(e);if(s=ep(r),null!=this.activityRegularizer)throw new Xd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=tp(e);const t=[];for(const n of e)t.push(n.shape);return ep(t)}(e),s=this.computeOutputShape(n);let a;const r="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Lh(r,n,this,tp(e),t,this.name,s))):new Lh(r,s,this,tp(e),t,this.name),this.addInboundNode(e,a,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Xd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new jd("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new jd("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Kd("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Rh(this.weights)}build(e){this.built=!0}getWeights(){return Dh(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Ka((()=>{const t=this.weights;if(t.length!==e.length)throw new qd('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],s=Dh(t);for(let a=0;a<s.length;++a){const r=s[a],o=t[a],i=e[a];if(!v(r.shape,i.shape))throw new qd("Layer weight shape ".concat(r.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}Mh(n)}))}addWeight(e,t,n,s,a,r,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new qd("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=i?i():Sh("zeros"));const c=s.apply(t,n),l=new Fh(c,n,e,r,o);return c.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==r&&(r=!0),r?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=tp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const s=this.computeMask(e,n),a=tp(t),r=tp(s);if(a.length!==r.length)throw new Error("".concat(this.name," outputs ").concat(a.length," tensors ")+"but ".concat(a.length," masks for those tensors"));for(let o=0;o<a.length;o++)a[o].kerasMask=r[o]}addInboundNode(e,t,n,s,a,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=tp(e);t=tp(t),n=tp(n),s=tp(s),a=Nh(a),r=Nh(r);const c=[],l=[],u=[];for(const m of i)c.push(m.sourceLayer),l.push(m.nodeIndex),u.push(m.tensorIndex);new zh({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:a,outputShapes:r},o);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Uh(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Uh(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Vh extends Wh{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:gp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new qd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new qd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new qd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new Lh(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new zh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new qd("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Gh(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new qd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new Vh({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}Vh.className="InputLayer",$r(Vh);class Hh{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Hh)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new qd("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return zr(t,e.dtype)}catch(JL){throw new qd("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Lh){if(null==this.id2Value[e.id])throw new qd("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new qd("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Lh){if(null==this.id2Value[e.id])throw new qd("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new qd("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&qa(this.id2Mask)}}const jh=new Qd,Kh=new Qd;function qh(e,t,n,s){const a=null!=n&&n.training,r=Array.isArray(e),o=r?e:[e],i=o.map((e=>e.name)),c=[],l=t.names();for(const p of i)-1!==l.indexOf(p)?c.push(t.getValue(p)):c.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let m,_=jh.get(u);if(null==_){const e=function(e,t){f(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const a=Yh(e[0],t);n=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of e){const{sorted:e,recipientMap:o}=Yh(r,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in o)null==s[t]&&(s[t]=new Set),o[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:Xh(s)}}(o,t);_=e.sorted,m=e.recipientCounts,jh.put(u,_),Kh.put(u,m)}m={},a||Object.assign(m,Kh.get(u));const d=new Hh(t);for(let p=0;p<_.length;++p){if(null!=s){const e=ja().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=_[p],r=e.sourceLayer;if(r instanceof Vh)continue;const o=[],l=[],u=[];let h=!1;for(const n of e.inputs){const e=d.getValue(n),s=d.getMask(n);o.push(e),l.push(s),null!=s&&(h=!0),a||(m[n.name]--,0!==m[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}h&&((n=n||{}).mask=l[0]);const f=tp(r.apply(o,n));let y=null;r.supportsMasking&&(y=r.computeMask(o,l));const w=Qh(e),g=Array.isArray(w)?w:[w];for(let t=0;t<g.length;++t){d.hasKey(g[t])||d.add(g[t],f[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(g[t].name);-1!==e&&(c[e]=f[t])}a||qa(u)}return d.disposeMasks(),r?c:c[0]}function Xh(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Yh(e,t){const n=new Set,s=[],a={};for(const i of t.names())n.add(i);const r=[],o=[];for(r.push(e);r.length>0;){const e=r[r.length-1];if(n.has(e.name)){r.pop();continue}const t=o[o.length-1]===r.length-1;if(0===e.inputs.length||t)r.pop(),s.push(e),n.add(e.name),t&&o.pop();else{o.push(r.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||r.push(t)}}return{sorted:s,recipientMap:a}}function Qh(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Jh(e,t){return Ka((()=>Hr(qi(Gr(e,e),t,!0))))}Q().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=jh&&jh.setMaxEntries(e),null!=Kh&&Kh.setMaxEntries(e)}));class Zh extends Jr{getConfig(){return{}}}class $h extends Zh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ka((()=>{const t=Jh(e,this.axis),n=yi(t,0,this.maxValue);return Gr(e,Vr(n,Wr(Up(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}$h.className="MaxNorm",$r($h);class ef extends Zh{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ka((()=>Vr(e,Wr(Up(),Jh(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ef.className="UnitNorm",$r(ef);class tf extends Zh{apply(e){return Cc(e)}}tf.className="NonNeg",$r(tf);class nf extends Zh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ka((()=>{const t=Jh(e,this.axis),n=Wr(Gr(this.rate,yi(t,this.minValue,this.maxValue)),Gr(1-this.rate,t));return Gr(e,Vr(n,Wr(Up(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}nf.className="MinMaxNorm",$r(nf);const sf={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function af(e){return rp(e)}function rf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ip(e,Zr.getMap().classNameMap,t,"constraint")}function of(e){if(null==e)return null;if("string"===typeof e){return rf({className:e in sf?sf[e]:e,config:{}})}return e instanceof Zh?e:rf(e)}async function cf(e){if(null==e)return;const t=[],n=[],s=[];for(const a in e){const r=e[a];if("number"!==typeof r){const e=r;t.push(e.data()),n.push(a),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];qa(s)}}function lf(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var uf;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(uf||(uf={}));class mf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class _f{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class df extends mf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const s in t){const e=t[s];if("number"===typeof e)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+e*n;else{let t;s in this.totals?t=this.totals[s]:this.totals[s]=0;const a=Ka((()=>Wr(this.totals[s],Gr(e,n))));this.totals[s]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Ka((()=>{const e=Gr(Vr(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Xa(t[n])})))}}class pf extends mf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const s=this.history[a];for(let r=0;r<s.length;++r)if("number"!==typeof s[r]){const o=s[r];e.push(o.data()),t.push(a),n.push(r)}}const s=await Promise.all(e);for(let a=0;a<s.length;++a){this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=s[a][0]}}}class hf extends mf{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||eu,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");D(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,a=null!=n?n():Ws();return function(){const r=null!=n?n():Ws();return r-a<t||(a=r,s=e(...arguments)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await cf(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await cf(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await cf(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await cf(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await cf(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):D(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await cf(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await cf(e),await this.trainEnd(e))}}function ff(e,t){if(null==e&&(e={}),e instanceof mf)return[e];if(Array.isArray(e)&&e[0]instanceof mf)return e;return tp(e).map((e=>new hf(e,t)))}class yf{constructor(){}static registerCallbackConstructor(e,t){f(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),yf.checkForDuplicate(t),null==yf.constructors[e]&&(yf.constructors[e]=[]),yf.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yf.constructors){yf.constructors[+t].forEach((t=>{if(t===e)throw new qd("Duplicate callback constructor.")}))}}static clear(){yf.constructors={}}static createCallbacks(e){const t=[];for(const n in yf.constructors){const s=+n;e>=s&&t.push(...yf.constructors[s])}return t.map((e=>new e))}}function wf(e,t,n,s,a,r,o,i,c){const l=new pf,u=[new df,...yf.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const m=new _f(u);return m.setParams({epochs:n,initialEpoch:s,samples:a,steps:r,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:m,history:l}}function gf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ip(e,Zr.getMap().classNameMap,t,"layer",n)}function vf(e,t){return Ka((()=>{"float32"!==e.dtype&&(e=zr(e,"float32"));const n=qi($p(e),t,!0),s=no(n.shape,Up()),a=Hr(mo(n,s));return Vr(e,a)}))}function xf(e,t){return Ka((()=>cc($p(ro(t,e)),-1)))}function bf(e,t){return Ka((()=>cc(io(ro(t,e)),-1)))}function kf(e,t){return Ka((()=>{const n=ro(e,t),s=yi(io(e),Up(),Number.MAX_VALUE),a=io(Vr(n,s));return Gr(100,cc(a,-1))}))}function If(e,t){return Ka((()=>{const n=yi(t,Up(),Number.MAX_VALUE),s=Hi(Wr(1,n)),a=yi(e,Up(),Number.MAX_VALUE),r=Hi(Wr(1,a));return cc($p(ro(s,r)),-1)}))}function Sf(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Ka((()=>{if(n)t=Lc(t);else{const e=qi(t,t.shape.length-1,!0);t=Vr(t,e)}return t=yi(t,Up(),1-Up()),_c(qi(Gr(zr(e,"float32"),Hi(t)),t.shape.length-1))}))}function Cf(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Ka((()=>{const s=zr(Pi(function(e){const t=[Lp(e.shape)];return li(e,t)}(e)),"int32"),a=(t=yi(t,Up(),1-Up())).shape;return Sf(li(pc(s,a[a.length-1]),a),t,n)}))}function Nf(e,t){return Ka((()=>{let n;return n=yi(t,Up(),1-Up()),n=Hi(Vr(n,ro(1,n))),cc(function(e,t){if(!v(e.shape,t.shape))throw new qd("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return Ka((()=>{const n=Cc(t),s=_c(io(t));return Wr(ro(n,Gr(t,e)),ji(Oi(s)))}))}(e,n),-1)}))}function Tf(e,t){return Ka((()=>{const n=yi(e,Up(),1),s=yi(t,Up(),1);return qi(Gr(e,Hi(Vr(n,s))),-1)}))}function Ef(e,t){return Ka((()=>{const n=vf(e,-1),s=vf(t,-1),a=Gr(n,s);return _c(qi(a,-1))}))}yf.constructors={};const Rf={meanSquaredError:xf,meanAbsoluteError:bf,meanAbsolutePercentageError:kf,meanSquaredLogarithmicError:If,squaredHinge:function(e,t){return Ka((()=>{const n=mo(0,ro(1,Gr(e,t)));return cc($p(n),-1)}))},hinge:function(e,t){return Ka((()=>{const n=mo(0,ro(1,Gr(e,t)));return cc(n,-1)}))},categoricalHinge:function(e,t){return Ka((()=>{const n=qi(Gr(e,t),-1),s=Ki(Gr(ro(1,e),t),-1);return mo(0,Wr(1,ro(s,n)))}))},logcosh:function(e,t){return Ka((()=>{const n=Math.log(2),s=ro(t,e),a=ro(Wr(s,Bc(Gr(-2,s))),n);return cc(a,-1)}))},categoricalCrossentropy:Sf,sparseCategoricalCrossentropy:Cf,binaryCrossentropy:Nf,kullbackLeiblerDivergence:Tf,poisson:function(e,t){return Ka((()=>{const n=Hi(Wr(Up(),t));return cc(ro(t,Gr(e,n)),-1)}))},cosineProximity:Ef};function Af(e){if("string"===typeof e){if(e in Rf)return Rf[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new qd(t)}return e}function Ff(e,t){return Ka((()=>{const n=Gr(.5,yc(t)),s=Vp(Ui(t,n),e.dtype);return cc(Di(e,s),-1)}))}function Df(e,t){return Ka((()=>Vp(Di(qo(e,-1),qo(t,-1)),"float32")))}function Mf(e,t){return Ka((()=>zr(qi(ac(Di(e,1),Di(t,1))),"float32")))}function Of(e,t){return Nf(e,t)}function Lf(e,t){return e.rank===t.rank&&(e=Pc(e,[e.rank-1])),(t=qo(t,-1)).dtype!==e.dtype&&(t=zr(t,e.dtype)),zr(Di(e,t),"float32")}const Bf=Sf,zf=Cf,Pf={binaryAccuracy:Ff,categoricalAccuracy:Df,precision:function(e,t){return Ka((()=>{const n=Mf(e,t),s=function(e,t){return Ka((()=>zr(qi(ac(Di(e,0),Di(t,1))),"float32")))}(e,t),a=Wr(n,s);return zr(Kc(Ui(a,0),Vr(n,a),0),"float32")}))},categoricalCrossentropy:Bf,sparseCategoricalCrossentropy:zf,mse:xf,MSE:xf,mae:bf,MAE:bf,mape:kf,MAPE:kf,cosine:Ef};function Wf(e){if("string"===typeof e&&e in Pf)return Pf[e];if("string"!==typeof e&&null!=e)return e;throw new qd("Unknown metric ".concat(e))}function Uf(e){if(Zd(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Rf))if(Rf[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Pf))if(Pf[n]===e){t=n;break}return void 0!==t?t:e.name}}const Vf=1048576;function Gf(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Hf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Vf&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Vf,"."))}}function Hf(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Hf(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Hf(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function jf(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=function(e){let t=!0;const n=[],s=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}s.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==s.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),r=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){r.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}s("_".repeat(t)),Kf(r,n,s),s("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)a?qf(i[u],n,s):Xf(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Rh(e.collectedTrainableWeights):Rh(e.trainableWeights);return t}(e),l=Rh(e.nonTrainableWeights);s("Total params: ".concat(c+l)),s("Trainable params: ".concat(c)),s("Non-trainable params: ".concat(l)),s("_".repeat(t))}function Kf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,s="";for(let a=0;a<e.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=e[a],s=s.slice(0,t[a]),s+=" ".repeat(t[a]-s.length);n(s)}function qf(e,t,n){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(JL){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(JL){s="multiple"}const r=e.name,o=e.getClassName();Kf(["".concat(r," (").concat(o,")"),a,s,e.countParams().toString()],t,n)}function Xf(e,t,n,s){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(JL){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(JL){a="multiple"}const o=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],s=u.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(s,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];Kf(["".concat(i," (").concat(c,")"),r,a,e.countParams().toString(),l],t,s);for(let u=1;u<o.length;++u)Kf(["","","","",o[u]],t,s)}function Yf(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Qf(e,t){if(null===e)return null;if("string"===typeof e)return sp(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];Yf(t,a,s)?n.push(s):n.push(Qf(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"===typeof s)t[n]=s;else{const e=sp(n);t[e]=Qf(s,e)}}return t}}function Jf(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return np(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];Yf(t,a,s)?n.push(s):n.push(Jf(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],a=np(n);t[a]="name"!==n&&"className"!==n||"string"!==typeof s?Jf(s,n):s}return t}}const Zf="4.19.0";class $f extends Wh{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=gp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],lp(this.inputs).length!==this.inputs.length)throw new qd("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));lp(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Zd(0===t,"input layer has >1 nodes"),Zd(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Vh))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},a={},r={},o=[],i=(e,t,n,s,a,c)=>{null!=s&&null!=a&&null!=c||(s=e.sourceLayer,a=e.nodeIndex,c=e.tensorIndex);const l=s.inboundNodes[a];if(-1!==n.indexOf(l))throw new Kd("The tensor ".concat(e.name,' at layer "').concat(s.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add($f.nodeKey(s,a)),s.id in r||(r[s.id]=Object.keys(r).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let r=0;r<u;r++){const e=l.inputTensors[r],s=l.inboundLayers[r],a=l.nodeIndices[r],o=l.tensorIndices[r];i(e,t,n,s,a,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const r=null==s[y.outboundLayer.id]?0:s[y.outboundLayer.id];e=Math.max(e,r),s[y.outboundLayer.id]=e,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let s=0;s<y.inboundLayers.length;s++){const a=y.inboundLayers[s],r=y.nodeIndices[s],o=a.inboundNodes[r],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const m={};for(const y in t){const e=t[y];e in m||(m[e]=[]),m[e].push(n[y])}const _={};for(const y in s){const e=s[y];e in _||(_[e]=[]),_[e].push(a[y])}let d=Object.keys(_).map((e=>parseInt(e,10))).sort(cp);this.layers=[];for(const y of d){const e=_[y];e.sort(((e,t)=>{const n=r[e.id],s=r[t.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof $f&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=_,d=Object.keys(m).map((e=>parseInt(e,10))).sort(cp);const p=this.inputs.slice(),h=[];for(const y of d)for(const e of m[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===p.indexOf(n))throw new Kd("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(h));for(const t of e.outputTensors)p.push(t);h.push(t.name)}}this.nodesByDepth=m;const f=this.layers.map((e=>e.name));for(const y of f){const e=f.filter((e=>e===y)).length;if(1!==e)throw new Kd('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(f))}this.outboundNodes=[],this.inboundNodes=[],new zh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new qd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let s=0;const a=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const r=a?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[r])throw new qd("Duplicate weight name: ".concat(r));n[r]=t,s++}const r=[];for(const o in e){let s=o;if(null==n[o]){const e=o.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])r.push([n[s],e[o]]);else if(t)throw new qd("Provided weight data has no target variable: ".concat(o));delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new qd("".concat(e.length," of ").concat(s," weights are not set: ")+"".concat(e))}Mh(r)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),s=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!s.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Zf),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Jf(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ka((()=>{e=tp(e);const n=new Hh;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return qh(this.outputs,n,t)}))}computeMask(e,t){return Ka((()=>{let n;return e=tp(e),n=null==t?Jd(null,e.length):tp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Nh(e);if(t.length!==this.inputLayers.length)throw new qd("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],s=t[o];n[e.name+"_0_0"]=s}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cp);if(s.length>1)for(const o of s){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const s=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],a=t.nodeIndices[o],r=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(a,"_").concat(r)];s.push(i)}const a=Nh(e.computeOutputShape(ep(s))),r=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n["".concat(e.name,"_").concat(r,"_").concat(t)]=a[t]}}}const a=[],r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],s="".concat(e.name,"_").concat(t,"_").concat(n);r.push(s)}for(let o=0;o<r.length;o++){const e=r[o];Zd(e in n),a.push(n[e])}return ep(a)}runInternalGraph(e,t){null==t&&(t=Jd(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const s=this.inputs[i],a=e[i],r=t[i];n[s.id]=[a,r]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cp);for(const i of s){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,a=t.outputTensors,r=new Array;for(const t of s)t.id in n&&r.push(n[t.id]);if(r.length===s.length){let s,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===r.length){const[t,n]=r[0];null==l.mask&&(l.mask=n),i=tp(e.call(t,l)),c=tp(e.computeMask(t,n)),s=[t],o=[n]}else s=r.map((e=>e[0])),o=r.map((e=>e[1])),null==l.mask&&(l.mask=o),i=tp(e.call(s,l)),c=tp(e.computeMask(s,o));if(e.activityRegularizer)throw new Xd("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],s=i[e],r=c[e];n[t.id]=[s,r]}}}}const a=[],r=[],o=[];for(const i of this.outputs){Zd(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),a.push(e),r.push(t)}return[a,r,o]}buildNodeConversionMap(e){const t={};let n;for(const s of this.layers){n=s instanceof $f?1:0;for(let e=0;e<s.inboundNodes.length;e++){const a=$f.nodeKey(s,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new qd("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new qd("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new qd("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return Ka((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=$f.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const r of this.layers){const e=r.getClassName(),s=r.getConfig(),a=[];for(let n=0;n<r.inboundNodes.length;n++){const e=r.inboundNodes[n],s=$f.nodeKey(r,n);let o={};if(this.containerNodes.has(s)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(JL){console.warn("Layer ".concat(r.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let s=0;s<e.inboundLayers.length;s++){const a=e.inboundLayers[s],r=e.nodeIndices[s],i=e.tensorIndices[s];let c=t[$f.nodeKey(a,r)];null==c&&(c=0),n.push([a.name,c,i,o])}a.push(n)}}}const o={};o.name=r.name,o.className=e,o.config=s,o.inboundNodes=a,n.push(o)}e.layers=n;const s=[];for(let r=0;r<this.inputLayers.length;r++){const e=this.inputLayers[r],n=this.inputLayersNodeIndices[r],a=$f.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[r];s.push([e.name,o,i])}e.inputLayers=s;const a=[];for(let r=0;r<this.outputLayers.length;r++){const e=this.outputLayers[r],n=this.outputLayersNodeIndices[r],s=$f.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let o=t[s];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[r];a.push([e.name,o,i])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={},a={};function r(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let a;for(const o of t){const i=o[0],c=o[1],l=o[2];if(a=null==o[3]?{}:o[3],!(i in s))return void r(e,t);const u=s[i];if(u.inboundNodes.length<=c)return void r(e,t);const m=u.inboundNodes[c];n.push(m.outputTensors[l])}n.length>0&&e.apply(ep(n),a)}function i(e){const a=e.name,o=gf(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),s[a]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new qd("Corrupted configuration, expected array for nodeData: ".concat(e));r(o,e)}))}const c=t.name,l=t.layers;for(const p of l)i(p);for(;!up(a);)for(const e of l){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const u=[],m=[],_=t.inputLayers;for(const p of _){const e=p[0],t=p[1],n=p[2];Zd(e in s);const a=s[e].inboundNodes[t].outputTensors;u.push(a[n])}const d=t.outputLayers;for(const p of d){const e=p[0],t=p[1],n=p[2];Zd(e in s);const a=s[e].inboundNodes[t].outputTensors;m.push(a[n])}return new e({inputs:u,outputs:m,name:c})}get stateful(){if(this._stateful)throw new qd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ka((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ey(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(s," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(s,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(s," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function ty(e,t){return ey(e,t,"classWeight")}async function ny(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ka((()=>{if(1===e.shape.length)return Pr(e);if(2===e.shape.length){if(e.shape[1]>1){return qo(e,1)}if(1===e.shape[1])return li(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),s=Array.from(await t.data());qa(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");a.push(n[e])})),Vc(a,"float32")}return null}function sy(e,t){return Gr(e,t)}function ay(e,t){let n,s;const a=t;n=a.xs,s=a.ys,f(null!=n&&null!=s,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const r=ry("input",e.inputNames,n),o=ry("output",e.outputNames,s),i=r[0].shape[0];f(r.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(r.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),f(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<r.length;c++)f(r[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(r[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<o.length;c++)f(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:r,ys:o}}function ry(e,t,n){if(n instanceof oa)return[n];if(Array.isArray(n))return f(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const s=[];for(const a of t){if(null==n[a])throw new qd("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(a,"'."));s.push(n[a])}return s}}async function oy(e,t,n){const s=null!=n.batchesPerEpoch;if(f(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),f(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),f(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),f(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),f(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let r,o;if(a)if(iy(n.validationData))f(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Xd("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);r=e.xs,o=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=a?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=ff(n.callbacks,n.yieldEvery),m=null==n.verbose?1:n.verbose,{callbackList:_,history:d}=wf(u,m,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);_.setModel(e),e.history=d,await _.onTrainBegin(),e.stopTraining_=!1;let p=null==n.initialEpoch?0:n.initialEpoch,h=await t.iterator();for(;p<n.epochs;){const l={};await _.onEpochBegin(p);let u=0,m=0;for(s||(h=await t.iterator());!s||u<n.batchesPerEpoch;){const t=await h.next();if(s&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:a}=ay(e,t.value),r={};r.batch=m,r.size=s[0].shape[0],await _.onBatchBegin(m,r);const o=[];if(null!=n.classWeight){const t=ty(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await ny(a[e],null,t[e]))}const l=s.concat(a).concat(o),d=i(l);qa(l);for(let e=0;e<c.length;++e){const t=c[e],n=d[e];r[t]=n,Xa(n)}await _.onBatchEnd(m,r),lf(r),m++,u++}if(s?u>=n.batchesPerEpoch:t.done){if(a){let t;t=iy(n.validationData)?tp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):tp(e.evaluate(r,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await _.onEpochEnd(p,l),p++,e.stopTraining_)break}return await _.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function iy(e){return"function"===typeof e.iterator}function cy(e){f(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function ly(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Hp(e,t,n-t))):Hp(e,t,n-t)}function uy(e,t){return Ka((()=>null==e?null:Array.isArray(e)?e.map((e=>uy(e,t))):Zp(e,"int32"===t.dtype?t:zr(t,"int32"))))}function my(e,t){const n=[];let s=0,a=null;for(;s<e;)a=s+t,a>=e&&(a=e),n.push([s,a]),s=a;return n}function _y(e){const t=[];e instanceof oa&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Gp(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function dy(e,t){if(null==e)return;const n=[];if(t instanceof oa)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const a in t){const e=t[a];n.push(e.id)}const s=[];if(e instanceof oa)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function py(e){return Array.isArray(e)}function hy(e){return!function(e){return e instanceof oa}(e)&&!py(e)}function fy(e,t,n){let s,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(py(e)&&e.length>0)t=!0;else if(hy(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new qd("Error when checking model ".concat(r," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(hy(e)){s=[];for(const n of t){if(null==e[n])throw new qd('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));s.push(e[n])}}else if(py(e)){if(e.length!==t.length)throw new qd("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));s=e}else{if(t.length>1)throw new qd("The model ".concat(r," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));s=[e]}if(s=_y(s),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=s[o];if(e.shape.length!==n[o].length)throw new qd("Error when checking ".concat(r,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!a)continue;const s=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&s!==i)throw new qd("".concat(r," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(r," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return s}function yy(e,t,n){let s,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new qd("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));s=e}else{if(t.length>1)throw new qd("The model expects ".concat(t.length," ").concat(r," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));s=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=s[o];if(e.shape.length!==n[o].length)throw new qd("Error when checking ".concat(r,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let s=0;s<n[o].length;++s){if(0===s&&!a)continue;const i=e.shape[s],c=n[o][s];if(null!=c&&c!==i)throw new qd("Error when checking ".concat(r,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class wy extends $f{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new qd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");jf(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Zl.adagrad(.01),Adadelta:()=>Zl.adadelta(1,.95,Up()),Adam:()=>Zl.adam(.001,.9,.999,Up()),Adamax:()=>Zl.adamax(.002,.9,.999,Up(),0),RMSProp:()=>Zl.rmsprop(.001,.9,0,Up()),SGD:()=>Zl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new qd("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof eo))throw new qd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new qd("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Af(e)))}else{const n=Af(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new qd('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Af(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const e=this.internalOutputShapes[r],t=this.outputNames[r];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[r])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ap("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ap("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,s,r;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Nf?-1!==["accuracy","acc"].indexOf(o)?s=Ff:-1!==["crossentropy","ce"].indexOf(o)&&(s=Of):this.lossFunctions[e]===Cf?-1!==["accuracy","acc"].indexOf(o)?s=Lf:-1!==["crossentropy","ce"].indexOf(o)&&(s=zf):-1!==["accuracy","acc"].indexOf(o)?s=Df:-1!==["crossentropy","ce"].indexOf(o)&&(s=Bf),-1!==["accuracy","acc"].indexOf(o)?a="acc":-1!==["crossentropy","ce"].indexOf(o)&&(a="ce"),r=s,n=""+a}else{const e=Wf(o);r=e,n=""+Uf(o)}let t;Ap(n,(()=>{t=r})),a(e,n,t)}})(s[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=null==n.batchSize?32:n.batchSize;cy(s);const a=this.standardizeUserDataXY(e,t,!0,s);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return ep(this.testLoop(t,e,s,n.verbose,n.steps))}finally{dy(a[0],e),dy(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,a=e.testFunction;let r=[];if(n.verbose>0)throw new Xd("Verbose mode is not implemented yet.");f(!s||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!s||c<n.batches;){const t=await o.next();if(r=Ka((()=>{if(t.value){const{xs:n,ys:s}=ay(e,t.value),o=n.concat(s),l=Ka((()=>a(o)));if(qa(o),0===c)for(let e=0;e<l.length;++e)r.push(Xr(0));const u=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=r[e];r[e]=Ka((()=>Wr(r[e],Gr(u,t)))),c>0&&qa(n)}qa(l),i+=u,++c}return r})),t.done){s&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<r.length;++l){const e=r[l];r[l]=Vr(r[l],i),qa(e)}return ep(r)}(this,e,t)}checkNumSamples(e,t,n){let s,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(s=null,null!=t)throw new qd("If ".concat(a," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new qd("Either the input data should have a defined shape, or "+"".concat(a," shoud be specified."));s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new qd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],a=this.retrieveSymbolicTensors(s),r=new Hh;if(e instanceof oa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new qd("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)r.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new qd("No value is provided for the model's input ".concat(i.name));r.add(i,t)}const o=qh(a,r);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Jd(null,e.length);let n=e.length;for(const s of this.layers){const a=Array.isArray(s.output)?s.output:[s.output],r=a.map((e=>e.name));for(let s=0;s<e.length;++s){const o=r.indexOf(e[s]);if(-1!==o&&(t[s]=a[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new qd("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Ka((()=>{const s=this.checkNumSamples(e);if(n)throw new Xd("Verbose predictLoop() is not implemented yet.");const a=my(s,t),r=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){Ka((()=>{const n=a[t][0],s=a[t][1],r=ly(e,n,s),o=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)o.push({key:this.inputs[e],value:r[e]});else o.push({key:this.inputs[0],value:r});const i=new Hh(o);return qh(this.outputs,i)})).forEach(((e,t)=>r[t].push(e)))}return ep(r.map((e=>wi(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=_y(e);yy(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return cy(e),this.predictLoop(n,e)}finally{dy(n,e)}}predictOnBatch(e){yy(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Kd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a];this.feedLossFns[a]===Cf?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(e,t,n){const s=lp(e.map((e=>e.shape[0])));s.sort();const a=lp(t.map((e=>e.shape[0])));if(a.sort(),s.length>1)throw new qd("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(a.length>1)throw new qd("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(s.length>0&&a.length>0&&!v(s,a))throw new qd("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(s[0]," input sample(s) and ").concat(a[0]," target ")+"sample(s).")}(e=fy(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fy(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const s=[xf,Nf,Sf];for(let a=0;a<e.length;++a){const r=e[a],o=t[a],i=n[a];if(null!=o){if(o===Sf&&1===r.shape[r.shape.length-1])throw new qd("You are passing a target array of shape ".concat(r.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==s.indexOf(o)){const e=r.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const s=e[n],a=t[n];if(null!=a&&s!==a)throw new qd("A target Tensor with shape ".concat(r.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new qd("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,s){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,a,r);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=s){const e=ty(s,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await ny(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return Ka((()=>{const r=this.checkNumSamples(t,n,a,"steps"),o=[];if(s>0)throw new Xd("Verbose mode is not implemented yet.");if(null!=a)throw new Xd("steps mode in testLoop() is not implemented yet");{const s=my(r,n),a=Vc(Pp(0,r));for(let n=0;n<s.length;++n){const r=s[n][0],i=s[n][1],c=Hp(a,r,i-r),l=uy(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)o.push(Xr(0));for(let e=0;e<u.length;++e){const t=u[e];o[e]=Wr(o[e],Gr(i-r,t))}}for(let e=0;e<o.length;++e)o[e]=Vr(o[e],r)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let a=s;if($d(e,s)>1){const t=$d(e.slice(0,n),s);a+="_".concat(t)}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),r=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Hh(e),i=qh(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(s[n],i[n]);null!=a[n]&&(e=sy(e,a[n]));const r=cc(e);t.push(r),c=0===n?e:Wr(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=cc(t(s[a],i[a]))}Xa(e),r.push(e)}return c=cc(c),this.calculateLosses().forEach((e=>{c=Wr(c,e)})),c}),!0,o)].concat(r)}}makeTestFunction(){this.testFunction=e=>Ka((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let e=0;e<this.inputs.length;++e)r.push({key:this.inputs[e],value:s[e]});const o=new Hh(r),i=qh(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],r=cc(s(a[e],i[e]));n=0===e?r:Wr(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],r=cc(n(a[s],i[s]));t.push(r)}return t}))}async fit(e,t){let n,s,a,r,o,i,c,l,u,m=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const _=null==m.batchSize?32:m.batchSize;cy(_);const d=!1,p=await this.standardizeUserData(e,t,m.sampleWeight,m.classWeight,d,_);n=p[0],s=p[1],u=p[2];let h,f=!1;if(null!=m.validationData&&m.validationData.length>0){if(f=!0,2!==m.validationData.length)throw 3===m.validationData.length?new Xd("validationData including sample weights is not supported yet."):new qd("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(m.validationData," is invalid."));o=m.validationData[0],i=m.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,_);c=t[0],l=t[1],h=c.concat(l)}else if(null!=m.validationSplit&&m.validationSplit>0&&m.validationSplit<1){f=!0;const e=Math.floor(n[0].shape[0]*(1-m.validationSplit)),t=n[0].shape[0];c=ly(n,e,t),a=n,n=ly(n,0,e),l=ly(s,e,t),r=s,s=ly(s,0,e),h=c.concat(l)}else null!=m.validationSteps&&(f=!0);const y=n.concat(s).concat(u);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),g=this.getDedupedMetricsNames();let v,x;f?(this.makeTestFunction(),v=this.testFunction,x=g.slice().concat(g.map((e=>"val_"+e)))):(v=null,h=[],x=g.slice());const b=ff(m.callbacks,m.yieldEvery);return await this.fitLoop(w,y,g,_,m.epochs,m.verbose,b,v,h,m.shuffle,x,m.initialEpoch,null,null)}finally{this.isTraining=!1,dy(n,e),dy(s,t),dy(a,e),dy(r,t),dy(c,o),dy(l,i),null!=u&&qa(u)}}async fitLoop(e,t,n,s,a,r,o,i,c,l,u,m,d,p){null==s&&(s=32),null==a&&(a=1),null==l&&(l=!0),null==m&&(m=0);let h=!1;if(null!=i&&null!=c&&(h=!0),null!=p&&(h=!0,null==d))throw new qd("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const f=this.checkNumSamples(t,s,d,"steps_per_epoch");let y;null!=f&&(y=Pp(0,f)),null==r&&(r=1);const{callbackList:w,history:g}=wf(o,r,a,m,f,d,s,h,u);w.setModel(this),this.history=g,await w.onTrainBegin(),this.stopTraining_=!1;for(let v=m;v<a;++v){await w.onEpochBegin(v);const a={};if(null!=d)throw new Xd("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Xd("batch shuffling is not implemneted yet");l&&_(y);const r=Vc(y),o=my(f,s);for(let l=0;l<o.length;++l){const u={};if(await w.onBatchBegin(l,u),Ka((()=>{const m=o[l][0],_=o[l][1],d=Hp(r,m,_-m);u.batch=l,u.size=_-m;const p=uy(t,d),f=e(p);for(let e=0;e<n.length;++e){const t=n[e],s=f[e];u[t]=s,Xa(s)}if(l===o.length-1&&h){const e=this.testLoop(i,c,s);for(let t=0;t<n.length;++t){const s=n[t],r=e[t];Xa(r),a["val_"+s]=r}}})),await w.onBatchEnd(l,u),lf(u),this.stopTraining_)break}r.dispose()}if(await w.onEpochEnd(v,a),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return oy(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],a=n[1],r=this.makeTrainFunction()(s.concat(a)),o=[];for(const i of r){const e=await i.data();o.push(e[0])}return qa(r),dy(n[0],e),dy(n[1],t),ep(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let r=0;r<s.length;++r)n&&!s[r].trainable||t.push({name:s[r].originalName,tensor:a[r]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ja().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ja().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=np(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>np(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!==typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=np(n[s])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[np(Uf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>np(Uf(e))));{const e={};for(const t in this.metrics)e[t]=np(Uf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=gf(Qf(e.optimizer_config));let n,s;if("string"===typeof e.loss)n=sp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>sp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=sp(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>sp(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=sp(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"===typeof e){const t=(n=e,lr.getSaveHandlers(n));if(0===t.length)throw new qd("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new qd("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}var n;if(null==e.save)throw new qd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Za(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Zf),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Za(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=(r=[s.data,t],Ga.join(r))}var r;if(null!=this.userDefinedMetadata){const e=!0;Gf(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){Gf(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}wy.className="Model",$r(wy);class gy extends wy{}async function vy(e,t){if(null==t&&(t={}),"string"===typeof e){const a=(n=e,s=t,lr.getLoadHandlers(n,s));if(0===a.length)a.push(function(e,t){return So(e,t)}(e,t));else if(a.length>1)throw new qd("Found more than one (".concat(a.length,") load handlers for ")+"URL '".concat(e,"'"));e=a[0]}var n,s;return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new qd("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let a=s.modelTopology;null!=a.model_config&&(a=a.model_config);const r=null==n.strict||n.strict,o=null!=s.weightData&&null!=s.weightSpecs&&r,i=gf(Qf(a),t,o),c=s.trainingConfig;null!=c&&i.loadTrainingConfig(c);null!=s.userDefinedMetadata&&i.setUserDefinedMetadata(s.userDefinedMetadata);if(null!=s.weightData){if(null==s.weightSpecs)throw new qd("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=$a(e,t),s={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:a}}(s.weightData,s.weightSpecs);i.loadWeights(e,r),null!=i.optimizer&&t.length>0&&await i.optimizer.setWeights(t),qa(e),qa(t.map((e=>e.tensor)))}return i}(e,void 0,t)}gy.className="Functional",$r(gy);class xy extends wy{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:gp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new qd("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof xy||e instanceof wy;let n;if(t){if(n=e,1!==n.outputs.length)throw new qd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new qd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new qd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Gh({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new qd("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new qd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Uh(this.outputs[0])}this.inboundNodes=[],new zh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Jd(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Eh(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wy({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Kd("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Kd("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Kd("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Kd("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new qd("Legacy serialization format not supported yet.");n=t}else f(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,a=t;const r=new e(a);if(!(r instanceof xy))throw new Xd("Sequential.fromConfig called on non-Sequential input: ".concat(r));for(const o of n){const e=gf(o,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),r.add(e)}return r}set stopTraining(e){if(null==this.model)throw new qd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new qd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}xy.className="Sequential",$r(xy);class by extends Jr{getConfig(){return{}}}class ky extends by{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Xd("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return Fi(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}ky.className="elu",$r(ky);class Iy extends by{apply(e){return Tc(e)}}Iy.className="selu",$r(Iy);class Sy extends by{apply(e){return Cc(e)}}Sy.className="relu",$r(Sy);class Cy extends by{apply(e){return Ka((()=>uc(6,Cc(e))))}}Cy.className="relu6",$r(Cy);class Ny extends by{apply(e){return e}}Ny.className="linear",$r(Ny);class Ty extends by{apply(e){return Rc(e)}}Ty.className="sigmoid",$r(Ty);class Ey extends by{apply(e){return function(e){return Ka((()=>{const t=Wr(.5,Gr(.2,e));return yi(t,0,1)}))}(e)}}Ey.className="hardSigmoid",$r(Ey);class Ry extends by{apply(e){return Bc(e)}}Ry.className="softplus",$r(Ry);class Ay extends by{apply(e){return function(e){return Ka((()=>Vr(e,Wr(io(e),1))))}(e)}}Ay.className="softsign",$r(Ay);class Fy extends by{apply(e){return Uc(e)}}Fy.className="tanh",$r(Fy);class Dy extends by{apply(e){return Lc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Dy.className="softmax",$r(Dy);class My extends by{apply(e){return Xi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}My.className="logSoftmax",$r(My);class Oy extends by{apply(e){return Ka((()=>Ka((()=>{const t=Math.sqrt(2),n=Gr(.5,Wr(1,Mi(Vr(e,t))));return Gr(e,n)}))))}}Oy.className="gelu",$r(Oy);class Ly extends by{apply(e){return Ka((()=>Gr(.5,Gr(e,Wr(1,Uc(Gr(Hr(Vr(2,Math.PI)),Wr(e,Gr(.044715,ao(e,3))))))))))}}Ly.className="gelu_new",$r(Ly);class By extends by{apply(e){return Ka((()=>Gr(e,Uc(Bc(e)))))}}By.className="mish",$r(By);class zy extends by{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Ka((()=>Gr(Rc(Gr(e,t)),e)))}}function Py(e){return e.getClassName()}function Wy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ip(e,Zr.getMap().classNameMap,t,"activation")}function Uy(e){if(null==e){const e={className:"linear",config:{}};return Wy(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Wy(t)}return e instanceof by?e:Wy(e)}function Vy(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}zy.className="swish",$r(zy);class Gy extends Jr{}class Hy extends Gy{constructor(e){super(),Vy(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ka((()=>{let t=hc([1]);return this.hasL1&&(t=Wr(t,qi(Gr(this.l1,io(e))))),this.hasL2&&(t=Wr(t,qi(Gr(this.l2,$p(e))))),li(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Hy.className="L1L2",$r(Hy);const jy={l1l2:"L1L2"};function Ky(e){return rp(e)}function qy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ip(e,Zr.getMap().classNameMap,t,"regularizer")}function Xy(e){if(null==e)return null;if("string"===typeof e){return qy({className:e in jy?jy[e]:e,config:{}})}return e instanceof Gy?e:qy(e)}class Yy extends Wh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Th(e);let n=Cc(e);return null!=this.maxValue&&(n=yi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Yy.className="ReLU",$r(Yy);class Qy extends Wh{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Th(e);return Gi(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Qy.className="LeakyReLU",$r(Qy);class Jy extends Wh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Sh(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Xy(e.alphaRegularizer),this.alphaConstraint=of(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new qd("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Eh(e)).slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Oh({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Th(e),gc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ih(this.alphaInitializer),alphaRegularizer:Ky(this.alphaRegularizer),alphaConstraint:af(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Jy.className="PReLU",$r(Jy);class Zy extends Wh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Xd("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Th(e);return Fi(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Zy.className="ELU",$r(Zy);class $y extends Wh{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Th(e);return Gr(n,zr(Ui(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}$y.className="ThresholdedReLU",$r($y);class ew extends Wh{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Dy).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Ka((()=>{let n=Th(e);const s=t.mask;if(null!=s){const e=Gr(ro(fc(n.shape),zr(s,n.dtype)),Xr(-1e9));n=Wr(n,e)}return this.axis instanceof Array?this.axis.length>1?Oi(ro(n,sc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function tw(e,t,n){if("number"===typeof e)return Jd(e,t);if(e.length!==t)throw new qd("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let a=0;a<t;++a){const r=e[a];if((s=r)!==parseInt(s.toString(),10))throw new qd("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(r))}return e;var s}function nw(e,t,n,s){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((a+s-1)/s)}function sw(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+zp([n-t,0]);else{if("same"!==s)throw new qd("Unsupport padding mode: ".concat(s,"."));e*=t}return e}function aw(e,t){return Ka((()=>(Cp(t),"channelsFirst"===t?Yc(e,[0,2,3,1]):e)))}function rw(e,t){return Ka((()=>(Cp(t),"channelsFirst"===t?Yc(e,[0,2,3,4,1]):e)))}function ow(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",r=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Ka((()=>{if(null==r&&(r="channelsLast"),Cp(r),3!==e.shape.length)throw new qd("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new qd("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new qd("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===r&&(e=Yc(e,[0,2,1])),"causal"===a)throw new Xd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ii(e,t,s,"same"===a?"same":"valid","NWC",o);return null!=n&&(i=th(i,n)),i}))}function iw(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",r=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Ka((()=>{if(null==r&&(r="channelsLast"),Cp(r),3!==e.rank&&4!==e.rank)throw new qd("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new qd("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=aw(e,r);if("causal"===a)throw new Xd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=cl({x:c,filter:t,strides:s,pad:"same"===a?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===r&&(c=Yc(c,[0,3,1,2])),c}))}function cw(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",r=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return Ka((()=>{if(null==r&&(r="channelsLast"),Cp(r),4!==e.rank&&5!==e.rank)throw new qd("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new qd("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=rw(e,r);if("causal"===a)throw new Xd("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ni(i,t,s,"same"===a?"same":"valid","NDHWC",o),null!=n&&(i=th(i,n)),"channelsFirst"===r&&(i=Yc(i,[0,4,1,2,3])),i}))}ew.className="Softmax",$r(ew);class lw extends Wh{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",lw.verifyArgs(t),this.rank=e,dp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Xd("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=tw(t.kernelSize,e,"kernelSize"),this.strides=tw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Np(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Cp(this.dataFormat),this.activation=Uy(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Sh(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=of(t.biasConstraint),this.biasRegularizer=Xy(t.biasRegularizer),this.activityRegularizer=Xy(t.activityRegularizer),this.dilationRate=tw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new qd("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new qd("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new qd("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(Zd("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!_p(e.kernelSize,"number",1,3))throw new qd("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Py(this.activation),useBias:this.useBias,biasInitializer:Ih(this.biasInitializer),biasRegularizer:Ky(this.biasRegularizer),activityRegularizer:Ky(this.activityRegularizer),biasConstraint:af(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class uw extends lw{constructor(e,t){super(e,t),this.kernel=null,uw.verifyArgs(t),this.filters=t.filters,dp(this.filters,"filters"),this.kernelInitializer=Sh(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=of(t.kernelConstraint),this.kernelRegularizer=Xy(t.kernelRegularizer)}build(e){e=Eh(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qd("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ka((()=>{let t;e=Th(e);const n=null==this.bias?null:this.bias.read(),s=hp(this.activation.getClassName());if(null!=s&&2===this.rank)t=iw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=ow(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=iw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Xd("convolutions greater than 3D are not implemented yet.");t=cw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Eh(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=nw(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Ih(this.kernelInitializer),kernelRegularizer:Ky(this.kernelRegularizer),kernelConstraint:af(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new qd("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class mw extends uw{constructor(e){super(2,e),mw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!_p(e.kernelSize,"number",1,2))throw new qd("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}mw.className="Conv2D",$r(mw);class _w extends uw{constructor(e){super(3,e),_w.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new qd("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}_w.className="Conv3D",$r(_w);class dw extends mw{constructor(e){if(super(e),this.inputSpec=[new Oh({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new qd("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Eh(e)).length)throw new qd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Oh({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ka((()=>{let t=Th(e);if(4!==t.shape.length)throw new qd("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,s=n[0];let a,r;"channelsFirst"===this.dataFormat?(a=2,r=3):(a=1,r=2);const o=n[a],i=n[r],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],m=this.strides[1],_=[s,sw(o,u,c,this.padding),sw(i,m,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yc(t,[0,2,3,1]));let d=Ci(t,this.kernel.read(),_,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Yc(d,[0,3,1,2])),null!=this.bias&&(d=th(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Eh(e)).slice();let n,s,a;"channelsFirst"===this.dataFormat?(n=1,s=2,a=3):(n=3,s=1,a=2);const r=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[s]=sw(t[s],i,r,this.padding),t[a]=sw(t[a],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dw.className="Conv2DTranspose",$r(dw);class pw extends _w{constructor(e){if(super(e),this.inputSpec=[new Oh({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new qd("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Eh(e)).length)throw new qd("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Oh({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ka((()=>{let t=Th(e);if(5!==t.shape.length)throw new qd("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,s=n[0];let a,r,o;"channelsFirst"===this.dataFormat?(o=2,a=3,r=4):(o=1,a=2,r=3);const i=n[o],c=n[a],l=n[r],u=this.kernelSize[0],m=this.kernelSize[1],_=this.kernelSize[2],d=this.strides[0],p=this.strides[1],h=this.strides[2],f=[s,sw(i,d,u,this.padding),sw(c,p,m,this.padding),sw(l,h,_,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yc(t,[0,2,3,4,1]));let y=Ei(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Yc(y,[0,4,1,2,3])),null!==this.bias&&(y=th(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Eh(e)).slice();let n,s,a,r;"channelsFirst"===this.dataFormat?(n=1,s=2,a=3,r=4):(n=4,s=1,a=2,r=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],m=this.strides[2];return t[n]=this.filters,t[s]=sw(t[s],l,o,this.padding),t[a]=sw(t[a],u,i,this.padding),t[r]=sw(t[r],m,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pw.className="Conv3DTranspose",$r(pw);class hw extends uw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new qd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new qd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new qd("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Sh(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Xy(t.depthwiseRegularizer),this.depthwiseConstraint=of(t.depthwiseConstraint),this.pointwiseInitializer=Sh(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Xy(t.pointwiseRegularizer),this.pointwiseConstraint=of(t.pointwiseConstraint)}build(e){if((e=Eh(e)).length<this.rank+2)throw new qd("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new qd("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let o=0;o<this.rank;++o)a.push(1);a.push(n*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new Oh({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ka((()=>{let t;if(e=Th(e),1===this.rank)throw new Xd("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Yc(e,[0,2,3,1])),t=Ec(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=th(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Yc(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ih(this.depthwiseInitializer),e.pointwiseInitializer=Ih(this.pointwiseInitializer),e.depthwiseRegularizer=Ky(this.depthwiseRegularizer),e.pointwiseRegularizer=Ky(this.pointwiseRegularizer),e.depthwiseConstraint=af(this.depthwiseConstraint),e.pointwiseConstraint=af(this.pointwiseConstraint),e}}hw.className="SeparableConv";class fw extends hw{constructor(e){super(2,e)}}fw.className="SeparableConv2D",$r(fw);class yw extends uw{constructor(e){super(1,e),yw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!_p(e.kernelSize,"number",1,1))throw new qd("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}yw.className="Conv1D",$r(yw);class ww extends Wh{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ka((()=>{if(e=Th(e),"channelsLast"===this.dataFormat){const t=Kp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Kp(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Kp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Kp(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ww.className="Cropping2D",$r(ww);class gw extends Wh{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cp(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,mp(xp,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ka((()=>{let t=Th(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Yc(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],a="nearest"===this.interpolation?Ql.resizeNearestNeighbor(t,[e,s]):Ql.resizeBilinear(t,[e,s]);return Yc(a,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Ql.resizeNearestNeighbor(t,[e,s]):Ql.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}gw.className="UpSampling2D",$r(gw);class vw extends lw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Sh(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=of(e.depthwiseConstraint),this.depthwiseRegularizer=Xy(e.depthwiseRegularizer)}build(e){if((e=Eh(e)).length<4)throw new qd("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new qd("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ka((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,r=arguments.length>5?arguments[5]:void 0;return Ka((()=>{null==a&&(a="channelsLast"),Cp(a);let o=aw(e,a);if(4!==e.rank)throw new qd("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new qd("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=Ai(o,t,n,"same"===s?"same":"valid","NHWC",r),"channelsFirst"===a&&(o=Yc(o,[0,3,1,2])),o}))}(e=Th(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=th(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Eh(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=nw(t,this.kernelSize[0],this.padding,this.strides[0]),r=nw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,a,r]:[e[0],a,r,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ih(this.depthwiseInitializer),e.depthwiseRegularizer=Ky(this.depthwiseRegularizer),e.depthwiseConstraint=af(this.depthwiseRegularizer),e}}function xw(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new qd("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function bw(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,r=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Ka((()=>{const c=t.shape.length;if(c<3)throw new qd("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(Pp(2,c));if(t=Yc(t,l),null!=r)throw new Xd("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=zr(zr(a,"bool"),"float32"),a.rank===c-1&&(a=Li(a,-1)),a=Yc(a,l)),s&&(t=Nc(t,0),null!=a&&(a=Nc(a,0)));const u=[];let m,_=n;const d=t.shape[0],p=jc(t);let h,f;null!=a&&(h=jc(a));for(let t=0;t<d;++t){const n=p[t],s=Ka((()=>e(n,_)));if(null==a)m=s[0],_=s[1];else{const e=Ka((()=>{const e=h[t],n=ro(yc(e),e);return{output:Wr(Gr(s[0],e),Gr(_[0],n)),newStates:_.map(((t,a)=>Wr(Gr(s[1][a],e),Gr(t,n))))}}));m=e.output,_=e.newStates}i&&u.push(m)}if(i){f=Wc(u,1)}return[m,f,_]}))}vw.className="DepthwiseConv2D",$r(vw);class kw extends Wh{constructor(e){let t;if(super(e),null==e.cell)throw new qd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Aw({cells:e.cell}):e.cell,null==t.stateSize)throw new qd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Oh({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Pp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ch(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Ka((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Xd("Constants support is not implemented in RNN yet.");Ch(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Oh({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!v(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new qd("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=a.map((e=>new Oh({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Ka((()=>{if(!this.stateful)throw new jd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new qd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>hc([n,e]))):this.states_=[hc([n,this.cell.stateSize])];else if(null==e)qa(this.states_),null!=this.keptStates&&(qa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>hc([n,e]))):this.states_[0]=hc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qd("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):qa(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,r=[n,a];if(!v(s.shape,r))throw new qd("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(r,", received shape=").concat(s.shape));this.states_[t]=s}}this.states_=this.states_.map((e=>Xa(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const a=xw(e,n,s,this.numConstants);e=a.inputs,n=a.initialState,s=a.constants;let r=[],o=[];if(null!=n){t.initialState=n,r=r.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Oh({shape:e.shape}));o=o.concat(this.stateSpec)}null!=s&&(t.constants=s,r=r.concat(s),this.numConstants=s.length);if(r[0]instanceof Lh){const n=[e].concat(r),s=this.inputSpec.concat(o),a=this.inputSpec;this.inputSpec=s;const i=super.apply(n,t);return this.inputSpec=a,i}return super.apply(e,t)}call(e,t){return Ka((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let a=null==t?null:t.initialState;e=Th(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==r)throw new qd("RNN Layer has ".concat(r," state(s) but was passed ")+"".concat(a.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:s},i=bw(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,s);const m=this.returnSequences?l:c;return this.returnState?[m].concat(u):m}))}getInitialState(e){return Ka((()=>{let t=hc(e.shape);return t=qi(t,[1,2]),t=Gp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Yp(t,[1,e]):t)):this.cell.stateSize>1?[Yp(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===kw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=gf(t.cell,n);return new e(Object.assign(t,{cell:s}))}}kw.className="RNN",$r(kw);class Iw extends Wh{}class Sw extends Iw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dp(this.units,"units"),this.activation=Uy(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sh(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sh(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sh(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xy(e.kernelRegularizer),this.recurrentRegularizer=Xy(e.recurrentRegularizer),this.biasRegularizer=Xy(e.biasRegularizer),this.kernelConstraint=of(e.kernelConstraint),this.recurrentConstraint=of(e.recurrentConstraint),this.biasConstraint=of(e.biasConstraint),this.dropout=Bp([1,zp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bp([1,zp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Eh(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ka((()=>{if(2!==e.length)throw new qd("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const s=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fw({ones:()=>yc(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fw({ones:()=>yc(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;a=Jp(null!=r?Gr(e,r):e,this.kernel.read()),null!=this.bias&&(a=th(a,this.bias.read())),null!=o&&(n=Gr(n,o));let i=Wr(a,Jp(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Py(this.activation),useBias:this.useBias,kernelInitializer:Ih(this.kernelInitializer),recurrentInitializer:Ih(this.recurrentInitializer),biasInitializer:Ih(this.biasInitializer),kernelRegularizer:Ky(this.kernelRegularizer),recurrentRegularizer:Ky(this.recurrentRegularizer),biasRegularizer:Ky(this.biasRegularizer),activityRegularizer:Ky(this.activityRegularizer),kernelConstraint:af(this.kernelConstraint),recurrentConstraint:af(this.recurrentConstraint),biasConstraint:af(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Sw.className="SimpleRNNCell",$r(Sw);class Cw extends kw{constructor(e){e.cell=new Sw(e),super(e)}call(e,t){return Ka((()=>{null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Cw.className="SimpleRNN",$r(Cw);class Nw extends Iw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new qd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dp(this.units,"units"),this.activation=Uy(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Uy(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sh(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sh(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sh(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xy(e.kernelRegularizer),this.recurrentRegularizer=Xy(e.recurrentRegularizer),this.biasRegularizer=Xy(e.biasRegularizer),this.kernelConstraint=of(e.kernelConstraint),this.recurrentConstraint=of(e.recurrentConstraint),this.biasConstraint=of(e.biasConstraint),this.dropout=Bp([1,zp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bp([1,zp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Eh(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ka((()=>{if(2!==e.length)throw new qd("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fw({ones:()=>yc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fw({ones:()=>yc(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,r=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(e=Gr(e,a[0]));let l=Jp(e,this.kernel.read());this.useBias&&(l=th(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Gr(s,r[0]));const u=this.recurrentKernel.read(),[m,_]=zc(u,[2*this.units,this.units],u.rank-1),d=Jp(s,m),[p,h,f]=zc(l,3,l.rank-1),[y,w]=zc(d,2,d.rank-1);o=this.recurrentActivation.apply(Wr(p,y)),i=this.recurrentActivation.apply(Wr(h,w));const g=Jp(Gr(i,s),_);c=this.activation.apply(Wr(f,g));const v=Wr(Gr(o,s),Gr(Wr(1,_c(o)),c));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Py(this.activation),recurrentActivation:Py(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ih(this.kernelInitializer),recurrentInitializer:Ih(this.recurrentInitializer),biasInitializer:Ih(this.biasInitializer),kernelRegularizer:Ky(this.kernelRegularizer),recurrentRegularizer:Ky(this.recurrentRegularizer),biasRegularizer:Ky(this.biasRegularizer),activityRegularizer:Ky(this.activityRegularizer),kernelConstraint:af(this.kernelConstraint),recurrentConstraint:af(this.recurrentConstraint),biasConstraint:af(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Nw.className="GRUCell",$r(Nw);class Tw extends kw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Nw(e),super(e)}call(e,t){return Ka((()=>{null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Tw.className="GRU",$r(Tw);class Ew extends Iw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dp(this.units,"units"),this.activation=Uy(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Uy(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sh(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sh(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sh(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Xy(e.kernelRegularizer),this.recurrentRegularizer=Xy(e.recurrentRegularizer),this.biasRegularizer=Xy(e.biasRegularizer),this.kernelConstraint=of(e.kernelConstraint),this.recurrentConstraint=of(e.recurrentConstraint),this.biasConstraint=of(e.biasConstraint),this.dropout=Bp([1,zp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bp([1,zp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Eh(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends oh{apply(t,s){const a=e.apply([n]),r=(new ch).apply([n]),o=e.apply([2*n]);return Xp(Xp(a,r),o)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ka((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new qd("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let s=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fw({ones:()=>yc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fw({ones:()=>yc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=Gr(e,r[0]));let m=Jp(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Gr(s,o[0])),m=Wr(m,Jp(s,this.recurrentKernel.read())),this.useBias&&(m=th(m,this.bias.read()));const[_,d,p,h]=zc(m,4,m.rank-1);i=this.recurrentActivation.apply(_),c=this.recurrentActivation.apply(d),l=Wr(Gr(c,a),Gr(i,this.activation.apply(p))),u=this.recurrentActivation.apply(h);const f=Gr(u,this.activation.apply(l));return[f,f,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Py(this.activation),recurrentActivation:Py(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ih(this.kernelInitializer),recurrentInitializer:Ih(this.recurrentInitializer),biasInitializer:Ih(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ky(this.kernelRegularizer),recurrentRegularizer:Ky(this.recurrentRegularizer),biasRegularizer:Ky(this.biasRegularizer),activityRegularizer:Ky(this.activityRegularizer),kernelConstraint:af(this.kernelConstraint),recurrentConstraint:af(this.recurrentConstraint),biasConstraint:af(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ew.className="LSTMCell",$r(Ew);class Rw extends kw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ew(e),super(e)}call(e,t){return Ka((()=>{null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Rw.className="LSTM",$r(Rw);class Aw extends Iw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ka((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const a=[];let r;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=s[o],r=0===o?[e[0]].concat(n):[r[0]].concat(n),r=i.call(r,t),a.push(r.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[r[0]].concat(n)}))}build(e){let t;Ch(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Ap("RNNCell_".concat(s),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=[];for(const a of t.cells)s.push(gf(a,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Dh(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,a=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Mh(t)}}function Fw(e){const{ones:t,rate:n,training:s=!1,count:a=1,dropoutFunc:r}=e,o=()=>null!=r?r(t(),n):nh(t(),n),i=()=>sh(o,t,s);if(!a||a<=1)return Xa(i().clone());return Array(a).fill(void 0).map(i).map((e=>Xa(e.clone())))}Aw.className="StackedRNNCells",$r(Aw);var Dw=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(s=Object.getOwnPropertySymbols(e);a<s.length;a++)t.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(e,s[a])&&(n[s[a]]=e[s[a]])}return n};class Mw extends kw{constructor(e){if(e.unroll)throw new Xd("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Xd("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Oh({ndim:5})]}call(e,t){return Ka((()=>{if(null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new qd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ka((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),a=hc([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Ka((()=>{if(!this.stateful)throw new jd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new qd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>hc(a))):this.states_=[hc(a)];else if(null==e)qa(this.states_),null!=this.keptStates&&(qa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>hc(a))):this.states_[0]=hc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qd("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):qa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!v(n.shape,s))throw new qd("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>Xa(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:a,strides:r,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=nw(c,s[0],a,r[0],o[0]),m=nw(l,s[1],a,r[1],o[1]);return[...e.slice(0,2),...i?[n,u,m]:[u,m,n]]}}Mw.className="ConvRNN2D";class Ow extends Ew{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:a,dataFormat:r,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,dp(this.filters,"filters"),this.kernelSize=tw(n,2,"kernelSize"),this.kernelSize.forEach((e=>dp(e,"kernelSize"))),this.strides=tw(s||1,2,"strides"),this.strides.forEach((e=>dp(e,"strides"))),this.padding=a||"valid",Np(this.padding),this.dataFormat=r||"channelsLast",Cp(this.dataFormat),this.dilationRate=tw(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>dp(e,"dilationRate")))}build(e){var t;e=Eh(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new qd("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const s=e[n],a=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const r=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",r,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends oh{apply(e,t){return qp([n.apply([s]),fc([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ka((()=>{if(3!==e.length)throw new qd("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,s=e[0],a=e[1],r=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Fw({ones:()=>yc(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Gr(t[n],e):e;let c=i(s,o,0),l=i(s,o,1),u=i(s,o,2),m=i(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Fw({ones:()=>yc(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const _=this.recurrentDropoutMask;let d=i(a,_,0),p=i(a,_,1),h=i(a,_,2),f=i(a,_,3);const[y,w,g,v]=zc(this.kernel.read(),4,3),[x,b,k,I]=this.useBias?zc(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,x,this.padding),l=this.inputConv(l,w,b,this.padding),u=this.inputConv(u,g,k,this.padding),m=this.inputConv(m,v,I,this.padding);const[S,C,N,T]=zc(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),p=this.recurrentConv(p,C),h=this.recurrentConv(h,N),f=this.recurrentConv(f,T);const E=this.recurrentActivation.apply(Wr(c,d)),R=this.recurrentActivation.apply(Wr(l,p)),A=Wr(Gr(R,r),Gr(E,this.activation.apply(Wr(u,h)))),F=Gr(this.recurrentActivation.apply(Wr(m,f)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Dw(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const a=ki(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?th(a,n,this.dataFormat):a}recurrentConv(e,t){return ki(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ow.className="ConvLSTM2DCell",$r(Ow);class Lw extends Mw{constructor(e){const t=new Ow(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Lw.className="ConvLSTM2D",$r(Lw);class Bw extends Wh{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(null==this.noiseShape[s]?t[s]:this.noiseShape[s]);return n}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return sh((()=>nh(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Bw.className="Dropout",$r(Bw);class zw extends Bw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}zw.className="SpatialDropout1D",$r(zw);class Pw extends Wh{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,dp(this.units,"units"),this.activation=Uy(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Sh(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Sh(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=of(e.kernelConstraint),this.biasConstraint=of(e.biasConstraint),this.kernelRegularizer=Xy(e.kernelRegularizer),this.biasRegularizer=Xy(e.biasRegularizer),this.activityRegularizer=Xy(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Eh(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Eh(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e),s=hp(this.activation.getClassName());let a;return null!=s?a=Jp(n,this.kernel.read(),s,this.bias?this.bias.read():null):(a=Jp(n,this.kernel.read()),null!=this.bias&&(a=th(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Py(this.activation),useBias:this.useBias,kernelInitializer:Ih(this.kernelInitializer),biasInitializer:Ih(this.biasInitializer),kernelRegularizer:Ky(this.kernelRegularizer),biasRegularizer:Ky(this.biasRegularizer),activityRegularizer:Ky(this.activityRegularizer),kernelConstraint:af(this.kernelConstraint),biasConstraint:af(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Pw.className="Dense",$r(Pw);class Ww extends Wh{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Eh(e);for(const t of e.slice(1))if(null==t)throw new qd('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Lp(e,1)]}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);let n=Th(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Yc(n,e)}return function(e){if(e.rank<=1)throw new qd("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Lp(e.shape,1)];return li(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Ww.className="Flatten",$r(Ww);class Uw extends Wh{constructor(e){super(e),this.supportsMasking=!0,this.activation=Uy(e.activation)}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Py(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Uw.className="Activation",$r(Uw);class Vw extends Wh{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ka((()=>{return e=Th(e),t=e,n=this.n,Ka((()=>{if(2!==t.shape.length)throw new qd("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Yp(Gp(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Vw.className="RepeatVector",$r(Vw);class Gw extends Wh{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let a=1,r=null;for(let i=0;i<s.length;++i){const e=s[i];if(this.isUnknown(e)){if(null!==r)throw new qd("Can only specifiy one unknown dimension.");r=i}else a*=e}const o=Lp(e);if(null!==r){if(0===a||o%a!==0)throw new qd(n);s[r]=o/a}else if(o!==a)throw new qd(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e),s=n.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return li(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Gw.className="Reshape",$r(Gw);class Hw extends Wh{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Pp(1,e.dims.length+1);if(!v(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Oh({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Eh(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return Yc(Th(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Hw.className="Permute",$r(Hw);class jw extends Wh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Th(e);return Ko(dc(n,this.maskValue),-1)}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e),s=Ko(dc(n,this.maskValue),-1,!0);return Gr(n,zr(s,n.dtype))}))}}jw.className="Masking",$r(jw);class Kw extends Wh{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(tp(e.inputLength))}this.inputDim=e.inputDim,dp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dp(this.outputDim,"outputDim"),this.embeddingsInitializer=Sh(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Xy(e.embeddingsRegularizer),this.activityRegularizer=Xy(e.activityRegularizer),this.embeddingsConstraint=of(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ka((()=>this.maskZero?(e=Th(e),dc(e,Kr(e))):null))}computeOutputShape(e){if(e=Eh(e),null==this.inputLength)return[...e,this.outputDim];const t=tp(this.inputLength);if(t.length!==e.length-1)throw new qd('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let s=0;s<t.length;++s){const a=t[s],r=e[s+1];if(null!=a&&null!=r&&a!==r)throw new qd('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==a&&(t[n]=r),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);let n=Th(e);"int32"!==n.dtype&&(n=Vp(n,"int32"));const s=Zp(this.embeddings.read(),li(n,[n.size]));return li(s,Eh(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ih(this.embeddingsInitializer),embeddingsRegularizer:Ky(this.embeddingsRegularizer),activityRegularizer:Ky(this.activityRegularizer),embeddingsConstraint:af(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Kw.className="Embedding",$r(Kw);class qw extends Wh{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Xd}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const a=e[e.length-t.length+s],r=t[s];if(null==a||null==r||a<0||r<0)n.push(null);else if(1===a)n.push(r);else if(1===r)n.push(a);else{if(a!==r)throw new qd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Eh(e)]),e.length<2)throw new qd("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=lp(t),t.length>1)throw new qd("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===lp(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ka((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=zp(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Gp(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let o=li(r,[s].concat(Lp(e.slice(1))));o=Yc(o,[1,0]),o=li(o,a),t.push(o),n=!0}else if(e>1){const s=Pp(1,e).concat([0]);t.push(Yc(r,s)),n=!0}else t.push(r)}let s=this.mergeFunction(t);const a=s.rank;if(n)if(null==a){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=li(Yc(li(s,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Pp(0,a-1));s=Yc(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const n=null==e[s]?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const s of e)null!=s&&null!==s[0]&&n.push(s[0]);return n=lp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ka((()=>{if(null==t)return null;if(!Array.isArray(t))throw new qd("`mask` should be an Array");if(!Array.isArray(e))throw new qd("`inputs` should be an Array");if(t.length!==e.length)throw new qd("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Li(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ac(n,t[e]);return n}))}}class Xw extends qw{constructor(e){super(e)}mergeFunction(e){return Ka((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wr(t,e[n]);return t}))}}Xw.className="Add",$r(Xw);class Yw extends qw{constructor(e){super(e)}mergeFunction(e){return Ka((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Gr(t,e[n]);return t}))}}Yw.className="Multiply",$r(Yw);class Qw extends qw{constructor(e){super(e)}mergeFunction(e){return Ka((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wr(t,e[n]);return Gr(1/e.length,t)}))}}Qw.className="Average",$r(Qw);class Jw extends qw{constructor(e){super(e)}mergeFunction(e){return Ka((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=mo(t,e[n]);return t}))}}Jw.className="Maximum",$r(Jw);class Zw extends qw{constructor(e){super(e)}mergeFunction(e){return Ka((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=uc(t,e[n]);return t}))}}Zw.className="Minimum",$r(Zw);class $w extends qw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new qd("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const s of e)if(null!=s){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(v(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new qd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ka((()=>qp(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new qd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[s]||null==a[s]){n[s]=null;break}n[s]+=a[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new qd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new qd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new qd("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return Ka((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let r=0;r<e.length;++r)null==t[r]?s.push(zr(yc(e[r]),"bool")):t[r].rank<e[r].rank?s.push(Li(t[r],-1)):s.push(t[r]);const a=wi(s,this.axis);return jo(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function eg(e,t){for(;e<0;)e+=t;return e}$w.className="Concatenate",$r($w);class tg extends qw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Xd("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new qd("Dimension incompatibility: "+"".concat(t[s[0]]," !== ").concat(n[s[1]]))}mergeFunction(e){if(2!==e.length)throw new qd("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>eg(t,e[n].shape.length))):[eg(this.axes,n.shape.length),eg(this.axes,s.shape.length)],this.normalize&&(n=vf(n,t[0]),s=vf(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Xd("batchDot is not implemented for tensors of 4D or higher rank yet");if(f(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),f(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Xd("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const r=n;return Ka((()=>{let n,o;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=li(t,t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=li(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=r[0]===r[1]?qi(Gr(e,t),r[0]):qi(Gr(Yc(e,[1,0]),t),r[1]);else{const n=r[0]!==e.shape.length-1,s=r[1]===t.shape.length-1;o=rc(e,t,n,s)}if(n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);o=Pc(o,t)}return 1===o.shape.length&&(o=Li(o,1)),o}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[eg(this.axes,e.length),eg(this.axes,t.length)],n}computeOutputShape(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Xd("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}tg.className="Dot",$r(tg);class ng extends Wh{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e);return sh((()=>Wr(Qp(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ng.className="GaussianNoise",$r(ng);class sg extends Wh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ka((()=>{this.invokeCallHook(e,t);const n=Th(e);if(this.rate>0&&this.rate<1){return sh((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Gr(n,Qp(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}sg.className="GaussianDropout",$r(sg);class ag extends Wh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Th(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ka((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=Th(e),s=-1.7580993408473766;let a=Vi(Ic(n),this.rate);a=Vp(a,"float32");const r=((1-this.rate)*(1+this.rate*s**2))**-.5,o=-r*s*this.rate,i=Wr(Gr(t,a),Gr(Wr(a,-1),s));return Wr(Gr(i,r),o)};return sh(s,(()=>Th(e)),t.training||!1)}return e}))}}function rg(e,t,n,s,a){let r,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)r=di(e,t,n,s,a,o);else if(3===e.rank)r=pi(e,t,n,s,a,o);else{if(4!==e.rank)throw new Xd("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");r=hi(e,t,n,s,a,o)}return r}function og(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return v(s.slice().sort(),Pp(0,e.rank-1))?function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Ka((()=>{const r=mc(e,s),o=r.mean,i=r.variance;return[rg(e,o,i,n,t,a),o,i]}))}(e,t,n,s,a):function(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Ka((()=>{const r=mc(e,s),o=r.mean,i=r.variance,c=[];for(const t of Pp(0,e.rank))-1!==s.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=li(o,c),u=li(i,c),m=null==t?null:li(t,c),_=null==n?null:li(n,c);return[rg(e,l,u,_,m,a),o,i]}))}(e,t,n,s,a)}ag.className="AlphaDropout",$r(ag);class ig extends Wh{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Sh(e.betaInitializer||"zeros"),this.gammaInitializer=Sh(e.gammaInitializer||"ones"),this.movingMeanInitializer=Sh(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Sh(e.movingVarianceInitializer||"ones"),this.betaConstraint=of(e.betaConstraint),this.gammaConstraint=of(e.gammaConstraint),this.betaRegularizer=Xy(e.betaRegularizer),this.gammaRegularizer=Xy(e.gammaRegularizer)}build(e){e=Eh(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new qd("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Oh({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ka((()=>{const n=null!=t.training&&t.training,s=Th(e),a=s.shape,r=a.length,o=Pp(0,r),i=this.axis>=0?this.axis:this.axis+r;o.splice(i,1);const c=Jd(1,r);c[i]=a[i];const l=o.slice();l.sort();const u=!v(l,Pp(0,r).slice(0,r-1));if(!n)return(()=>{if(u){const e=li(this.movingMean.read(),c),t=li(this.movingVariance.read(),c),n=this.center?li(this.beta.read(),c):null,a=this.scale?li(this.gamma.read(),c):null;return rg(s,e,t,n,a,this.epsilon)}return rg(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[m,_,d]=og(s,this.gamma.read(),this.beta.read(),o,this.epsilon),p=(e,t,n)=>{Ka((()=>{const s=1-n,a=e.read(),r=Gr(ro(a,t),s);e.write(ro(a,r))}))};return(()=>{p(this.movingMean,_,this.momentum),p(this.movingVariance,d,this.momentum)})(),m}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ih(this.betaInitializer),gammaInitializer:Ih(this.gammaInitializer),movingMeanInitializer:Ih(this.movingMeanInitializer),movingVarianceInitializer:Ih(this.movingVarianceInitializer),betaRegularizer:Ky(this.betaRegularizer),gammaRegularizer:Ky(this.gammaRegularizer),betaConstraint:af(this.betaConstraint),gammaConstraint:af(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ig.className="BatchNormalization",$r(ig);class cg extends Wh{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Sh(e.betaInitializer||"zeros"),this.gammaInitializer=Sh(e.gammaInitializer||"ones"),this.betaRegularizer=Xy(e.betaRegularizer),this.gammaRegularizer=Xy(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Eh(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==lp(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=Th(e),s=n.shape,a=s.length;return Ka((()=>{let{mean:e,variance:t}=mc(n,this.axis,!0);const r=Jd(1,a);for(const n of this.axis)r[n]=s[n];const o=e=>null!=e&&e.shape.length!==a?li(e,r):e;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(l.push(s[n]),u.push(1)):(l.push(1),u.push(s[n]));return e=Bi(e,l),t=Bi(t,l),null!=i&&(i=Bi(i,u)),null!=c&&(c=Bi(c,u)),rg(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ih(this.betaInitializer),gammaInitializer:Ih(this.gammaInitializer),betaRegularizer:Ky(this.betaRegularizer),gammaRegularizer:Ky(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}cg.className="LayerNormalization",$r(cg);class lg extends Wh{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new qd("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new qd("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new qd("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Oh({ndim:4})]}computeOutputShape(e){let t,n;return e=Eh(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ka((()=>{return t=Th(e),n=this.padding,s=this.dataFormat,Ka((()=>{if(4!==t.rank)throw new qd("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new qd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new qd("Unknown data format: ".concat(s,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],wc(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ug(e,t,n,s,a,r){return Ka((()=>{let o;Cp(a),Tp(r),Np(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==r&&(r="max"),e=aw(e,a);const i="same"===s?"same":"valid";return o="max"===r?oc(e,t,n,i):ui(e,t,n,i),"channelsFirst"===a&&(o=Yc(o,[0,3,1,2])),o}))}function mg(e,t,n,s,a,r){return Ka((()=>{let o;Cp(a),Tp(r),Np(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==r&&(r="max"),e=rw(e,a);const i="same"===s?"same":"valid";return o="max"===r?ic(e,t,n,i):mi(e,t,n,i),"channelsFirst"===a&&(o=Yc(o,[0,4,1,2,3])),o}))}lg.className="ZeroPadding2D",$r(lg);class _g extends Wh{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new qd("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(dp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new qd("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}dp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Np(this.padding),this.inputSpec=[new Oh({ndim:3})]}computeOutputShape(e){const t=nw((e=Eh(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ka((()=>{this.invokeCallHook(e,t),e=Gp(Th(e),2);const n=this.poolingFunction(Th(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Pc(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class dg extends _g{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return Cp(a),Np(s),ug(e,t,n,s,a,"max")}}dg.className="MaxPooling1D",$r(dg);class pg extends _g{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return Cp(a),Np(s),ug(e,t,n,s,a,"avg")}}pg.className="AveragePooling1D",$r(pg);class hg extends Wh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new qd("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];dp(this.poolSize,"poolSize"),dp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cp(this.dataFormat),Np(this.padding),this.inputSpec=[new Oh({ndim:4})]}computeOutputShape(e){e=Eh(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=nw(t,this.poolSize[0],this.padding,this.strides[0]),n=nw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ka((()=>(this.invokeCallHook(e,t),this.poolingFunction(Th(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fg extends hg{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return Cp(a),Np(s),ug(e,t,n,s,a,"max")}}fg.className="MaxPooling2D",$r(fg);class yg extends hg{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return Cp(a),Np(s),ug(e,t,n,s,a,"avg")}}yg.className="AveragePooling2D",$r(yg);class wg extends Wh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new qd("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dp(this.poolSize,"poolSize"),dp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cp(this.dataFormat),Np(this.padding),this.inputSpec=[new Oh({ndim:5})]}computeOutputShape(e){e=Eh(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=nw(t,this.poolSize[0],this.padding,this.strides[0]),n=nw(n,this.poolSize[1],this.padding,this.strides[1]),s=nw(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Ka((()=>(this.invokeCallHook(e,t),this.poolingFunction(Th(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gg extends wg{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return Cp(a),Np(s),mg(e,t,n,s,a,"max")}}gg.className="MaxPooling3D",$r(gg);class vg extends wg{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return Cp(a),Np(s),mg(e,t,n,s,a,"avg")}}vg.className="AveragePooling3D",$r(vg);class xg extends Wh{constructor(e){super(e),this.inputSpec=[new Oh({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Xd}}class bg extends xg{constructor(e){super(e||{})}call(e,t){return Ka((()=>{const t=Th(e);return cc(t,1)}))}}bg.className="GlobalAveragePooling1D",$r(bg);class kg extends xg{constructor(e){super(e||{})}call(e,t){return Ka((()=>{const t=Th(e);return Ki(t,1)}))}}kg.className="GlobalMaxPooling1D",$r(kg);class Ig extends Wh{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Cp(this.dataFormat),this.inputSpec=[new Oh({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Xd}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sg extends Ig{call(e,t){return Ka((()=>{const t=Th(e);return"channelsLast"===this.dataFormat?cc(t,[1,2]):cc(t,[2,3])}))}}Sg.className="GlobalAveragePooling2D",$r(Sg);class Cg extends Ig{call(e,t){return Ka((()=>{const t=Th(e);return"channelsLast"===this.dataFormat?Ki(t,[1,2]):Ki(t,[2,3])}))}}Cg.className="GlobalMaxPooling2D",$r(Cg);class Ng extends Wh{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=gf(t.layer,n);delete t.layer;const a={layer:s};return Object.assign(a,t),new e(a)}}class Tg extends Ng{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Eh(e)).length<3)throw new qd("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Eh(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Ka((()=>bw(((e,n)=>[Th(this.layer.call(e,t)),[]]),e=Th(e),[],!1,null,null,!1,!0)[1]))}}Tg.className="TimeDistributed",$r(Tg);class Eg extends Ng{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gf(n),t.goBackwards=!0!==t.goBackwards;const s={};var a;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=gf(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,mp(Ip,"BidirectionalMergeMode",a),e.weights)throw new Xd("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(s=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):ep(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const a=xw(e,n,s,this.numConstants);if(e=a.inputs,n=a.initialState,s=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const r=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new qd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,r.push(...n);const s=n.map((e=>new Oh({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),o.push(...s)}if(null!=s)throw new Xd("Support for constants in Bidirectional layers is not implemented yet.");const i=r[0]instanceof Lh;for(const c of r)if(c instanceof Lh!==i)throw new qd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(r),s=this.inputSpec.concat(o),a=this.inputSpec;this.inputSpec=s;const i=super.apply(n,t);return this.inputSpec=a,i}return super.apply(e,t)}call(e,t){return Ka((()=>{const n=t.initialState;let s,a,r,o;if(null==n)s=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),o=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(s)&&(r=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=Nc(a,1)),"concat"===this.mergeMode?o=qp([s,a]):"sum"===this.mergeMode?o=Wr(s,a):"ave"===this.mergeMode?o=Gr(.5,Wr(s,a)):"mul"===this.mergeMode?o=Gr(s,a):null==this.mergeMode&&(o=[s,a]),this.returnState?null==this.mergeMode?o.concat(r):[o].concat(r):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ap(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ap(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=gf(t.layer);if(delete t.layer,null!=t.numConstants)throw new Xd("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}Eg.className="Bidirectional",$r(Eg);class Rg extends Wh{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ka((()=>("float32"!==(e=Th(e)).dtype&&(e=Vp(e,"float32")),Wr(Gr(e,this.scale),this.offset))))}}Rg.className="Rescaling",$r(Rg);const{resizeBilinear:Ag,cropAndResize:Fg}=Ql;class Dg extends Wh{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,a,r,o,i){return Ka((()=>{let c,l=!1;const u=[t/r,n/o,(s+t)/r,(a+n)/o],m=[];3===e.rank?(l=!0,c=Wc([e])):c=e;for(let e=0;e<c.shape[0];e++)m.push(u);const _=Ua(m,[m.length,4]),d=Sc(0,m.length,1,"int32"),p=Fg(c,_,d,[s,a],"nearest");return Vp(l?Th(jc(p)):p,i)}))}upsize(e,t,n,s){return Ka((()=>Vp(Ag(e,[t,n]),s)))}call(e,t){return Ka((()=>{const t=Th(e),n=t.dtype,s=t.shape,a=s[s.length-3],r=s[s.length-2];let o=0;a!==this.height&&(o=Math.floor((a-this.height)/2));let i=0;return r!==this.width&&(i=Math.floor((r-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,a,r,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Eh(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Dg.className="CenterCrop",$r(Dg);class Mg extends Wh{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Eh(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Ka((()=>{let n;if("int32"!==(e=Th(e)).dtype&&(e=Vp(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new qd("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Th(t.countWeights)}const s=Ki(e),a=lc(e),r=Ui(this.numTokens,s).bufferSync().get(0),o=Vi(a,0).bufferSync().get(0);if(!r||!o)throw new qd("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,s){let a=Th(e);if("int32"!==a.dtype&&(a=Vp(a,"int32")),"int"===t)return a;const r=a.shape;if(0===a.rank&&(a=Li(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=Li(a,-1)),a.rank>2)throw new qd("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(r)+" which would result in output rank ".concat(a.rank,"."));const o=["multiHot","oneHot"].includes(t),i=a;let c;if(c=Ri(i,"undefined"!==typeof s&&"count"===t?s:[],n,o),"tfIdf"!==t)return c;if(s)return Gr(c,s);throw new qd("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Mg.className="CategoryEncoding",$r(Mg);const Og=new Set(["bilinear","nearest"]);class Lg extends Wh{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Og.has(e.interpolation))throw new qd("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Eh(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ka((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Ql.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Ql.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Og]," are supported"))}))}}Lg.className="Resizing",$r(Lg);class Bg{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Bg.className="RandomSeed";class zg extends Wh{constructor(e){super(e),this.randomGenerator=new Bg(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}zg.className="BaseRandomLayer";const Pg=new Set(["bilinear","nearest"]);class Wg extends zg{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new qd("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new qd("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new qd("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Pg.has(n))throw new qd("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Eh(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Ka((()=>{const t=Th(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Ic([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const a=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return Ql.resizeBilinear(e,a);case"nearest":return Ql.resizeNearestNeighbor(e,a);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Pg]," are supported"))}}))}}function Ug(e){return new Pw(e)}Wg.className="RandomWidth",$r(Wg);var Vg,Gg;Q().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Vg||(Vg={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Gg||(Gg={}));Error;new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Hg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Xg(e)){const a=Array.isArray(e)?[]:{};s.add(e);for(const r in e){const o=Hg(e[r],t,n,s);a[r]=o}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,a.value),a.value}function jg(e){return Kg(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:qg)}function Kg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Xg(s)){const a=Array.isArray(s)?[]:{};n.add(s);for(const r in s){const s=Kg(e.map((e=>e[r])),t,n);a[r]=s}return n.delete(s),a}throw new Error("Can't recurse into non-iterable type: ".concat(s))}return a.value}function qg(e){return null===e?null:Xg(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Xg(e){let t=!1;if(Q().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(551);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof oa)&&!(e instanceof Promise)&&!t)}function Yg(e){return function(e,t){return Hg(e,t)}(e,Qg)}function Qg(e){return e instanceof oa?{value:e.clone(),recurse:!1}:Xg(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Jg{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Zg extends Jg{constructor(){super(Zg.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function $g(e){return new sv(e)}function ev(e,t){return new pv(e,t)}Zg.INITIAL_CAPACITY=32;class tv{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new uv(this,e)}filter(e){return new cv(this,e)}map(e){return new lv(this,e)}mapAsync(e){return new mv(this,e)}serialMapAsync(e){return new mv(this,e).serial()}flatmap(e){return new dv(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new iv(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:qg;return this.rowMajorBatch(e,t).map((e=>jg(e,n)))}concatenate(e,t){return new pv(new nv([this,e]),t)}take(e){return e<0||null==e?this:new ov(this,e)}skip(e){return e<0||null==e?this:new rv(this,e)}prefetch(e){return new fv(this,e)}shuffle(e,t){return new yv(this,e,t)}serial(){return new av(this)}}class nv extends tv{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Yg(e),done:!1}}}class sv extends tv{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class av extends tv{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class rv extends tv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;qa(e.value)}return this.upstream.next()}}class ov extends tv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class iv extends tv{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class cv extends tv{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;qa(e.value)}}}class lv extends tv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=xa(e.value),n=this.transform(e.value),s=xa(n);for(const a of t)va(a,s)||a.dispose();return{value:n,done:!1}}}class uv extends tv{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class mv extends tv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=xa(e.value),n=await this.transform(e.value),s=xa(n);for(const a of t)va(a,s)||a.dispose();return{value:n,done:!1}}}class _v extends tv{constructor(){super(),this.outputQueue=new Zg,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class dv extends _v{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=xa(e.value),n=this.transform(e.value),s=xa(n);this.outputQueue.pushAll(n);for(const a of t)va(a,s)||a.dispose();return!0}}class pv extends tv{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var hv;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(hv||(hv={}));class fv extends tv{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Jg(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class yv extends fv{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=vc.alea(n||Ws().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class wv{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let s;return f(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),gv((async()=>(await n.iterator()).columnMajorBatch(e,t,vv)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,gv((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,gv((async()=>(await t.iterator()).filter((t=>Ka((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return gv((async()=>(await t.iterator()).map((t=>Ka((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return gv((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return gv((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,gv((async()=>ev($g((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,gv((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const s=this,a=vc.alea(t||Ws().toString());return gv((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,gv((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function gv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends wv{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function vv(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof oa||Gs(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof oa?Wc(e):Ua(e)}(e),recurse:!1}}return{value:null,recurse:!0}}wv.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function xv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&f("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const bv=um;class kv extends u{nextDataId(){return kv.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new l(this,Ha())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Q().get("IS_NODE")&&ds("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&F(n[0])){const a=n.map((e=>Us(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,s,a){this.data.set(e,{values:t,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Tu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Vs(e)));return Br(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Br(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ha().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ws();e();return{kernelMs:Ws()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xv([e],"where");const t=this.readSync(e.dataId);return bv(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}kv.nextDataId=0;function Iv(e){return(t,n,s)=>{const a=E(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}function Sv(e,t,n){return Cv(e,Iv(t),n)}function Cv(e,t,n){return s=>{let{inputs:a,attrs:r,backend:o}=s;const{x:i}=a;xv(i,e);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=cm(l)}else u=l;const m=n||i.dtype,_=t(u,m,r);return c.makeTensorInfo(i.shape,m,_)}}Ya("cpu",(()=>new kv),1);const Nv=Sv($e,(e=>e>=0?e:Math.exp(e)-1)),Tv={kernelName:$e,backendName:"cpu",kernelFunc:Nv};function Ev(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Rv={kernelName:ft,backendName:"cpu",kernelFunc:Ev};function Av(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:r}=s;xv([a],"leakyRelu");const o=g(a.shape),i=n.data.get(a.dataId).values,c=T("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?r*i[l]:i[l];return n.makeTensorInfo(a.shape,"float32",c)}const Fv={kernelName:bt,backendName:"cpu",kernelFunc:Av};function Dv(e){return(t,n,s,a,r)=>{const o=uo(t,n),i=o.length,c=B(o),l=T(r,g(o)),u=t.length,m=n.length,_=B(t),d=B(n),p=co(t,o),h=co(n,o);if(p.length+h.length===0)for(let f=0;f<l.length;++f)l[f]=e(s[f%s.length],a[f%a.length]);else for(let f=0;f<l.length;++f){const t=j(f,i,c),n=t.slice(-u);p.forEach((e=>n[e]=0));const r=H(n,u,_),o=t.slice(-m);h.forEach((e=>o[e]=0));const y=H(o,m,d);l[f]=e(s[r],a[y])}return[l,o]}}const Mv=Dv(((e,t)=>e<0?t*e:e));function Ov(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t;xv([s,a],"prelu");const r=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,[i,c]=Mv(s.shape,a.shape,r,o,"float32");return n.makeTensorInfo(c,"float32",i)}const Lv={kernelName:sn,backendName:"cpu",kernelFunc:Ov},Bv=Sv(_n,(e=>Math.max(0,e))),zv={kernelName:_n,backendName:"cpu",kernelFunc:Bv},Pv=Sv(wn,(e=>Math.min(Math.max(0,e),6))),Wv={kernelName:wn,backendName:"cpu",kernelFunc:Pv},Uv=Iv((e=>1/(1+Math.exp(-e)))),Vv=Sv(An,(e=>1/(1+Math.exp(-e)))),Gv={kernelName:An,backendName:"cpu",kernelFunc:Vv};function Hv(e,t,n,s,a){if("linear"===n)return Ev({inputs:{x:t},backend:e});if("relu"===n)return Bv({inputs:{x:t},backend:e});if("elu"===n)return Nv({inputs:{x:t},backend:e});if("relu6"===n)return Pv({inputs:{x:t},backend:e});if("prelu"===n)return Ov({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Av({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Vv({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function jv(e){const{inputs:t,backend:n}=e,{real:s,imag:a}=t,r=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(s.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",r),imag:n.makeTensorInfo(a.shape,"float32",o)},i}const Kv={kernelName:Ne,backendName:"cpu",kernelFunc:jv};function qv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return jv({inputs:{real:qv(e,t,"float32"),imag:qv(e,t,"float32")},backend:e})}const s=U(g(t),n);return e.makeTensorInfo(t,n,s)}function Xv(e){const{inputs:t,backend:n}=e,{input:s}=t,a=n.data.get(s.dataId).complexTensorInfos.real,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const Yv={kernelName:un,backendName:"cpu",kernelFunc:Xv};function Qv(e,t,n,s){if("int32"===s){return[t,"int32",Int32Array.from(e)]}if("bool"===s){const s=Ps([0],n),[a,r]=Dv(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[r,"bool",a]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(s))}function Jv(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:r}=s;if("complex64"===r){if("complex64"===a.dtype)return Ev({inputs:{x:a},backend:n});const e=qv(n,a.shape,a.dtype),t=Jv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=jv({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===a.dtype){const e=Xv({inputs:{input:a},backend:n}),t=Jv({inputs:{x:e},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(e),t}if(!R(a.dtype,r)){const e=Ev({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:r}}const o=n.data.get(a.dataId).values,[i,c,l]=Qv(o,a.shape,a.dtype,r);return n.makeTensorInfo(i,c,l)}const Zv={kernelName:Ie,backendName:"cpu",kernelFunc:Jv};function $v(e,t,n,s){return null==n?n=>{let{inputs:a,backend:r}=n;const{a:o,b:i}=a,c=r;xv([o,i],e);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,m="string"===o.dtype?cm(l):l,_="string"===o.dtype?cm(u):u,d=s||o.dtype,[p,h]=t(o.shape,i.shape,m,_,d);return c.makeTensorInfo(h,d,p)}:e=>{let{inputs:a,backend:r}=e;const{a:o,b:i}=a,c=r;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Jv({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),s=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,r=c.data.get(s.dataId).values,l=c.data.get(a.dataId).values,u=Jv({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),m=c.data.get(u.dataId),_=m.complexTensorInfos.real,d=m.complexTensorInfos.imag,p=c.data.get(_.dataId).values,h=c.data.get(d.dataId).values,[f,y,w]=n(o.shape,i.shape,r,l,p,h),g=c.makeTensorInfo(w,"float32",f),v=c.makeTensorInfo(w,"float32",y),x=jv({inputs:{real:g,imag:v},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(v),x}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,a=s||o.dtype,[r,l]=t(o.shape,i.shape,e,n,a);return c.makeTensorInfo(l,a,r)}}}function ex(e){return(t,n,s,a,r,o)=>{const i=uo(t,n),c=g(i),l=i.length,u=B(i),m=T("float32",c),_=T("float32",c),d=co(t,i),p=co(n,i),h=Tu(s,a),f=Tu(r,o),y=t.length,w=B(t),v=n.length,x=B(n);if(d.length+p.length===0)for(let g=0;g<m.length;g++){const t=g%h.length,n=g%f.length,s=e(h[2*t],h[2*t+1],f[2*n],f[2*n+1]);m[g]=s.real,_[g]=s.imag}else for(let g=0;g<m.length;g++){const t=j(g,l,u),n=t.slice(-y);d.forEach((e=>n[e]=0));const s=H(n,y,w),a=t.slice(-v);p.forEach((e=>a[e]=0));const r=H(a,v,x),o=e(h[2*s],h[2*s+1],f[2*r],f[2*r+1]);m[g]=o.real,_[g]=o.imag}return[m,_,i]}}const tx=Dv(((e,t)=>e+t)),nx=ex(((e,t,n,s)=>({real:e+n,imag:t+s}))),sx=$v(ae,tx,nx),ax={kernelName:ae,backendName:"cpu",kernelFunc:sx};function rx(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:r}=s,o=g(a.shape),i=S(r,o),c=g(i);f(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(a.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:a.dataId,shape:i,dtype:a.dtype}}const ox={kernelName:dn,backendName:"cpu",kernelFunc:rx};function ix(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r}=t,{transposeA:o,transposeB:i}=s;xv([a,r],"matMul");const c=a.shape.length,l=r.shape.length,u=o?a.shape[c-2]:a.shape[c-1],m=i?r.shape[l-1]:r.shape[l-2],_=o?a.shape[c-1]:a.shape[c-2],d=i?r.shape[l-2]:r.shape[l-1],p=a.shape.slice(0,-2),h=r.shape.slice(0,-2),y=g(p),w=g(h),v=uo(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([_,d]);f(u===m,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(m,") of Tensors with shapes ").concat(a.shape," and ")+"".concat(r.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const x=i?[w,d,m]:[w,m,d],b=rx({inputs:{x:a},backend:n,attrs:{shape:o?[y,u,_]:[y,_,u]}}),k=rx({inputs:{x:r},backend:n,attrs:{shape:x}}),I=o?b.shape[1]:b.shape[2],S=o?b.shape[2]:b.shape[1],C=i?k.shape[1]:k.shape[2],N=Math.max(y,w),T=n.data.get(b.dataId).values,E=n.data.get(k.dataId).values,R=B(b.shape),A=B(k.shape),[F,D,M]=o?[R[0],1,R[1]]:[R[0],R[1],1],[O,L,z]=i?[1,A[1],A[0]]:[A[1],1,A[0]],P=S*C,W=Br([N,S,C],b.dtype),U=W.values,V=n.blockSize;for(let f=0;f<N;f++){const e=f%y,t=f%w;for(let n=0;n<S;n+=V){const s=Math.min(n+V,S);for(let a=0;a<C;a+=V){const r=Math.min(a+V,C);for(let o=0;o<I;o+=V){const i=Math.min(o+V,I);for(let c=n;c<s;c++)for(let n=a;n<r;n++){let s=0;for(let a=o;a<i;a++){s+=T[e*F+c*D+a*M]*E[a*O+n*L+t*z]}U[f*P+(c*C+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,W.dtype,W.values)}const cx={kernelName:ge,backendName:"cpu",kernelFunc:ix};const lx={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:m}=s;let _,d,p;const h=[];_=ix({inputs:{a:a,b:r},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(d=sx({inputs:{a:_,b:o},backend:n}),h.push(_),_=d),u&&(p=Hv(n,_,u,i,m),h.push(_),_=p);for(const f of h)n.disposeIntermediateTensorInfo(f);return _}};function ux(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const mx={kernelName:te,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;xv(t,"abs");let s=new Float32Array(g(t.shape));return s=ux(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},_x=Sv(ne,(e=>Math.acos(e))),dx={kernelName:ne,backendName:"cpu",kernelFunc:_x},px=Sv(se,(e=>Math.acosh(e))),hx={kernelName:se,backendName:"cpu",kernelFunc:px};const fx={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;xv(t,"addN");const a=s.map((e=>n.data.get(e.dataId).values)),r=Br(s[0].shape,s[0].dtype),o=r.values;for(let i=0;i<s.length;i++){const e=a[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}};function yx(e,t,n,s,a){const r=t.length,o=g(t),i=B(t),c=B(a),l=T(n,g(a));for(let u=0;u<o;++u){const t=j(u,r,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];l[H(n,r,c)]=e[u]}return l}function wx(e){const{inputs:t,attrs:n,backend:s}=e,{x:a}=t,{perm:r}=n;xv(a,"transpose");const o=a.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=a.shape[r[l]];const c=yx(s.data.get(a.dataId).values,a.shape,a.dtype,r,i);return{dataId:s.write(c,i,a.dtype),shape:i,dtype:a.dtype}}const gx={kernelName:ns,backendName:"cpu",kernelFunc:wx};const vx={kernelName:oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s;xv(a,"all");const i=C(r,a.shape);let c=i;const l=ec(c,a.shape.length);let u=a;null!=l&&(u=wx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=nc(c.length,a.shape.length)),$i("all",c,u.shape.length);const[m,_]=Ji(u.shape,c),d=g(_),p=U(g(m),u.dtype),h=n.data.get(u.dataId).values;for(let y=0;y<p.length;++y){const e=y*d;let t=h[e];for(let n=0;n<d;++n){const s=h[e+n];t=t&&s}p[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const f=n.makeTensorInfo(m,u.dtype,p);if(o){const e=rx({inputs:{x:f},backend:n,attrs:{shape:Zi(m,i)}});return n.disposeIntermediateTensorInfo(f),e}return f}};const xx={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s;xv(a,"any");const i=C(r,a.shape);let c=i;const l=ec(c,a.shape.length);let u=a;null!=l&&(u=wx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=nc(c.length,a.shape.length)),$i("any",c,u.shape.length);const[m,_]=Ji(u.shape,c),d=g(_),p=U(g(m),u.dtype),h=n.data.get(u.dataId).values;for(let y=0;y<p.length;++y){const e=y*d;let t=h[e];for(let n=0;n<d;++n){const s=h[e+n];t=t||s}p[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const f=n.makeTensorInfo(m,u.dtype,p);if(o){const e=rx({inputs:{x:f},backend:n,attrs:{shape:Zi(m,i)}});return n.disposeIntermediateTensorInfo(f),e}return f}};const bx={kernelName:ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;xv(a,"argMax");let o=C(r,a.shape);const i=ec(o,a.shape.length);let c=a;const l=[];null!=i&&(c=wx({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(c),o=nc(o.length,c.shape.length)),o=[o[0]],$i("argMax",o,c.shape.length);const[u,m]=Ji(c.shape,o),_=U(g(u),"int32"),d=g(m),p=n.data.get(c.dataId).values;for(let h=0;h<_.length;++h){const e=h*d;let t=p[e],n=0;for(let s=0;s<d;++s){const a=p[e+s];a>t&&(t=a,n=s)}_[h]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",_)}};const kx={kernelName:le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;xv(a,"argMin");let o=C(r,a.shape);const i=ec(o,a.shape.length);let c=a;const l=[];null!=i&&(c=wx({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(c),o=nc(o.length,c.shape.length)),o=[o[0]],$i("argMin",o,c.shape.length);const[u,m]=Ji(c.shape,o),_=U(g(u),"int32"),d=g(m),p=n.data.get(c.dataId).values;for(let h=0;h<_.length;++h){const e=h*d;let t=p[e],n=0;for(let s=0;s<d;++s){const a=p[e+s];a<t&&(t=a,n=s)}_[h]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",_)}},Ix=Sv(ue,(e=>Math.asin(e))),Sx={kernelName:ue,backendName:"cpu",kernelFunc:Ix},Cx=Sv(me,(e=>Math.asinh(e))),Nx={kernelName:me,backendName:"cpu",kernelFunc:Cx},Tx=Sv(_e,(e=>Math.atan(e))),Ex={kernelName:_e,backendName:"cpu",kernelFunc:Tx},Rx=Dv(((e,t)=>Math.atan2(e,t))),Ax=$v(pe,Rx),Fx={kernelName:pe,backendName:"cpu",kernelFunc:Ax},Dx=Sv(de,(e=>Math.atanh(e))),Mx={kernelName:de,backendName:"cpu",kernelFunc:Dx};function Ox(e,t,n,s,a,r){const o=a.strideHeight,i=a.strideWidth,c=a.dilationHeight,l=a.dilationWidth,u=a.effectiveFilterHeight,m=a.effectiveFilterWidth,_=a.padInfo.top,d=a.padInfo.left,p="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Br(a.outShape,n),f=h.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],w=a.outShape[2]*a.outShape[3],g=a.outShape[3];for(let v=0;v<a.batchSize;++v){const t=v*y,n=v*s[0];for(let h=0;h<a.inChannels;++h)for(let y=0;y<a.outHeight;++y){const v=y*o-_,x=Math.max(0,v),b=Math.min(a.inHeight,u+v),k=t+y*w;for(let t=0;t<a.outWidth;++t){const o=t*i-d,u=Math.max(0,o),_=Math.min(a.inWidth,m+o);let y=p,w=0,v=0;for(let t=x;t<b;t+=c){const a=n+t*s[1];for(let t=u;t<_;t+=l){const n=e[a+t*s[2]+h];"max"===r&&n>y?y=n:"avg"===r&&(w+=n,v++)}if(isNaN(y))break}f[k+t*g+h]="avg"===r?w/v:y}}}return h}function Lx(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=Br(s.outShape,"int32"),i=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,m=s.effectiveFilterHeight,_=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,h=Br(t,n,e);for(let f=0;f<s.batchSize;++f)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*i-d;let y=n;for(;y<0;)y+=l;const w=Math.min(s.inHeight,m+n);for(let i=0;i<s.outWidth;++i){const m=i*c-p;let d=m;for(;d<0;)d+=u;const g=Math.min(s.inWidth,_+m);let v=Number.NEGATIVE_INFINITY,x=-1;for(let t=y;t<w;t+=l){const o=t-n;for(let n=d;n<g;n+=u){const i=n-m,c=h.get(f,t,n,e);c>v&&(v=c,x=a?r?((f*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:o*_+i)}}o.set(x,f,t,i,e)}}return o}function Bx(e,t,n,s,a,r){const o=a.strideDepth,i=a.strideHeight,c=a.strideWidth,l=a.dilationDepth,u=a.dilationHeight,m=a.dilationWidth,_=a.effectiveFilterDepth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,h=a.padInfo.front,f=a.padInfo.top,y=a.padInfo.left,w="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Br(a.outShape,n),v=g.values,x=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],b=a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let S=0;S<a.batchSize;++S){const t=S*x,n=S*s[0];for(let g=0;g<a.inChannels;++g)for(let x=0;x<a.outDepth;++x){const S=x*o-h;let C=S;for(;C<0;)C+=l;const N=Math.min(a.inDepth,_+S),T=t+x*b;for(let t=0;t<a.outHeight;++t){const o=t*i-f;let _=o;for(;_<0;)_+=u;const h=Math.min(a.inHeight,d+o),x=T+t*k;for(let t=0;t<a.outWidth;++t){const o=t*c-y;let i=o;for(;i<0;)i+=m;const d=Math.min(a.inWidth,p+o),f=x+t*I;let b=w,k=0,S=0;for(let t=C;t<N;t+=l){const a=n+t*s[1];for(let t=_;t<h;t+=u){const n=a+t*s[2];for(let t=i;t<d;t+=m){const a=e[n+t*s[3]+g];if("max"===r&&a>b?b=a:"avg"===r&&(k+=a,S++),isNaN(b))break}if(isNaN(b))break}if(isNaN(b))break}v[f+g]="avg"===r?k/Math.max(S,1):b}}}}return g}const zx={kernelName:he,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;xv(a,"avgPool");const{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=s;f(ri(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Yo(a.shape,r,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&v(l.inShape,l.outShape))u=Ev({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=B(a.shape),s=Ox(e,a.shape,a.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,a.dtype,s.values)}return u}};const Px={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=s;xv(a,"avgPool3d");const u=Qo(a.shape,r,o,1,i,c,l),m=Bx(n.data.get(a.dataId).values,a.shape,a.dtype,B(a.shape),u,"avg");return n.makeTensorInfo(m.shape,"float32",m.values)}};const Wx={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=s;xv([a,r],"avgPool3DGrad");const u=Qo(r.shape,o,i,1,c,l),m=u.strideDepth,_=u.strideHeight,d=u.strideWidth,p=u.filterDepth,h=u.filterHeight,f=u.filterWidth,y=u.dilationDepth,w=u.dilationHeight,g=u.dilationWidth,v=u.effectiveFilterDepth,x=u.effectiveFilterHeight,b=u.effectiveFilterWidth,k=v-1-u.padInfo.front,I=b-1-u.padInfo.left,S=x-1-u.padInfo.top,C=Br(r.shape,"float32"),N=1/(p*h*f),T=n.bufferSync(a);for(let E=0;E<u.batchSize;++E)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let s=0;s<u.inWidth;++s){const a=t-k,r=n-S,o=s-I;let i=0;for(let t=0;t<v;t+=y){const n=(a+t)/m;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<x;t+=w){const s=(r+t)/_;if(!(s<0||s>=u.outHeight||Math.floor(s)!==s))for(let t=0;t<b;t+=g){const a=(o+t)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;i+=T.get(E,n,s,a,e)}}}C.set(i*N,E,t,n,s,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Ux={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,o=r;xv([a,r],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=s,u=Yo(o.shape,i,c,1,l),m=u.strideHeight,_=u.strideWidth,d=u.filterHeight,p=u.filterWidth,h=u.dilationHeight,f=u.dilationWidth,y=u.effectiveFilterHeight,w=u.effectiveFilterWidth,g=w-1-u.padInfo.left,v=y-1-u.padInfo.top,x=Br(o.shape,"float32"),b=1/(d*p),k=n.data.get(a.dataId).values,I=Br(a.shape,"float32",k);for(let S=0;S<u.batchSize;++S)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const s=t-v,a=n-g;let r=0;for(let t=0;t<y;t+=h){const n=(s+t)/m;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<w;t+=f){const s=(a+t)/_;if(s<0||s>=u.outWidth||Math.floor(s)!==s)continue;r+=I.get(S,n,s,e)}}x.set(r*b,S,t,n,e)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Vx={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:r,offset:o,mean:i,variance:c}=t;f(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==r||i.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),xv([a,i,c,r,o],"batchNorm");let{varianceEpsilon:l}=s;null==l&&(l=.001);const u=n.data.get(a.dataId).values,m=n.data.get(i.dataId).values,_=n.data.get(c.dataId).values,d=r?n.data.get(r.dataId).values:new Float32Array([1]),p=o?n.data.get(o.dataId).values:new Float32Array([0]),h=new Float32Array(u.length),y=p.length,w=d.length,g=_.length,v=m.length;let x=0,b=0,k=0,I=0;for(let f=0;f<u.length;++f)h[f]=p[x++]+(u[f]-m[b++])*d[k++]/Math.sqrt(_[I++]+l),x>=y&&(x=0),b>=v&&(b=0),k>=w&&(k=0),I>=g&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,h)}};function Gx(e,t,n,s,a){const r=Wo(s,t,n),o=g(n),i=B(s);if(r){const n=Uo(t,i);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const c=Br(s,a,"string"===a?cm(e):e),l=Br(n,a);for(let u=0;u<l.size;++u){const e=l.indexToLoc(u),n=e.map(((e,n)=>e+t[n]));l.set(c.get(...n),...e)}return"string"===a?lm(l.values):l.values}function Hx(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,size:o}=s;xv(a,"slice");const[i,c]=Vo(a,r,o);To(a,i,c);const l=Gx(n.data.get(a.dataId).values,i,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,l)}const jx={kernelName:Nn,backendName:"cpu",kernelFunc:Hx};const Kx={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,crops:o}=s;xv([a],"batchToSpaceND");const i=r.reduce(((e,t)=>e*t)),c=mu(a.shape,r,i),l=_u(c.length,r.length),u=du(a.shape,r,i),m=pu(o,r.length),_=hu(u,o,r.length),d=rx({inputs:{x:a},backend:n,attrs:{shape:c}}),p=wx({inputs:{x:d},backend:n,attrs:{perm:l}}),h=rx({inputs:{x:p},backend:n,attrs:{shape:u}}),f=Hx({inputs:{x:h},backend:n,attrs:{begin:m,size:_}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}};function qx(e,t,n,s,a){const r=g(s),o=U(a,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=r>0?t[i]:1)}return o}function Xx(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e.shape[0],r=e.shape[1],o=Br([a,n],t.dtype);for(let i=0;i<a;i++)for(let a=0;a<r;a++){const r=e.get(i,a);if(r<0)throw new Error("Input x must be non-negative!");r>=n||(s?o.set(1,i,r):t.size>0?o.set(o.get(i,r)+t.get(i,a),i,r):o.set(o.get(i,r)+1,i,r))}return o}const Yx={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:o}=s,i=qx(n.data.get(a.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,i)}},Qx=Dv(((e,t)=>e&t)),Jx={kernelName:be,backendName:"cpu",kernelFunc:$v(be,Qx)};const Zx={kernelName:ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,r=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,i=uo(Array.from(r),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},$x=Iv((e=>Math.ceil(e))),eb=Cv(Se,$x),tb={kernelName:Se,backendName:"cpu",kernelFunc:eb},nb=Sv(Ce,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),sb={kernelName:Ce,backendName:"cpu",kernelFunc:nb},ab={kernelName:Te,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(g(t.shape)),a=n.data.get(t.dataId),r=a.complexTensorInfos.real,o=a.complexTensorInfos.imag,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];s[l]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")}};function rb(e,t,n,s){const a=E(n,g(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=g(e.shape);a.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const r="string"===n?cm(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+s;for(let t=0;t<e.shape[1];++t)a[i+t]=r[o++]}s+=e.shape[1]}))}return a}function ob(e){const{inputs:t,backend:n}=e,{input:s}=t,a=n.data.get(s.dataId).complexTensorInfos.imag,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const ib={kernelName:wt,backendName:"cpu",kernelFunc:ob};function cb(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,r=C(a,t[0].shape)[0];tu(t.map((e=>e.shape)),r);let o=nu(t.map((e=>e.shape)),r);if(0===g(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>g(e.shape)>0));if(1===i.length)return Ev({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>Xv({inputs:{input:e},backend:n}))),t=i.map((e=>ob({inputs:{input:e},backend:n}))),s=cb({inputs:e,backend:n,attrs:{axis:r}}),a=cb({inputs:t,backend:n,attrs:{axis:r}}),o=jv({inputs:{real:s,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}const c=i.map((e=>{const t=g(e.shape.slice(r));return rx({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=nu(c.map((e=>e.shape)),1);const u=1===c[0].shape[0],m=rb(l,o,t[0].dtype,u),_=nu(i.map((e=>e.shape)),r),d=n.makeTensorInfo(_,t[0].dtype,m);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const lb={kernelName:Ee,backendName:"cpu",kernelFunc:cb};function ub(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=s;xv([a,r],"conv2d");const m=ii(c),_=Jo(a.shape,r.shape,o,l,i,u,!1,m),d=_.filterHeight,p=_.filterWidth,h=_.dilationHeight,f=_.dilationWidth,y=_.padInfo.left,w=_.padInfo.top,g="channelsLast"===_.dataFormat,v=new na(_.outShape,a.dtype),x=B(a.shape),b=B(r.shape),k=x[0],I=g?x[1]:x[2],S=g?x[2]:1,C=g?1:x[1],N=v.strides[0],T=g?v.strides[1]:v.strides[2],E=g?v.strides[2]:1,R=g?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(r.dataId).values,D=v.values;for(let M=0;M<_.batchSize;++M){const e=M*k,t=M*N;for(let n=0;n<_.outHeight;++n){const s=t+n*T,a=n*_.strideHeight-w;for(let t=0;t<d;++t){const n=a+t*h;if(n<0||n>=_.inHeight)continue;const r=t*b[0],o=e+n*I;for(let e=0;e<_.outWidth;++e){const t=s+e*E,n=e*_.strideWidth-y;for(let e=0;e<p;++e){const s=n+e*f;if(s<0||s>=_.inWidth)continue;const a=o+s*S;let i=r+e*b[1];for(let e=0;e<_.inChannels;++e){const n=A[a+e*C];for(let e=0;e<_.outChannels;++e)D[t+e*R]+=n*F[i+e];i+=_.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const mb={kernelName:Re,backendName:"cpu",kernelFunc:ub};const _b={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=s;xv([a,r],"conv2dBackpropFilter");const m=ii(c),_=Jo(a.shape,u,o,1,i,l,!1,m),{strideHeight:d,strideWidth:p,filterHeight:h,filterWidth:f}=_,y="channelsLast"===_.dataFormat,w=new na(_.filterShape,"float32"),g=_.padInfo.left,v=_.padInfo.top,x=n.data.get(a.dataId).values,b=n.data.get(r.dataId).values,k=new na(a.shape,a.dtype,x),I=new na(r.shape,r.dtype,b);for(let S=0;S<h;++S){const e=Math.max(0,Math.ceil((v-S)/d)),t=Math.min(_.outHeight,(_.inHeight+v-S)/d);for(let n=0;n<f;++n){const s=Math.max(0,Math.ceil((g-n)/p)),a=Math.min(_.outWidth,(_.inWidth+g-n)/p);for(let r=0;r<_.inChannels;++r)for(let o=0;o<_.outChannels;++o){let i=0;for(let c=0;c<_.batchSize;++c)for(let l=e;l<t;++l){const e=S+l*d-v;for(let t=s;t<a;++t){const s=n+t*p-g;i+=y?k.get(c,e,s,r)*I.get(c,l,t,o):k.get(c,r,e,s)*I.get(c,o,l,t)}}w.set(i,S,n,r,o)}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const db={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=s;xv([a,r],"conv2dBackpropInput");const m=B(r.shape),_=B(a.shape);let d=ii(l);const p=Jo(o,r.shape,i,1,c,u,!1,d),h=new na(p.inShape,"float32"),f=h.values,y=n.data.get(a.dataId).values,w=n.data.get(r.dataId).values,[g,v,x]=m,{batchSize:b,filterHeight:k,filterWidth:I,inChannels:S,inHeight:C,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=p;d=p.dataFormat;const D=k-1-p.padInfo.top,M=I-1-p.padInfo.left,O="channelsLast"===d,L=h.strides[0],z=O?h.strides[1]:h.strides[2],P=O?h.strides[2]:1,W=O?1:h.strides[1],U=_[0],V=O?_[1]:_[2],G=O?_[2]:1,H=O?1:_[1];for(let B=0;B<b;++B)for(let e=0;e<S;++e)for(let t=0;t<C;++t){const n=t-D,s=Math.max(0,Math.ceil(n/A)),a=Math.min(E,(k+n)/A);for(let r=0;r<N;++r){const o=r-M,i=Math.max(0,Math.ceil(o/F)),c=Math.min(R,(I+o)/F);let l=0;for(let t=s;t<a;++t){const s=t*A-n;for(let n=i;n<c;++n){const a=U*B+V*t+G*n,r=g*(k-1-s)+v*(I-1-(n*F-o))+x*e;for(let e=0;e<T;++e){l+=y[a+H*e]*w[r+e]}}}f[L*B+z*t+P*r+W*e]=l}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}};const pb={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dilations:c}=s;xv([a,r],"conv3d");const l=Zo(a.shape,r.shape,o,c,i),{filterDepth:u,filterHeight:m,filterWidth:_,dilationDepth:d,dilationHeight:p,dilationWidth:h,padInfo:f}=l,y=f.front,w=f.left,g=f.top,v=new na(l.outShape,a.dtype),x=n.data.get(a.dataId).values,b=n.data.get(r.dataId).values,k=v.values,I=B(a.shape),S=B(r.shape);for(let C=0;C<l.batchSize;++C){const e=C*I[0],t=C*v.strides[0];for(let n=0;n<l.outDepth;++n){const s=t+n*v.strides[1],a=n*l.strideDepth-y;for(let t=0;t<u;++t){const n=a+t*d;if(n<0||n>=l.inDepth)continue;const r=t*S[0],o=e+n*I[1];for(let e=0;e<l.outHeight;++e){const t=s+e*v.strides[2],n=e*l.strideHeight-g;for(let e=0;e<m;++e){const s=n+e*p;if(s<0||s>=l.inHeight)continue;const a=r+e*S[1],i=o+s*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,s=e*l.strideWidth-w;for(let e=0;e<_;++e){const t=s+e*h;if(t<0||t>=l.inWidth)continue;const r=a+e*S[2],o=i+t*l.inChannels;let c=r;for(let e=0;e<l.inChannels;++e){const t=x[o+e];for(let e=0;e<l.outChannels;++e)k[n+e]+=t*b[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const hb={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:o,pad:i,filterShape:c}=s;xv([a,r],"conv3dBackpropFilterV2");const l=B(a.shape),u=B(r.shape),m=Zo(a.shape,c,o,1,i),_=m.strideDepth,d=m.strideHeight,p=m.strideWidth,h=m.filterDepth,f=m.filterHeight,y=m.filterWidth,w=new na(m.filterShape,"float32"),g=w.values,[v,x,b,k]=w.strides,I=n.data.get(r.dataId).values,[S,C,N,T]=u,E=n.data.get(a.dataId).values,[R,A,F,D]=l,M=m.padInfo.front,O=m.padInfo.left,L=m.padInfo.top;for(let B=0;B<h;++B){const e=Math.max(0,Math.ceil((M-B)/_)),t=Math.min(m.outDepth,(m.inDepth+M-B)/_),n=B*v;for(let s=0;s<f;++s){const a=Math.max(0,Math.ceil((L-s)/d)),r=Math.min(m.outHeight,(m.inHeight+L-s)/d),o=s*x+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((O-n)/p)),c=Math.min(m.outWidth,(m.inWidth+O-n)/p),l=n*b+o;for(let o=0;o<m.inChannels;++o){const u=o*k+l;for(let l=0;l<m.outChannels;++l){let h=0;for(let u=0;u<m.batchSize;++u){const m=u*R,f=u*S;for(let u=e;u<t;++u){const e=(B+u*_-M)*A+m,t=u*C+f;for(let u=a;u<r;++u){const a=(s+u*d-L)*F+e,r=u*N+t;for(let e=i;e<c;++e){const t=e*T+r;h+=E[(n+e*p-O)*D+a+o]*I[t+l]}}}}g[u+l]=h}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const fb={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{pad:o,strides:i,inputShape:c}=s;xv([a],"conv3dBackpropInputV2");const l=B(a.shape),u=B(r.shape),m=Zo(c,r.shape,i,1,o),_=new na(m.inShape,"float32"),d=_.values,[p,h,f,y]=_.strides,w=n.data.get(a.dataId).values,[g,v,x,b]=l,k=n.data.get(r.dataId).values,[I,S,C,N]=u,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:D,inHeight:M,inWidth:O,outChannels:L,outDepth:z,outHeight:P,outWidth:W,strideDepth:U,strideHeight:V,strideWidth:G}=m,H=E-1-m.padInfo.front,j=R-1-m.padInfo.top,K=A-1-m.padInfo.left;for(let B=0;B<T;++B)for(let e=0;e<F;++e)for(let t=0;t<D;++t){const n=t-H,s=Math.max(0,Math.ceil(n/U)),a=Math.min(z,(E+n)/U);for(let r=0;r<M;++r){const o=r-j,i=Math.max(0,Math.ceil(o/V)),c=Math.min(P,(R+o)/V);for(let l=0;l<O;++l){const u=l-K,m=Math.max(0,Math.ceil(u/G)),_=Math.min(W,(A+u)/G);let T=0;for(let t=s;t<a;++t){const s=t*U-n;for(let n=i;n<c;++n){const a=n*V-o;for(let r=m;r<_;++r){const o=g*B+v*t+x*n+b*r,i=I*(E-1-s)+S*(R-1-a)+C*(A-1-(r*G-u))+N*e;for(let e=0;e<L;++e){T+=w[o+e]*k[i+e]}}}}d[p*B+h*t+f*r+y*l+e]=T}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},yb=Sv(Le,(e=>Math.cos(e))),wb={kernelName:Le,backendName:"cpu",kernelFunc:yb},gb=Sv(Be,(e=>Math.cosh(e))),vb={kernelName:Be,backendName:"cpu",kernelFunc:gb};const xb={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:r,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=s,[u,m,_,d]=a.shape,p=r.shape[0],[h,f]=i,y=Br([p,h,f,d],"float32"),w=n.data.get(r.dataId).values,g=n.data.get(o.dataId).values,v=n.data.get(a.dataId).values,x=B(a.shape),b=B(y.shape);for(let k=0;k<p;k++){const e=4*k,t=w[e],n=w[e+1],s=w[e+2],a=w[e+3],r=g[k];if(r>=u)continue;const o=h>1?(s-t)*(m-1)/(h-1):0,i=f>1?(a-n)*(_-1)/(f-1):0;for(let u=0;u<h;u++){const e=h>1?t*(m-1)+u*o:.5*(t+s)*(m-1);if(e<0||e>m-1)for(let t=0;t<f;t++)for(let e=0;e<d;e++){const n=e+t*b[2]+u*b[1]+k*b[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),s=Math.ceil(e),o=e-t;for(let e=0;e<f;e++){const c=f>1?n*(_-1)+e*i:.5*(n+a)*(_-1);if(c<0||c>_-1){for(let t=0;t<d;t++){const n=t+e*b[2]+u*b[1]+k*b[0];y.values[n]=l}continue}const m=Math.floor(c),p=Math.ceil(c),h=c-m;for(let n=0;n<d;n++){let a=n+m*x[2]+t*x[1]+r*x[0];const i=v[a];a=n+p*x[2]+t*x[1]+r*x[0];const c=v[a];a=n+m*x[2]+s*x[1]+r*x[0];const l=v[a];a=n+p*x[2]+s*x[1]+r*x[0];const _=i+(c-i)*h,d=l+(v[a]-l)*h;a=n+e*b[2]+u*b[1]+k*b[0],y.values[a]=_+(d-_)*o}}}else for(let t=0;t<f;++t){const s=f>1?n*(_-1)+t*i:.5*(n+a)*(_-1);if(s<0||s>_-1){for(let e=0;e<d;e++){const n=e+t*b[2]+u*b[1]+k*b[0];y.values[n]=l}continue}const o=Math.round(s),c=Math.round(e);for(let e=0;e<d;e++){const n=e+o*x[2]+c*x[1]+r*x[0],s=e+t*b[2]+u*b[1]+k*b[0];y.values[s]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const bb={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:o,reverse:i}=s;xv(a,"cumprod");const c=ec([r],a.shape.length);let l=a;null!=c&&(l=wx({inputs:{x:a},backend:n,attrs:{perm:c}}));const u=nc(1,a.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const m=ha(l.dtype,"int32"),_=W(g(l.shape),m),d=n.data.get(l.dataId).values,p=l.shape[l.shape.length-1],h=i?(e,t)=>e+p-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=p)for(let e=0;e<p;e++){const t=h(y,e);if(0===e)_[t]=o?1:d[t];else{const n=h(y,e-1);_[t]=o?d[n]*_[n]:d[t]*_[n]}}const f=n.makeTensorInfo(l.shape,m,_);if(null!=c){const e=wx({inputs:{x:f},backend:n,attrs:{perm:tc(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(l),e}return f}};const kb={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:o,reverse:i}=s;xv(a,"cumsum");const c=ec([r],a.shape.length);let l=a;null!=c&&(l=wx({inputs:{x:a},backend:n,attrs:{perm:c}}));const u=nc(1,a.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const m=ha(l.dtype,"int32"),_=U(g(l.shape),m),d=n.data.get(l.dataId).values,p=l.shape[l.shape.length-1],h=i?(e,t)=>e+p-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=p)for(let e=0;e<p;e++){const t=h(y,e);if(0===e)_[t]=o?0:d[t];else{const n=h(y,e-1);_[t]=o?d[n]+_[n]:d[t]+_[n]}}const f=n.makeTensorInfo(l.shape,m,_);if(null!=c){const e=wx({inputs:{x:f},backend:n,attrs:{perm:tc(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(l),e}return f}};const Ib={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:o,binaryOutput:i}=s;if(1===a.shape.length){const e=qx(n.data.get(a.dataId).values,n.data.get(r.dataId).values,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,e)}if(2===a.shape.length){const e=Xx(n.bufferSync(a),n.bufferSync(r),o,i);return n.makeTensorInfo(e.shape,r.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};const Sb={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:r,dataFormat:o}=s;f("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=a.shape[0],c=a.shape[1],l=a.shape[2],u=a.shape[3],m=c*r,_=l*r,d=u/(r*r),p=n.data.get(a.dataId).values,h=new Float32Array(i*m*_*d);let y=0;for(let f=0;f<i;++f)for(let e=0;e<m;++e){const t=Math.floor(e/r),n=e%r;for(let e=0;e<_;++e){const s=Math.floor(e/r),a=(n*r+e%r)*d;for(let e=0;e<d;++e){const n=e+a+u*(s+l*(t+c*f));h[y++]=p[n]}}}return n.makeTensorInfo([i,m,_,d],a.dtype,h)}};function Cb(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=s;xv([a,r],"depthwiseConv2DNative");const u=B(a.shape),m=B(r.shape);let _=c;null==_&&(_=[1,1]),f(ri(o,_),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(_,"'")));const d=Jo(a.shape,r.shape,o,_,i,l,!0),{filterHeight:p,filterWidth:h,dilationHeight:y,dilationWidth:w,padInfo:g}=d,v=g.left,x=g.top,b=d.outChannels/d.inChannels,k=new na(d.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(r.dataId).values,C=k.values;for(let f=0;f<d.batchSize;++f){const e=f*u[0],t=f*k.strides[0];for(let n=0;n<d.outHeight;++n){const s=t+n*k.strides[1],a=n*d.strideHeight-x;for(let t=0;t<p;++t){const n=a+t*y;if(n<0||n>=d.inHeight)continue;const r=t*m[0],o=e+n*u[1];for(let e=0;e<d.outWidth;++e){const t=s+e*k.strides[2],n=e*d.strideWidth-v;for(let e=0;e<h;++e){const s=n+e*w;if(s<0||s>=d.inWidth)continue;const a=r+e*m[1],i=o+s*d.inChannels;let c=t,l=a;for(let e=0;e<d.inChannels;++e){const t=I[i+e];for(let e=0;e<b;++e)C[c+e]+=t*S[l+e];c+=b,l+=b}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Nb={kernelName:Ge,backendName:"cpu",kernelFunc:Cb};const Tb={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=s;xv([a,r],"depthwiseConv2dNativeBackpropFilter");const m=Jo(a.shape,u,o,i,c,l,!0),{strideHeight:_,strideWidth:d,filterHeight:p,filterWidth:h}=m,f=new na(m.filterShape,"float32"),y=m.padInfo.left,w=m.padInfo.top,g=m.outChannels/m.inChannels,v=n.data.get(a.dataId).values,x=new na(a.shape,a.dtype,v),b=n.data.get(r.dataId).values,k=new na(r.shape,r.dtype,b);for(let I=0;I<p;++I){const e=Math.max(0,Math.ceil((w-I)/_)),t=Math.min(m.outHeight,(m.inHeight+w-I)/_);for(let n=0;n<h;++n){const s=Math.max(0,Math.ceil((y-n)/d)),a=Math.min(m.outWidth,(m.inWidth+y-n)/d);for(let r=0;r<m.outChannels;++r){const o=Math.trunc(r/g),i=r%g;let c=0;for(let l=0;l<m.batchSize;++l)for(let i=e;i<t;++i){const e=I+i*_-w;for(let t=s;t<a;++t){const s=n+t*d-y;c+=x.get(l,e,s,o)*k.get(l,i,t,r)}}f.set(c,I,n,o,i)}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Eb={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=s;xv([a,r],"depthwiseConv2DNativeBackpropInput");const m=B(a.shape),_=B(r.shape),d=Jo(u,r.shape,o,i,c,l,!0),p=new na(d.inShape,"float32"),h=p.values,[f,y,w]=p.strides,g=n.data.get(a.dataId).values,[v,x,b]=m,k=n.data.get(r.dataId).values,[I,S,C]=_,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:D,outHeight:M,outWidth:O,strideHeight:L,strideWidth:z}=d,P=T-1-d.padInfo.top,W=E-1-d.padInfo.left,U=D/R;for(let B=0;B<N;++B)for(let e=0;e<R;++e)for(let t=0;t<A;++t){const n=t-P,s=Math.max(0,Math.ceil(n/L)),a=Math.min(M,(T+n)/L);for(let r=0;r<F;++r){const o=r-W,i=Math.max(0,Math.ceil(o/z)),c=Math.min(O,(E+o)/z);let l=0;for(let t=s;t<a;++t){const s=t*L-n;for(let n=i;n<c;++n){const a=v*B+x*t+b*n,r=I*(T-1-s)+S*(E-1-(n*z-o))+C*e;for(let t=0;t<U;++t){l+=g[a+(e*U+t)]*k[r+t]}}}h[f*B+y*t+w*r+e]=l}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}};const Rb={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=g(s.shape),r=n.data.get(s.dataId).values,o=Br([a,a],s.dtype),i=o.values;for(let l=0;l<r.length;l++)i[l*a+l]=r[l];const c=[...s.shape,...s.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},Ab={kernelName:qe,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:a,filter:r}=t,{strides:o,pad:i,dilations:c}=s,l=n,u=l.data.get(a.dataId).values,m=a.shape.length,_=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:h,inWidth:f,inChannels:y,outHeight:w,outWidth:v,padInfo:x,strideHeight:b,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:N,outShape:T}=Xo(a.shape,r.shape,o,i,"NHWC",c),R=g(T),A=T.length,F=E(a.dtype,R);for(let g=0;g<p;++g)for(let e=0;e<w;++e){const t=e*b-x.top;for(let n=0;n<v;++n){const s=n*k-x.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<h)for(let t=0;t<S;++t){const c=s+t*N;if(c>=0&&c<f){const s=H([g,n,c,o],m,B(a.shape)),l=H([e,t,o],d,B(r.shape)),p=u[s]+_[l];p>i&&(i=p)}}}F[H([g,e,n,o],A,B(T))]=i}}}return{dataId:l.write(Ps(F,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Fb={kernelName:Ye,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:a,filter:r,dy:o}=t,{strides:i,pad:c,dilations:l}=s,u=n,m=P(a.shape,u.data.get(a.dataId).values),_=P(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:h,inChannels:y,outHeight:w,outWidth:g,padInfo:v,strideHeight:x,strideWidth:b,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Xo(a.shape,r.shape,i,c,"NHWC",l);f(o.rank===N.length,(()=>"Error in ".concat(Ye,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(o.rank)));const T=P(N,u.data.get(o.dataId).values),E=V(r.shape,r.dtype);for(let f=0;f<d;++f)for(let e=0;e<w;++e){const t=e*x-v.top;for(let n=0;n<g;++n){const s=n*b-v.left;for(let a=0;a<y;++a){let r=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<p)for(let t=0;t<I;++t){const c=s+t*C;if(c>=0&&c<h){const s=m[f][n][c][a]+_[e][t][a];s>r&&(r=s,o=e,i=t)}}}E[o][i][a]+=T[f][e][n][a]}}}return{dataId:u.write(Ps(E,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Db={kernelName:Xe,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:a,filter:r,dy:o}=t,{strides:i,pad:c,dilations:l}=s,u=n,m=P(a.shape,u.data.get(a.dataId).values),_=P(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:h,inChannels:y,outHeight:w,outWidth:g,padInfo:v,strideHeight:x,strideWidth:b,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Xo(a.shape,r.shape,i,c,"NHWC",l);f(o.rank===N.length,(()=>"Error in ".concat(Xe,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(o.rank)));const T=P(N,u.data.get(o.dataId).values),E=V(a.shape,a.dtype);for(let f=0;f<d;++f)for(let e=0;e<w;++e){const t=e*x-v.top;for(let n=0;n<g;++n){const s=n*b-v.left;for(let a=0;a<y;++a){let r=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=s<0?0:s;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<p)for(let t=0;t<I;++t){const c=s+t*C;if(c>=0&&c<h){const s=m[f][n][c][a]+_[e][t][a];s>r&&(r=s,o=n,i=c)}}}E[f][o][i][a]+=T[f][e][n][a]}}}return{dataId:u.write(Ps(E,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};const Mb={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a}=t,{canvas:r,options:o}=s,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const m=r.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==m)throw new Error("Could not get the context with ".concat(u," type."));const[_,d]=a.shape.slice(0,2),p=2===a.shape.length?1:a.shape[2],h=n.data.get(a.dataId).values,f="float32"===a.dtype?255:1,y=new Uint8ClampedArray(d*_*4);for(let g=0;g<_*d;++g){const e=[0,0,0,255*l];for(let n=0;n<p;n++){const t=h[g*p+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===a.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===p?(e[0]=t*f,e[1]=t*f,e[2]=t*f):e[n]=t*f}const t=4*g;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}r.width=d,r.height=_;const w=new ImageData(y,d,_);return m.putImageData(w,0,0),a}},Ob=Dv(((e,t)=>e*t)),Lb=ex(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),Bb=$v(Kt,Ob,Lb),zb={kernelName:Kt,backendName:"cpu",kernelFunc:Bb};function Pb(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s;let i;xv(a,"sum"),i="bool"===a.dtype?Jv({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):Ev({inputs:{x:a},backend:n});const c=i.shape.length,l=C(r,i.shape),u=ec(l,c);let m=l,_=i;null!=u&&(_=wx({inputs:{x:i},backend:n,attrs:{perm:u}}),m=nc(m.length,c)),$i("sum",m,_.shape.length);const[d,p]=Ji(_.shape,m);let h=qv(n,d,ha(_.dtype,"int32"));const f=g(p),y=n.data.get(h.dataId).values,w=n.data.get(_.dataId).values;for(let g=0;g<y.length;++g){const e=g*f;let t=0;for(let n=0;n<f;++n)t+=w[e+n];y[g]=t}if(o){const e=h;h=rx({inputs:{x:h},backend:n,attrs:{shape:Zi(h.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(_),h}const Wb={kernelName:Mn,backendName:"cpu",kernelFunc:Pb};const Ub={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,r=t,{allDims:o,summedDims:i,idDims:c}=Wu(a,r.length);Vu(o.length,c,r);const{path:l,steps:u}=Gu(i,c),m=u.length;let _=null,d=o.length;const p=[];for(let h=0;h<m;++h){for(const e of u[h]){const{permutationIndices:t,expandDims:s}=Uu(d,c[e]);let a;Hu(t)?a=r[e]:(a=wx({inputs:{x:r[e]},backend:n,attrs:{perm:t}}),p.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);v(a.shape,o)||(a=rx({inputs:{x:a},backend:n,attrs:{shape:o}}),p.push(a)),null===_?_=a:(_=Bb({inputs:{a:a,b:_},backend:n}),p.push(_))}h<m-1&&(l[h]>=0&&(_=Pb({inputs:{x:_},backend:n,attrs:{axis:l[h]-(o.length-d),keepDims:!1}}),p.push(_)),d--)}for(const h of p)h!==_&&n.disposeIntermediateTensorInfo(h);return _}};const Vb={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;xv([s,a],"eluGrad");const r=new Float32Array(g(a.shape)),o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values;for(let c=0;c<o.length;++c){const e=o[c];r[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(a.shape,"float32",r)}},Gb=Dv(((e,t)=>e===t?1:0)),Hb=$v(nt,Gb,null,"bool"),jb={kernelName:nt,backendName:"cpu",kernelFunc:Hb},Kb=bu,qb=ku,Xb=Iu,Yb=Su,Qb=Cu,Jb=Nu,Zb=Sv(tt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Kb*n);return t*(1-((((Jb*s+Qb)*s+Yb)*s+Xb)*s+qb)*s*Math.exp(-n*n))})),$b={kernelName:tt,backendName:"cpu",kernelFunc:Zb},ek=Iv((e=>Math.exp(e))),tk=Cv(st,ek,"float32"),nk={kernelName:st,backendName:"cpu",kernelFunc:tk};function sk(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:r}=s,o=a.shape.length,i=a.shape.slice();let c=r;return r<0&&(f(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),rx({inputs:{x:a},backend:n,attrs:{shape:i}})}const ak={kernelName:at,backendName:"cpu",kernelFunc:sk},rk=Iv((e=>Math.expm1(e))),ok=Cv(rt,rk),ik={kernelName:rt,backendName:"cpu",kernelFunc:ok},ck=Dv(((e,t)=>e/t)),lk=$v(Je,ck),uk={kernelName:Je,backendName:"cpu",kernelFunc:lk},mk=Dv(((e,t)=>e-t)),_k=ex(((e,t,n,s)=>({real:e-n,imag:t-s}))),dk=$v(Qn,mk,_k),pk={kernelName:Qn,backendName:"cpu",kernelFunc:dk};function hk(e,t,n){const s=e.shape,a=s[0],r=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[a,r],u=g(l),m=T("float32",u),_=T("float32",u);for(let f=0;f<a;f++){const e=Hx({inputs:{x:i},backend:n,attrs:{begin:[f,0],size:[1,r]}}),s=Hx({inputs:{x:c},backend:n,attrs:{begin:[f,0],size:[1,r]}}),a=jv({inputs:{real:e,imag:s},backend:n}),{real:o,imag:l}=fk(a,t,n),u=Tu(o,l);for(let t=0;t<r;t++){const e=Fu(u,t);m[f*r+t]=e.real,_[f*r+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const d=n.makeTensorInfo(l,"float32",m),p=n.makeTensorInfo(l,"float32",_),h=jv({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}function fk(e,t,n){const s=g(e.shape),a=n.data.get(e.dataId),r=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((i=s)&i-1)){const a=yk(r,o,s,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",a.real),t=n.makeTensorInfo(i,"float32",a.imag),r=n.makeTensorInfo([],"float32",zs(s,"float32")),o=Ev({inputs:{x:r},backend:n}),c=uk.kernelFunc({inputs:{a:e,b:r},backend:n}),l=uk.kernelFunc({inputs:{a:t,b:o},backend:n}),u=n.data.get(c.dataId).values,m=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:m}}return a}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let a=0;a<t;a++){let r=0,o=0;for(let s=0;s<t;s++){const i=Ou(a*s,t,n),c=Fu(e,s);r+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(r/=t,o/=t),Du(s,r,o,a)}return s}(Tu(r,o),s,t);return Eu(e)}var i}function yk(e,t,n,s,a){if(1===n)return{real:e,imag:t};const r=Tu(e,t),o=n/2,i=Ru(r),c=i.real,l=i.imag,u=[c.length],m=a.makeTensorInfo(u,"float32",c),_=a.makeTensorInfo(u,"float32",l),d=jv({inputs:{real:m,imag:_},backend:a}),p=Au(r),h=p.real,f=p.imag,y=[h.length],w=a.makeTensorInfo(y,"float32",h),g=a.makeTensorInfo(y,"float32",f),v=jv({inputs:{real:w,imag:g},backend:a}),x=yk(c,l,o,s,a),b=x.real,k=x.imag,I=[b.length],S=a.makeTensorInfo(I,"float32",b),C=a.makeTensorInfo(I,"float32",k),N=jv({inputs:{real:S,imag:C},backend:a}),T=yk(h,f,o,s,a),E=T.real,R=T.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),D=a.makeTensorInfo(A,"float32",R),M=jv({inputs:{real:F,imag:D},backend:a}),O=Mu(n,s),L=[O.real.length],B=a.makeTensorInfo(L,"float32",O.real),z=a.makeTensorInfo(L,"float32",O.imag),P=jv({inputs:{real:B,imag:z},backend:a}),W=Bb({inputs:{a:P,b:M},backend:a}),U=sx({inputs:{a:N,b:W},backend:a}),V=dk({inputs:{a:N,b:W},backend:a}),G=Xv({inputs:{input:U},backend:a}),H=Xv({inputs:{input:V},backend:a}),j=ob({inputs:{input:U},backend:a}),K=ob({inputs:{input:V},backend:a}),q=cb({inputs:[G,H],backend:a,attrs:{axis:0}}),X=cb({inputs:[j,K],backend:a,attrs:{axis:0}}),Y=a.data.get(q.dataId).values,Q=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const wk={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=g(s.shape),r=s.shape[s.shape.length-1],o=rx({inputs:{x:s},backend:n,attrs:{shape:[a/r,r]}}),i=hk(o,!1,n),c=rx({inputs:{x:i},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function gk(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:r}=n,o=r||M(a),i=E(o,g(s));return function(e,t,n){e.fill(t)}(i,a),t.makeTensorInfo(s,o,i)}const vk={kernelName:it,backendName:"cpu",kernelFunc:gk};const xk={kernelName:ct,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{image:a}=t,r=s,o=T(a.dtype,g(a.shape)),[i,c,l,u]=a.shape,m=r.data.get(a.dataId).values;for(let _=0;_<i;_++){const e=_*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const s=t*u;for(let a=0;a<u;a++){const r=Math.round(l-t-1),i=e+n+s+a;let c=m[i];if(r>=0&&r<l){c=m[e+n+r*u+a]}o[i]=c}}}}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},bk=Iv((e=>Math.floor(e))),kk=Cv(lt,bk),Ik={kernelName:lt,backendName:"cpu",kernelFunc:kk},Sk=Dv(((e,t)=>Math.floor(e/t))),Ck=$v(ut,Sk,null,"int32"),Nk={kernelName:ut,backendName:"cpu",kernelFunc:Ck};const Tk={kernelName:ms,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:m,dimRoundingMode:_,activation:d,leakyreluAlpha:p}=s;let h=ub({inputs:{x:a,filter:r},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:m,dimRoundingMode:_}});if(o){const e=h;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=rx({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});h=sx({inputs:{a:h,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else h=sx({inputs:{a:h,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=h;if("NCHW"===u&&"prelu"===d&&1===i.shape.length&&1!==i.shape[0]){const e=rx({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});h=Hv(n,h,d,e,p),n.disposeIntermediateTensorInfo(e)}else h=Hv(n,h,d,i,p);n.disposeIntermediateTensorInfo(e)}return h}};const Ek={kernelName:_s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:m,dimRoundingMode:_,activation:d,leakyreluAlpha:p}=s;let h=Cb({inputs:{x:a,filter:r},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:m,dimRoundingMode:_}});if(o){const e=h;h=sx({inputs:{a:h,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=h;h=Hv(n,h,d,i,p),n.disposeIntermediateTensorInfo(e)}return h}};function Rk(e,t,n,s,a,r,o,i,c){const l=Br([s,r],n);for(let u=0;u<s;u++){const n=[];let s=0;for(let t=0;t<a;t++){const r=e[u*a+t];s+=r*o[t],n.push(r)}if(s<0||s>=c/r)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<r;e++)l.values[u*r+e]=t.get(...t.indexToLoc(s*r+e))}return l}const Ak={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,r=g(s.shape),o=a.shape,i=o[o.length-1],[c,l,u,m]=fu(s,a);if(0===l)return n.makeTensorInfo(c,s.dtype,[]);const _=Rk(n.data.get(a.dataId).values,n.bufferSync(s),s.dtype,l,i,u,m,s.shape,r);return n.makeTensorInfo(c,s.dtype,_.values)}};function Fk(e,t,n){const s=Br(n,e.dtype);for(let a=0;a<s.size;++a){const n=s.indexToLoc(a).slice(),r=n[0],o=n[2],i=t.locToIndex([r,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(s.values[a]=e.values[c])}return s}const Dk={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:r}=t,{axis:o,batchDims:i}=s;xv([a,r],"gatherV2");const c=C(o,a.shape)[0],l=n.data.get(r.dataId).values,u=a.shape[c];for(let g=0;g<l.length;++g){const e=l[g];f(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let m=i;null==i&&(m=0);const _=g(r.shape),d=im(a,r,c,m),p=rx({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=rx({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,_/d.batchSize]}}),y=[d.batchSize,d.outerSize,_/d.batchSize,d.sliceSize],w=n.bufferSync(h),v=Fk(n.bufferSync(p),w,y);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.makeTensorInfo(d.outputShape,v.dtype,v.values)}},Mk=Dv(((e,t)=>e>t?1:0)),Ok=$v(pt,Mk,null,"bool"),Lk={kernelName:pt,backendName:"cpu",kernelFunc:Ok},Bk=Dv(((e,t)=>e>=t?1:0)),zk=$v(ht,Bk,null,"bool"),Pk={kernelName:ht,backendName:"cpu",kernelFunc:zk};const Wk={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=g(s.shape),r=s.shape[s.shape.length-1],o=rx({inputs:{x:s},backend:n,attrs:{shape:[a/r,r]}}),i=hk(o,!0,n),c=rx({inputs:{x:i},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},Uk=Sv(gt,(e=>Number.isFinite(e)?1:0),"bool"),Vk={kernelName:gt,backendName:"cpu",kernelFunc:Uk},Gk=Sv(vt,(e=>Math.abs(e)===1/0?1:0),"bool"),Hk={kernelName:vt,backendName:"cpu",kernelFunc:Gk},jk=Sv(xt,(e=>Number.isNaN(e)?1:0),"bool"),Kk={kernelName:xt,backendName:"cpu",kernelFunc:jk},qk=Dv(((e,t)=>e<t?1:0)),Xk=$v(kt,qk,null,"bool"),Yk={kernelName:kt,backendName:"cpu",kernelFunc:Xk},Qk=Dv(((e,t)=>e<=t?1:0)),Jk=$v(It,Qk,null,"bool"),Zk={kernelName:It,backendName:"cpu",kernelFunc:Jk};function $k(e,t,n){const s=(t-e)/(n-1),a=U(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}const eI={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:a,num:r}=n,o=$k(s,a,r);return t.makeTensorInfo([o.length],"float32",o)}},tI=Iv((e=>Math.log(e))),nI=Cv(Ct,tI),sI={kernelName:Ct,backendName:"cpu",kernelFunc:nI},aI=Sv(Nt,(e=>Math.log1p(e))),rI={kernelName:Nt,backendName:"cpu",kernelFunc:aI},oI=Dv(((e,t)=>e&&t)),iI=$v(Tt,oI,null,"bool"),cI={kernelName:Tt,backendName:"cpu",kernelFunc:iI},lI=Sv(Et,(e=>e?0:1),"bool"),uI={kernelName:Et,backendName:"cpu",kernelFunc:lI},mI=Dv(((e,t)=>e||t)),_I=$v(Rt,mI,null,"bool"),dI={kernelName:Rt,backendName:"cpu",kernelFunc:_I};const pI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:r,bias:o,alpha:i,beta:c}=s;xv(a,"LRN");const l=a.shape[3],u=l-1,m=n.data.get(a.dataId).values,_=g(a.shape),d=new Float32Array(_);function p(e){const t=e%l;let n=e-t+Math.max(0,t-r);const s=e-t+Math.min(t+r,u);let a=0;for(;n<=s;n++){const e=m[n];a+=e*e}return a}for(let h=0;h<_;h++){const e=p(h),t=m[h]*Math.pow(o+i*e,-c);d[h]=t}return n.makeTensorInfo(a.shape,a.dtype,d)}};const hI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:r,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=s;xv(o,"LRNGrad");const m=g(o.shape),_=o.shape[3],d=n.data.get(o.dataId).values,p=n.data.get(a.dataId).values,h=n.data.get(r.dataId).values,f=new Float32Array(m),y=m;for(let w=0;w<y;w++){const e=w%_,t=w-e+Math.max(0,e-i),n=w-e+Math.min(_,e+i+1);let s=0;for(let a=t;a<n;a++)s+=Math.pow(p[a],2);s=l*s+c;for(let a=t;a<n;a++){let e=-2*l*u*p[a]*h[w]/s;w===a&&(e+=Math.pow(s,-u)),e*=d[w],f[a]+=e}}return n.makeTensorInfo(o.shape,a.dtype,f)}};function fI(e,t,n,s){const a=T(s,g(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}function yI(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:r,keepDims:o}=s,i=n;let c=a.shape;const l=c.length,u=C(r,c);let m=u;const _=ec(m,l);let d=i.data.get(a.dataId).values;if(null!=_){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[_[t]];d=yx(d,c,a.dtype,_,e),m=nc(m.length,l),c=e}xv(a,"max"),$i("max",m,l);const[p,h]=Ji(c,m),f=fI(d,g(h),p,a.dtype),y=i.write(f,p,a.dtype);let w=p;if(o){w=Zi(p,u)}return{dataId:y,shape:w,dtype:a.dtype}}const wI={kernelName:Dt,backendName:"cpu",kernelFunc:yI},gI=Dv(((e,t)=>Math.max(e,t))),vI=$v(Mt,gI),xI={kernelName:Mt,backendName:"cpu",kernelFunc:vI};const bI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;xv(a,"maxPool");const{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=s;f(ri(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Yo(a.shape,r,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&v(l.inShape,l.outShape))u=Ev({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=B(a.shape),s=Ox(e,a.shape,a.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,a.dtype,s.values)}return u}};const kI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=s;xv(a,"maxPool3d");const u=Qo(a.shape,r,o,1,i,c,l),m=Bx(n.data.get(a.dataId).values,a.shape,a.dtype,B(a.shape),u,"max");return n.makeTensorInfo(m.shape,"float32",m.values)}};const II={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=s;xv([a,r],"maxPool3DGrad");const u=Qo(r.shape,o,i,1,c,l),m=function(e,t){const n=Br(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,m=t.effectiveFilterWidth,_=t.padInfo.front,d=t.padInfo.top,p=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let f=0;f<t.inChannels;++f)for(let y=0;y<t.outDepth;++y){const w=y*s-_;let g=w;for(;g<0;)g+=o;const v=Math.min(t.inDepth,l+w);for(let s=0;s<t.outHeight;++s){const l=s*a-d;let _=l;for(;_<0;)_+=i;const x=Math.min(t.inHeight,u+l);for(let a=0;a<t.outWidth;++a){const d=a*r-p;let b=d;for(;b<0;)b+=c;const k=Math.min(t.inWidth,m+d);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=g;t<v;t+=o){const n=t-w;for(let s=_;s<x;s+=i){const a=s-l;for(let r=b;r<k;r+=c){const o=r-d,i=e.get(h,t,s,r,f);i>=I&&(I=i,S=n*u*m+a*u+o)}}}n.set(S,h,y,s,a,f)}}}return n}(n.bufferSync(r),u),_=u.strideDepth,d=u.strideHeight,p=u.strideWidth,h=u.dilationDepth,f=u.dilationHeight,y=u.dilationWidth,w=u.effectiveFilterDepth,g=u.effectiveFilterHeight,v=u.effectiveFilterWidth,x=w-1-u.padInfo.front,b=v-1-u.padInfo.left,k=g-1-u.padInfo.top,I=Br(r.shape,"float32"),S=n.bufferSync(a);for(let C=0;C<u.batchSize;++C)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let s=0;s<u.inWidth;++s){const a=t-x,r=n-k,o=s-b;let i=0;for(let t=0;t<w;t+=h){const n=(a+t)/_;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let s=0;s<g;s+=f){const a=(r+s)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let r=0;r<v;r+=y){const c=(o+r)/p;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=w*g*v-1-m.get(C,n,a,c,e)===t*g*v+s*v+r?1:0;if(0===l)continue;i+=S.get(C,n,a,c,e)*l}}}I.set(i,C,t,n,s,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const SI={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r,output:o}=t,i=r;xv([r,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:m}=s,_=Yo(i.shape,c,l,1,u,m),d=n.data.get(i.dataId).values,p=Br(_.outShape,i.dtype,Lx(d,i.shape,i.dtype,_).values),h=_.strideHeight,f=_.strideWidth,y=_.dilationHeight,w=_.dilationWidth,g=_.effectiveFilterHeight,v=_.effectiveFilterWidth,x=v-1-_.padInfo.left,b=g-1-_.padInfo.top,k=Br(i.shape,"float32"),I=n.data.get(a.dataId).values,S=Br(a.shape,"float32",I);for(let C=0;C<_.batchSize;++C)for(let e=0;e<_.inChannels;++e)for(let t=0;t<_.inHeight;++t)for(let n=0;n<_.inWidth;++n){const s=t-b,a=n-x;let r=0;for(let t=0;t<g;t+=y){const n=(s+t)/h;if(!(n<0||n>=_.outHeight||Math.floor(n)!==n))for(let s=0;s<v;s+=w){const o=(a+s)/f;if(o<0||o>=_.outWidth||Math.floor(o)!==o)continue;const i=g*v-1-p.get(C,n,o,e)===t*v+s?1:0;if(0===i)continue;r+=S.get(C,n,o,e)*i}}k.set(r,C,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const CI={kernelName:Pt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:a}=t,{filterSize:r,strides:o,pad:i,includeBatchInIndex:c}=n,l=s;xv(a,"MaxPoolWithArgmax");const u=l.data.get(a.dataId).values,m=Yo(a.shape,r,o,[1,1],i),[_,d]=function(e,t,n,s,a){const r=Ox(e,0,n,B(t),a,"max"),o=Lx(e,t,n,a,!0,s);return[r.values,o.values]}(u,a.shape,a.dtype,c,m),p=l.write(_,m.outShape,a.dtype),h=l.write(d,m.outShape,a.dtype);return[{dataId:p,shape:m.outShape,dtype:a.dtype},{dataId:h,shape:m.outShape,dtype:"int32"}]}};const NI={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s,i=C(r,a.shape),c=g(Ji(a.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const m=Jv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(m);const _=lk({inputs:{a:m,b:u},backend:n});l.push(_);const d=Pb({inputs:{x:_},backend:n,attrs:{axis:r,keepDims:o}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const TI={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s;xv(a,"min");const i=C(r,a.shape);let c=i;const l=ec(c,a.shape.length);let u=a;null!=l&&(u=wx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=nc(c.length,a.shape.length)),$i("min",c,u.shape.length);const[m,_]=Ji(u.shape,c),d=g(_),p=U(g(m),u.dtype),h=n.data.get(u.dataId).values;for(let y=0;y<p.length;++y){const e=y*d;let t=h[e];for(let n=0;n<d;++n){const s=h[e+n];(Number.isNaN(s)||s<t)&&(t=s)}p[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const f=n.makeTensorInfo(m,u.dtype,p);if(o){const e=rx({inputs:{x:f},backend:n,attrs:{shape:Zi(m,i)}});return n.disposeIntermediateTensorInfo(f),e}return f}},EI=Dv(((e,t)=>Math.min(e,t))),RI=$v(Vt,EI),AI={kernelName:Vt,backendName:"cpu",kernelFunc:RI};const FI={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:r,mode:o}=s;xv(a,"mirrorPad");const i=r.map(((e,t)=>e[0]+a.shape[t]+e[1])),c=r.map((e=>e[0])),l=r.map(((e,t)=>e[0]+a.shape[t])),u="reflect"===o?0:1,m=n.data.get(a.dataId).values,_=a.shape.length,d=B(a.shape),p=g(i),h=i.length,f=B(i),y=T(a.dtype,p);for(let w=0;w<p;w++){let e=j(w,h,f);for(let n=0;n<h;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=H(e,_,d);y[w]=m[t]}return{dataId:n.write(y,i,a.dtype),shape:i,dtype:a.dtype}}},DI=Dv(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),MI=$v(Ht,DI),OI={kernelName:Ht,backendName:"cpu",kernelFunc:MI};function LI(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:r}=s,o=a.shape.length;let i=r;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=C([i],a.shape),l=yI({inputs:{x:a},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=Zi(l.shape,c),m=rx({inputs:{x:l},backend:n,attrs:{shape:u}}),_=dk({inputs:{a:a,b:m},backend:n}),d=tk({inputs:{x:_},backend:n}),p=Pb({inputs:{x:d},backend:n,attrs:{axis:c,keepDims:!1}}),h=rx({inputs:{x:p},backend:n,attrs:{shape:u}}),f=lk({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(_),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}const BI={kernelName:Bn,backendName:"cpu",kernelFunc:LI};const zI={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:r,seed:o,normalized:i}=s;xv(a,"multinomial");const c=i?a:LI({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],m=n.data.get(c.dataId).values,_=[l,r],d=U(g(_),"int32");for(let p=0;p<l;++p){const e=p*u,t=new Float32Array(u-1);t[0]=m[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+m[e+a];const n=vc.alea(o.toString()),s=p*r;for(let a=0;a<r;++a){const e=n();d[s+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){d[s+a]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(_,"int32",d)}};function PI(e,t,n){const s=zs(-1,n);return Ob([],t,s,e,n)}const WI={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;xv(s,"neg");const a=n.data.get(s.dataId).values,[r,o]=PI(a,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,r)}},UI=bl;const VI={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=s;xv(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,{selectedIndices:m}=UI(l,u,o,i,c);return n.makeTensorInfo([m.length],"int32",new Int32Array(m))}},GI=kl;const HI={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=s;xv(a,"NonMaxSuppressionPadded");const u=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values,{selectedIndices:_,validOutputs:d}=GI(u,m,o,i,c,l);return[n.makeTensorInfo([_.length],"int32",new Int32Array(_)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},jI=Il;const KI={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=s;xv(a,"NonMaxSuppressionWithScore");const u=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values,_=o,d=i,p=c,h=l,{selectedIndices:f,selectedScores:y}=jI(u,m,_,d,p,h);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},qI=Dv(((e,t)=>e!==t?1:0)),XI=$v(Xt,qI,null,"bool"),YI={kernelName:Xt,backendName:"cpu",kernelFunc:XI};const QI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:r,depth:o,onValue:i,offValue:c}=s;xv(a,"oneHot");const l=g(a.shape),u=new Float32Array(l*o);u.fill(c);const m=n.data.get(a.dataId).values;for(let _=0;_<l;++_)m[_]>=0&&m[_]<o&&(u[_*o+m[_]]=i);return n.makeTensorInfo([...a.shape,o],r,u)}};function JI(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=Xv({inputs:{input:s},backend:n}),t=JI({inputs:{x:e},backend:n}),a=ob({inputs:{input:s},backend:n}),r=JI({inputs:{x:a},backend:n}),o=jv({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}return gk({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const ZI={kernelName:os,backendName:"cpu",kernelFunc:JI};const $I={kernelName:Zt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Xv({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s}),r=ob({inputs:{input:a},backend:s}),o=JI({inputs:{x:r},backend:s}),i=jv({inputs:{real:n,imag:o},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(r),s.disposeIntermediateTensorInfo(o),i}return gk({backend:s,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function eS(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return sk({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const r=t[0].shape,o=t[0].dtype;t.forEach((e=>{y(r,e.shape,"All tensors passed to stack must have matching shapes"),f(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=cb({inputs:t.map((e=>{const t=sk({inputs:{input:e},backend:n,attrs:{dim:a}});return i.push(t),t})),backend:n,attrs:{axis:a}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const tS={kernelName:en,backendName:"cpu",kernelFunc:eS};const nS={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:r,constantValue:o}=s;xv(a,"pad");const i=r.map(((e,t)=>e[0]+a.shape[t]+e[1])),c=r.map((e=>e[0])),l=n.data.get(a.dataId).values,u=g(a.shape),m=a.shape.length,_=B(a.shape),d=g(i),p=i.length,h=B(i),f=T(a.dtype,d);0!==o&&f.fill(o);for(let y=0;y<u;y++){f[H(j(y,m,_).map(((e,t)=>e+c[t])),p,h)]=l[y]}return{dataId:n.write(f,i,a.dtype),shape:i,dtype:a.dtype}}},sS=Dv(((e,t)=>Math.pow(e,t))),aS=$v(nn,sS),rS={kernelName:nn,backendName:"cpu",kernelFunc:aS};function oS(e,t,n,s){const[a,r]=Ji(e,s),o=ha(t,"int32"),i=U(g(a),o),c=g(r);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let s=0;s<c;++s)t*=n[e+s];i[l]=t}return{outVals:i,outShape:a,outDtype:o}}const iS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s;xv(a,"prod");const i=a.shape.length,c=C(r,a.shape),l=ec(c,i);let u=c,m=a;const _=[];null!=l&&(m=wx({inputs:{x:a},backend:n,attrs:{perm:l}}),_.push(m),u=nc(u.length,i));const d=n.data.get(m.dataId).values,{outVals:p,outShape:h,outDtype:f}=oS(m.shape,m.dtype,d,u);let y=h;return o&&(y=Zi(h,c)),_.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,f,p)}};function cS(e,t,n,s){const a=[];let r=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],a=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let s=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const a=n[e],r=e+t.length-1;if(r>=0){const e=i[r],t=e[e.length-1]-a[s];for(let n=s;n<o;++n)i[r].push(a[n+1]+t)}s=a[s],o=a[o]}o!==s&&(a.push([s,o]),r+=o-s)}return{outSplits:i,valueSlices:a,numValues:r}}function lS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function uS(e,t,n,s,a){const r=t.slice();r[0]=a;const o=E(n,g(r)),i=e.length;return function(e,t,n,s,a,r){const o=lS(t,2)[1],i=lS(r,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<s;++n)a[c*i+n]=e[t*o+n];++c}}(e,t,s,0===i?0:i/t[0],o,r),[o,r]}function mS(e,t,n,s,a,r,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const a=j(s,t.length,B(t)).join(",");throw new Error("indices[".concat(a,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(r,o,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:l,valueSlices:u,numValues:m}=cS(r,o,e,c),_=function(e){const t=[];for(let n=0;n<e.length;++n){const s=E("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(l),d=uS(n,s,a,u,m);return[_,d[0],d[1]]}const _S={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:a,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:i}=s,c=a.map((e=>n.data.get(e.dataId).values)),l=a.map((e=>e.shape)),u=n.data.get(r.dataId).values,m=n.data.get(o.dataId).values,[_,d,p]=mS(c,l,u,r.shape,r.dtype,m,o.shape),h=_.map((e=>n.makeTensorInfo([e.length],"int32",e))),f=n.makeTensorInfo(p,r.dtype,d);return h.concat([f])}},dS=2147483647;function pS(e,t,n,s,a,r,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===a.length,l=0===o.length,u=[];i||u.push(t[0]),c||u.push(a[0]),l||u.push(o[0]);for(let h=1;h<u.length;++h)if(u[h]!==u[h-1])throw new Error("starts, limits, and deltas must have the same shape");const m=0===u.length?1:u[0],_=E("int32",m+1);_[0]=0;for(let h=0;h<m;++h){const t=i?e[0]:e[h],n=c?s[0]:s[h],a=l?r[0]:r[h];if(0===a)throw new Error("Requires delta != 0");let o;if(a>0&&n<t||a<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/a)),o>dS)throw new Error("Requires ((limit - start) / delta) <= ".concat(dS));_[h+1]=_[h]+o}const d=E(n,_[m]);let p=0;for(let h=0;h<m;++h){const t=_[h+1]-_[h];let n=i?e[0]:e[h];const s=l?r[0]:r[h];for(let e=0;e<t;++e)d[p++]=n,n+=s}return[_,d]}const hS={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:a,deltas:r}=t,o=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,[l,u]=pS(o,s.shape,s.dtype,i,a.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],s.dtype,u)]}};var fS=su;class yS{constructor(e,t,n,s,a,r,o,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=a,this.defaultValue=r,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=ru(l),this.raggedRank=ou(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===fS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===fS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case fS.VALUE_ROWIDS:return yS.getMaxWidthValueRowID(t);case fS.ROW_SPLITS:return yS.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(fS[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],a=0;for(let r=1;r<t;++r){const t=e[r];t!==s&&(s=t,a=Math.max(r-n,a),n=r)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return gS(e,n)}calculateOutputSize(e){const t=this.valuesShape;iu(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=au(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),a=[];let r=0;for(let o=0;o<s;++o,r+=t)a.push(r);for(let o=s;o<e;++o)a.push(-1);return f(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,s){const a=e.length,r=[];for(let o=0;o<a-1;++o){const a=e[o+1]-e[o];let i=Math.min(s,a),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)r.push(c),c+=n;for(let e=0;e<a-i;++e)r.push(-1)}if(a>0&&r.length!==e[a-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(e,t,n,s){const a=e.length,r=[];if(0===a)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];r.push(c);for(let l=1;l<a;++l){const a=e[l];if(a===i)c>=0&&(++o,o<s?c+=n:c=-1);else{if(o=0,i=a,a>=t.length)throw new Error("Got nextValueRowId=".concat(a," which is not less than ").concat(t.length));c=t[a]}r.push(c)}if(r.length!==e.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(e,t,n,s){const a=this.getRowPartitionTensor(e),r=this.getRowPartitionTypeByDimension(e);switch(r){case fS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,s);case fS.ROW_SPLITS:if(a.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(a.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(a,t,n,s);default:throw new Error("Unsupported partition type: ".concat(fS[r]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case fS.FIRST_DIM_SIZE:return e[0];case fS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case fS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(fS[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const s=gS(t,!1),a=E(this.valuesDType,g(s));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){r=this.calculateOutputIndex(e-1,r,n[e],t[e])}this.setOutput(this.raggedRank,r,a,s)}return[s,a]}setOutput(e,t,n,s){if(0===n.length)return;const a=this.values,r=n;let o=s.slice();o=o.slice(e+1);const i=g(o),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Ka((()=>{const t=li(l,e),n=fi(t,o);l=n.dataSync()}))}let u=0,m=0,_=0;for(let d=0;d<=c;++d){let e=d<c?t[d]:-1;if(e!==_){if(m<_){const e=a.subarray(u*i);wS(r.subarray(m*i),e,(_-m)*i)}if(d>=c){const t=n.length;e=Math.floor(t/i)}if(e>_)if(1===this.defaultValue.length)r.subarray(_*i,e*i).fill(this.defaultValue[0]),_=e;else for(;e>_;){wS(r.slice(_*i),l,i),++_}e<0?(u=d+1,m=_):(u=d,m=_,_=m+1)}else++_}}}function wS(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function gS(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error("Dimension ".concat(s," must be >= 0"));if(s<-1)throw new Error("Dimension ".concat(s," must be >= -1"));s=-1}n.push(s)}return n}function vS(e,t,n,s,a,r,o,i,c,l){return new yS(e,t,n,s,a,r,o,i,c,l).compute()}const xS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:a,values:r,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=s,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,m=n.data.get(o.dataId).values,_=i.map((e=>n.data.get(e.dataId).values)),d=i.map((e=>e.shape)),[p,h]=vS(l,a.shape,u,r.shape,r.dtype,m,o.shape,_,d,c);return n.makeTensorInfo(p,r.dtype,h)}};function bS(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return U(0,s);const a=U(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+n;return a}const kS={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:a,dtype:r,step:o}=n,i=bS(s,a,o,r);return t.makeTensorInfo([i.length],r,i)}},IS=Sv(mn,(e=>1/e)),SS={kernelName:mn,backendName:"cpu",kernelFunc:IS};const CS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:o,size:i}=s;xv(a,"resizeBilinear");const c=B(a.shape),[l,u]=i,[m,_,d,p]=a.shape,h=n.data.get(a.dataId).values,f=new Float32Array(g([m,l,u,p])),y=[r&&l>1?_-1:_,r&&u>1?d-1:d],w=[r&&l>1?l-1:l,r&&u>1?u-1:u];let v=0;const x=y[0]/w[0],b=y[1]/w[1];for(let g=0;g<m;g++)for(let e=0;e<l;e++){let t;t=o?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(_-1,Math.ceil(t)),r=g*c[0]+n*c[1],i=g*c[0]+a*c[1];for(let e=0;e<u;e++){let t;t=o?b*(e+.5)-.5:b*e;const n=Math.max(0,Math.floor(t)),a=t-n,l=Math.min(d-1,Math.ceil(t)),u=r+n*c[2],m=i+n*c[2],_=r+l*c[2],y=i+l*c[2];for(let e=0;e<p;e++){const t=h[u+e],n=h[m+e],r=t+(h[_+e]-t)*a,o=r+(n+(h[y+e]-n)*a-r)*s;f[v++]=o}}}return n.makeTensorInfo([m,l,u,p],"float32",f)}};const NS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:o}=s;xv([r,a],"resizeBilinearGrad");const i=B(a.shape),[c,l,u,m]=a.shape,[,_,d]=r.shape,p=new Float32Array(c*l*u*m),h=[o&&_>1?l-1:l,o&&d>1?u-1:u],f=[o&&_>1?_-1:_,o&&d>1?d-1:d],y=h[0]/f[0],w=h[1]/f[1],g=n.data.get(r.dataId).values;let v=0;for(let x=0;x<c;x++){const e=x*i[0];for(let t=0;t<_;t++){const n=t*y,s=Math.floor(n),a=Math.min(Math.ceil(n),l-1),r=e+s*i[1],o=e+a*i[1],c=n-s,_=1-c;for(let e=0;e<d;e++){const t=e*w,n=Math.floor(t),s=Math.min(Math.ceil(t),u-1),a=t-n,l=1-a,d=r+n*i[2],h=r+s*i[2],f=o+n*i[2],y=o+s*i[2],x=_*l,b=_*a,k=c*l,I=c*a;for(let e=0;e<m;e++){const t=g[v++];p[d+e]+=t*x,p[h+e]+=t*b,p[f+e]+=t*k,p[y+e]+=t*I}}}}return n.makeTensorInfo([c,u,l,m],"float32",p)}};const TS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:o,size:i}=s;xv(a,"resizeNearestNeighbor");const c=B(a.shape),[l,u]=i,[m,_,d,p]=a.shape,h=n.data.get(a.dataId).values,f=new Float32Array(m*l*u*p),y=[r&&l>1?_-1:_,r&&u>1?d-1:d],w=[r&&l>1?l-1:l,r&&u>1?u-1:u],g=y[0]/w[0],v=y[1]/w[1];let x=0;for(let b=0;b<m;b++){const e=b*c[0];for(let t=0;t<l;t++){const n=o?g*(t+.5):g*t;let s=Math.min(_-1,r?Math.round(n):Math.floor(n));o&&(s=Math.max(0,s));const a=e+s*c[1];for(let e=0;e<u;e++){const t=o?v*(e+.5):v*e;let n=Math.min(d-1,r?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const s=a+n*c[2];for(let e=0;e<p;e++){const t=h[s+e];f[x++]=t}}}}return n.makeTensorInfo([m,l,u,p],a.dtype,f)}};const ES={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:o}=s;xv([r,a],"resizeNearestNeighborGrad");const i=B(a.shape),c=B(r.shape),[l,u,m,_]=a.shape,[,d,p]=r.shape,h=new Float32Array(l*u*m*_),f=n.data.get(r.dataId).values,y=[o&&d>1?u-1:u,o&&p>1?m-1:m],w=[o&&d>1?d-1:d,o&&p>1?p-1:p],g=y[0]/w[0],v=y[1]/w[1],x=1/g,b=1/v,k=2*Math.ceil(x)+2,I=2*Math.ceil(b)+2;for(let S=0;S<l;S++){const e=S*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],s=Math.floor(t*x),a=Math.floor(s-k/2);for(let r=0;r<m;r++){const s=n+r*i[2],l=Math.floor(r*b),y=Math.floor(l-I/2);for(let n=0;n<_;n++){let i=0;for(let s=0;s<k;s++){const l=s+a;if(l<0||l>=d)continue;const _=e+l*c[1],h=l*g;if(t===Math.min(u-1,o?Math.round(h):Math.floor(h)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=p)continue;const s=_+t*c[2],a=t*v;r===Math.min(m-1,o?Math.round(a):Math.floor(a))&&(i+=f[s+n])}}h[s+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,h)}};const RS={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:r}=s;xv(a,"reverse");const o=a.shape.length,i=C(r,a.shape);if(0===o)return Ev({inputs:{x:a},backend:n});const c=new na(a.shape,a.dtype),l=n.bufferSync(a);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=a.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},AS={kernelName:ls,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{image:a}=t,{radians:r,fillValue:o,center:i}=n,c=s,l=T(a.dtype,g(a.shape)),[u,m,_,d]=a.shape,[p,h]=uu(i,m,_),f=Math.sin(r),y=Math.cos(r),w=c.data.get(a.dataId).values;for(let g=0;g<u;g++){const e=g*_*m*d;for(let t=0;t<m;t++){const n=t*(_*d);for(let s=0;s<_;s++){const a=s*d;for(let r=0;r<d;r++){const i=[u,t,s,r],c=i[2],g=i[1];let v=(c-p)*y-(g-h)*f,x=(c-p)*f+(g-h)*y;v=Math.round(v+p),x=Math.round(x+h);let b=o;if("number"!==typeof o&&(b=3===r?255:o[r]),v>=0&&v<_&&x>=0&&x<m){b=w[e+x*(_*d)+v*d+r]}l[e+n+a+r]=b}}}}return{dataId:c.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},FS=Sv(vn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),DS={kernelName:vn,backendName:"cpu",kernelFunc:FS},MS=Iv((e=>1/Math.sqrt(e))),OS=Cv(xn,MS),LS={kernelName:xn,backendName:"cpu",kernelFunc:OS};function BS(e,t,n,s,a,r,o,i,c,l){const u=[s/a,a],m=e.values,_=t.values;if(0===s)return Br(n,t.dtype);const d=c instanceof na?c:Br(u,t.dtype);"string"===typeof c||"number"===typeof c?d.values.fill(c):"boolean"===typeof c&&d.values.fill(+c);for(let p=0;p<r;p++){const e=[];let r=0;for(let t=0;t<o;t++){const n=m[p*o+t];e.push(n),r+=n*i[t]}if(r<0||r>=s/a)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<a;n++)l?d.values[r*a+n]+=_[p*a+n]:d.values[r*a+n]=0===t.rank?_[0]:_[p*a+n]}return d}const zS={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:r}=t,{shape:o}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:m}=gu(0,a,o),_=BS(n.bufferSync(a),n.bufferSync(r),o,m,l,c,i,u,0,!0);return n.makeTensorInfo(o,_.dtype,_.values)}};function PS(e,t){let n=0,s=e.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),e[a]<t?n=a+1:s=a;return s}function WS(e,t){let n=0,s=e.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),e[a]<=t?n=a+1:s=a;return s}const US={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:a,values:r}=t,{side:o}=s,i=function(e,t,n,s,a,r){const o=E("int32",n*a);for(let i=0;i<n;++i){const n=e.slice(i*s,(i+1)*s),c=i*a;for(let e=0;e<a;++e)o[c+e]="left"===r?PS(n,t[e+c]):WS(n,t[e+c])}return o}(n.data.get(a.dataId).values,n.data.get(r.dataId).values,a.shape[0],a.shape[1],r.shape[1],o);return n.makeTensorInfo(r.shape,"int32",i)}};const VS={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:r}=t;xv([s,a,r],"select");const o=s.shape.length,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=ha(a.dtype,r.dtype),m=U(g(a.shape),u);let _=0;const d=0===o||o>1||1===a.shape.length?1:g(a.shape.slice(1));for(let p=0;p<i.length;p++)for(let e=0;e<d;e++)1===i[p]?m[_++]=c[p]:m[_++]=l[p];return n.makeTensorInfo(a.shape,u,m)}},GS=vu,HS=xu,jS=Sv(Cn,(e=>e>=0?HS*e:GS*(Math.exp(e)-1))),KS={kernelName:Cn,backendName:"cpu",kernelFunc:jS},qS=Sv(Rn,(e=>e<0?-1:e>0?1:0)),XS={kernelName:Rn,backendName:"cpu",kernelFunc:qS},YS=Sv(Tn,(e=>Math.sin(e))),QS={kernelName:Tn,backendName:"cpu",kernelFunc:YS},JS=Sv(En,(e=>Math.sinh(e))),ZS={kernelName:En,backendName:"cpu",kernelFunc:JS},$S=Math.log(1.1920928955078125e-7)+2,eC=Sv(Fn,(e=>{const t=e>-$S,n=e<$S,s=Math.exp(e);let a;return a=n?s:t?e:Math.log(1+s),a})),tC={kernelName:Fn,backendName:"cpu",kernelFunc:eC};const nC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,paddings:o}=s;xv([a],"spaceToBatchND");const i=g(r),c=[[0,0]];c.push(...o);for(let f=1+r.length;f<a.shape.length;++f)c.push([0,0]);const l=nS.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),u=mu(l.shape,r,i,!1),m=_u(u.length,r.length,!1),_=du(l.shape,r,i,!1),d=rx({inputs:{x:l},backend:n,attrs:{shape:u}}),p=wx({inputs:{x:d},backend:n,attrs:{perm:m}}),h=rx({inputs:{x:p},backend:n,attrs:{shape:_}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}};function sC(e,t,n,s,a,r,o){const i=t[0],c=r[0],l=new Array(c),u=new Array(i),m=t[1];if(0===c){if(0!==i)throw new Error(qu(i));return[E(n,0),[0,m],E(a,0),l,u]}let _=!0,d=0;const p=new Array(c).fill(0);for(let f=0;f<i;++f){const t=e[f*m];if(t<0)throw new Error(Xu(f,t));if(t>=c)throw new Error(Yu(f,t,c));++p[t],_=_&&t>=d,d=t}let h=!0;for(let f=0;f<c;++f){const e=0===p[f];l[f]=e,h=h&&!e,p[f]=Math.max(p[f],1),f>0&&(p[f]+=p[f-1])}if(h&&_){const t=e,n=s;for(let e=0;e<i;++e)u[e]=e;return[t,[i,m],n,l,u]}{const t=p[c-1],r=E(n,t*m),_=E(a,t),d=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*m],a=d[t],o=(0===t?0:p[t-1])+a;d[t]++;for(let s=0;s<m;++s)r[o*m+s]=e[n*m+s];_[o]=s[n],u[n]=o}for(let e=0;e<c;++e){if(0===d[e]){const t=0===e?0:p[e-1];r[t*m+0]=e;for(let e=1;e<m;++e)r[t*m+e]=0;_[t]=o}}return[r,[t,m],_,l,u]}}const aC={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:a,denseShape:r,defaultValue:o}=t;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(r.shape));if(2!==s.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(s.shape));if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(a.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values[0],[m,_,d,p,h]=sC(i,s.shape,s.dtype,c,a.dtype,l,u);return[n.makeTensorInfo(_,s.dtype,m),n.makeTensorInfo([_[0]],a.dtype,d),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map((e=>Number(e))))),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function rC(e,t,n,s,a){const r=g(s),o=t[0],i=a.length,c=[];let l=1,u=-1;for(let h=0;h<i;++h){const e=a[h];if(-1===e){if(-1!==u)throw new Error(Qu(u,h));u=h,c.push(1)}else{if(e<0)throw new Error(Ju(h,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(r/l);if(l*e!==r)throw new Error($u(s,c));c[u]=e}if(g(c)!==r)throw new Error(em(s,c));const m=s.length,_=[];if(m>0){_[m-1]=1;for(let e=m-2;e>=0;--e)_[e]=_[e+1]*s[e+1]}const d=[];if(i>0){d[i-1]=1;for(let e=i-2;e>=0;--e)d[e]=d[e+1]*c[e+1]}const p=E(n,o*i);for(let h=0;h<o;++h){let t=0;for(let n=0;n<m;++n)t+=e[h*m+n]*_[n];for(let e=0;e<i;++e)p[h*i+e]=Math.trunc(t/d[e]),t%=d[e]}return[p,[o,i],c]}const oC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:a,newShape:r}=t;if(2!==s.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(s.shape));if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const o=Array.from(n.data.get(a.dataId).values),i=n.data.get(s.dataId).values,c=Array.from(n.data.get(r.dataId).values),[l,u,m]=rC(i,s.shape,s.dtype,o,c);return[n.makeTensorInfo(u,s.dtype,l),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function iC(e,t,n,s,a){let r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=s.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?a[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const m=t.slice();m[0]=u;const _=E(n,m.reduce(((e,t)=>e*t),1));if(0===i)return u>0&&_.fill(o),[_,m];if(u<=0)throw new Error("segment ids must be >= 0");let d=0,p=1,h=0,f=a[d];for(;;){let t=0;if(p<i){if(t=a[p],f===t){++p;continue}if(f>=t)throw new Error("segment ids are not increasing")}if(f<0||f>=u)throw new Error(sm(f,u));f>h&&_.fill(o,h*l,f*l);for(let n=d;n<p;++n){const t=s[n];if(t<0||t>=c[0])throw new Error(am(n,s[n],c[0]));for(let n=0;n<l;n++)_[f*l+n]+=e[t*l+n]}if(r)for(let e=0;e<l;e++)_[f*l+e]/=p-d;if(d=p,++p,h=f+1,f=t,p>i)break}return h<u&&_.fill(o,h*l,u*l),[_,m]}const cC={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(a.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(r.shape));if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,[l,u]=iC(o,s.shape,s.dtype,i,c,!0);return n.makeTensorInfo(u,s.dtype,l)}};const lC={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(r.shape));if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,[l,u]=iC(o,s.shape,s.dtype,i,c);return n.makeTensorInfo(u,s.dtype,l)}};const uC={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:r,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:m,outputSize:_}=gu(0,a,i),d=!1,p=n.bufferSync(a);let h;switch(r.dtype){case"bool":h=BS(p,n.bufferSync(r),i,_,u,l,c,m,Boolean(n.data.get(o.dataId).values[0]),d);break;case"float32":h=BS(p,n.bufferSync(r),i,_,u,l,c,m,n.data.get(o.dataId).values[0],d);break;case"int32":h=BS(p,n.bufferSync(r),i,_,u,l,c,m,n.data.get(o.dataId).values[0],d);break;case"string":h=BS(p,n.bufferSync(r),i,_,u,l,c,m,Vs(n.data.get(o.dataId).values[0]),d);break;default:throw new Error("Unsupported type ".concat(r.dtype))}return n.makeTensorInfo(i,h.dtype,h.values)}};const mC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:r,axis:o}=s,i=C(o,a.shape)[0],c=Ku(a,r,i),l=new Array(a.shape.length).fill(0),u=a.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const s=Hx({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,s}))}},_C=Iv((e=>Math.sqrt(e))),dC=Sv(Dn,(e=>Math.sqrt(e))),pC={kernelName:Dn,backendName:"cpu",kernelFunc:dC},hC={kernelName:Hn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:s}=t,a=n;xv(s,"square");const r=a.data.get(s.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const e=r[i];o[i]=e*e}return{dataId:a.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},fC=Dv(((e,t)=>{const n=e-t;return n*n})),yC=$v(Gn,fC),wC={kernelName:Gn,backendName:"cpu",kernelFunc:yC},gC=Iv(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:a}=t;return e.replace(new RegExp(n,s?"g":""),a)})),vC=Cv(jn,gC),xC={kernelName:jn,backendName:"cpu",kernelFunc:vC},bC=Sv(is,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),kC={kernelName:is,backendName:"cpu",kernelFunc:bC};function IC(e,t,n,s){const a=Br(e,t.dtype);for(let r=0;r<a.size;r++){const e=a.indexToLoc(r),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+s[t];a.set(t.get(...o),...e)}return a}const SC={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:m,shrinkAxisMask:_}=s;xv(a,"stridedSlice");const{finalShapeSparse:d,finalShape:p,isIdentity:h,sliceDim0:y,isSimpleSlice:w,begin:g,end:v,strides:x}=Go(a.shape,r,o,i,c,l,u,m,_);let b;if(h)b=rx({inputs:{x:a},backend:n,attrs:{shape:p}});else if(y||w){f(a.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(a.shape.length)));const e=Ro(g,v,x),t=Hx({inputs:{x:a},backend:n,attrs:{begin:g,size:e}});b=rx({inputs:{x:t},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(t)}else{const e=IC(d,n.bufferSync(a),x,g);b=n.makeTensorInfo(p,e.dtype,e.values)}return b}};class CC{constructor(e,t,n,s,a,r){this.separator=Us(e),this.nGramWidths=t,this.leftPad=Us(n),this.rightPad=Us(s),this.padWidth=a,this.preserveShort=r}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,a,r){for(let o=0;o<a;++o){const i=this.getPadWidth(r),c=Math.max(0,i-o),l=Math.max(0,i-(a-(o+1))),u=r-(c+l),m=t+(c>0?0:o-i);let _=0;_+=c*this.leftPad.length;for(let t=0;t<u;++t)_+=e[m+t].length;_+=l*this.rightPad.length;_+=(c+l+u-1)*this.separator.length,n[s+o]=new Uint8Array(_);const d=n[s+o];let p=0;const h=e=>e.forEach((e=>d[p++]=e));for(let e=0;e<c;++e)h(this.leftPad),h(this.separator);for(let t=0;t<u-1;++t)h(e[m+t]),h(this.separator);if(u>0){h(e[m+u-1]);for(let e=0;e<l;++e)h(this.separator),h(this.rightPad)}else{for(let e=0;e<l-1;++e)h(this.rightPad),h(this.separator);h(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let a=1;a<s;++a){let s=t[a]>=e;if(s=s&&t[a]<=n,!s)throw new Error("Invalid split value ".concat(t[a],", must be in [").concat(e,", ").concat(n,"]"));e=t[a]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const a=s-1,r=E("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=a;++t)r[t]=0;return[e,r]}r[0]=0;for(let i=1;i<=a;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),r[i]=r[i-1]+n}const o=new Array(r[a]);for(let i=0;i<a;++i){const n=t[i];let s=r[i];if(this.nGramWidths.forEach((a=>{const r=t[i+1]-t[i],c=this.getNumNGrams(r,a);this.createNGrams(e,n,o,s,c,a),s+=c})),this.preserveShort&&s===r[i]){const a=t[i+1]-t[i];if(0===a)continue;const r=a+2*this.padWidth,c=1;this.createNGrams(e,n,o,s,c,r)}}return[o,r]}}function NC(e,t,n,s,a,r,o,i){return new CC(n,s,a,r,o,i).compute(e,t)}const TC={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:a,nGramWidths:r,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=s,{data:u,dataSplits:m}=t,_=n.data.get(u.dataId).values,d=n.data.get(m.dataId).values,[p,h]=NC(_,d,a,r,o,i,c,l);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(m.shape,"int32",h)]}};function EC(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let r=e.indexOf(a);for(;-1!==r;){const t=e.subarray(0,r);n&&0===t.length||s.push(t),r=(e=e.subarray(r+1)).indexOf(a)}return void(n&&0===e.length||s.push(e))}let a=0;for(let r=0;r<e.length+1;r++)if(r===e.length||-1!==t.indexOf(e[r])){const t=e.subarray(a,r);n&&0===t.length||s.push(t),a=r+1}}function RC(e,t,n){const s=e.length,a=[];let r=0,o=0;const i=new Array(s);for(let _=0;_<s;++_){const s=a.length;EC(e[_],t,n,a);const c=a.length-s;i[_]=c,r+=c,o=Math.max(o,c)}const c=E("int32",2*r),l=new Array(r),u=[s,o];let m=0;for(let _=0;_<s;++_)for(let e=0;e<i[_];++e)c[2*m]=_,c[2*m+1]=e,l[m]=a[m],++m;return[c,l,u]}const AC={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:a}=s,{input:r,delimiter:o}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,m]=RC(i,c,a),_=u.length;return[n.makeTensorInfo([_,2],"int32",l),n.makeTensorInfo([_],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(m))]}};function FC(e,t){const n=E("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Bs(e[s]).modulo(t).getLowBitsUnsigned();return n}const DC={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:a}=s,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=FC(n.data.get(r.dataId).values,a);return n.makeTensorInfo(r.shape,"int32",o)}},MC=Sv(Jn,(e=>Math.tan(e))),OC={kernelName:Jn,backendName:"cpu",kernelFunc:MC},LC=Sv(Zn,(e=>Math.tanh(e)));const BC={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:s,indices:a,updates:r}=t,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=gu(0,a,s.shape),m=n.bufferSync(a),_=n.bufferSync(r),d=n.bufferSync(s),p=BS(m,_,s.shape,u,c,i,o,l,d,!1);return n.makeTensorInfo(s.shape,p.dtype,p.values)}};function zC(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const s=Br(n,e.dtype);for(let a=0;a<s.values.length;++a){const t=s.indexToLoc(a),n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=t[s]%e.shape[s];const r=e.locToIndex(n);s.values[a]=e.values[r]}return s}const PC={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:r}=s;xv(a,"tile");const o=zC(n.bufferSync(a),r);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},WC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function UC(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;s>n;){if(s-n>600){const a=s-n+1,r=t-n+1,o=Math.log(a),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(a-i)/a)*Math.sign(r-a/2);UC(e,t,Math.max(n,Math.floor(t-r*i/a+c)),Math.min(s,Math.floor(t+(a-r)*i/a+c)))}const a=e[t];let r=n,o=s;for(h(e,n,t),WC(e[s],a)>0&&h(e,n,s);r<o;){for(h(e,r,o),r++,o--;WC(e[r],a)<0;)r+=1;for(;WC(e[o],a)>0;)o-=1}0===WC(e[n],a)?h(e,n,o):(o+=1,h(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function VC(e,t,n,s,a){const r=t[t.length-1],[o,i]=[e.length/r,r],c=T(n,o*s),l=T("int32",o*s);for(let m=0;m<o;m++){const t=m*i,n=e.subarray(t,t+i);let r=new Array(n.length);n.forEach(((e,t)=>r[t]={value:e,index:t})),s<r.length&&(UC(r,s),r=r.slice(0,s)),a&&r.sort(WC);const o=m*s,u=c.subarray(o,o+s),_=l.subarray(o,o+s);for(let e=0;e<s;e++)u[e]=r[e].value,_[e]=r[e].index}const u=t.slice();return u[u.length-1]=s,[Br(u,n,c),Br(u,"int32",l)]}const GC={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:r,sorted:o}=s;xv(a,"topk");const i=n.data.get(a.dataId).values,[c,l]=VC(i,a.shape,a.dtype,r,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const HC={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:a,transforms:r}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,m,_,d]=a.shape,[p,h]=null!=l?l:[m,_],f=[u,p,h,d],y=B(a.shape),w=y[0],v=y[1],x=y[2],b=B(f),k=b[0],I=b[1],S=b[2],C=T(a.dtype,g(f));C.fill(c);const N=s.data.get(a.dataId).values,E=s.data.get(r.dataId).values;for(let g=0;g<u;++g){const e=1===r.shape[0]?E:E.subarray(8*g,8*g+8);for(let t=0;t<p;++t)for(let n=0;n<h;++n)for(let s=0;s<d;++s){let a;const r=e[6]*n+e[7]*t+1;if(0===r)continue;const l=(e[0]*n+e[1]*t+e[2])/r,u=(e[3]*n+e[4]*t+e[5])/r,d=jC(l,_,i),p=jC(u,m,i);switch(o){case"nearest":a=qC(N,m,_,w,v,x,g,p,d,s,c);break;case"bilinear":a=XC(N,m,_,w,v,x,g,p,d,s,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}C[g*k+t*I+n*S+s]=a}return s.makeTensorInfo(f,a.dtype,C)}return{dataId:s.write(C,f,a.dtype),shape:a.shape,dtype:a.dtype}}};function jC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return d(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return d(0,n,t-1)}(e,t);case"nearest":return function(e,t){return d(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function KC(e,t,n,s,a,r,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*s+i*a+c*r+l]:u}function qC(e,t,n,s,a,r,o,i,c,l,u){return KC(e,t,n,s,a,r,o,Math.round(i),Math.round(c),l,u)}function XC(e,t,n,s,a,r,o,i,c,l,u){const m=Math.floor(i),_=Math.floor(c),d=m+1,p=_+1;return(d-i)*((p-c)*KC(e,t,n,s,a,r,o,m,_,l,u)+(c-_)*KC(e,t,n,s,a,r,o,m,p,l,u))+(i-m)*((p-c)*KC(e,t,n,s,a,r,o,d,_,l,u)+(c-_)*KC(e,t,n,s,a,r,o,d,p,l,u))}function YC(e,t,n,s){const a=C(t,n)[0],r=[1,n[0],1];for(let p=0;p<a;p++)r[0]*=n[p];r[1]=n[a];for(let p=a+1;p<n.length;p++)r[2]*=n[p];const o=new Map,i=new Int32Array(n[a]),c=new na(r,s,e),l=[],u=1===r[0]&&1===r[2];for(let p=0;p<n[a];p++){let t;if(u)t=e[p].toString();else{const e=[];for(let t=0;t<r[0];t++)for(let n=0;n<r[2];n++)e.push(c.get(t,p,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[p]=n;else{const e=o.size;o.set(t,e),i[p]=e,l.push(p)}}const m=r.slice();m[1]=o.size;const _=new na(m,s);l.forEach(((e,t)=>{for(let n=0;n<r[0];n++)for(let s=0;s<r[2];s++)_.set(c.get(n,e,s),n,t,s)}));const d=n.slice();return d[a]=m[1],{outputValues:_.values,outputShape:d,indices:i}}const QC={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:a}=n,{x:r}=t;xv(r,"unique");const o=s.data.get(r.dataId).values,{outputValues:i,outputShape:c,indices:l}=YC(o,a,r.shape,r.dtype);return[s.makeTensorInfo(c,r.dtype,i),s.makeTensorInfo([l.length],"int32",l)]}};const JC={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const o=a.shape.length,i=a.shape[r],c=new Array(o-1);let l=0;for(let d=0;d<o;d++)d!==r&&(c[l++]=a.shape[d]);const u=new Array(o).fill(0),m=a.shape.slice();m[r]=1;const _=new Array(i);for(let d=0;d<_.length;d++){u[r]=d;const e=Hx({inputs:{x:a},backend:n,attrs:{begin:u,size:m}});_[d]=rx({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return _}};const ZC={kernelName:rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:r}=t,{numSegments:o}=s;xv(a,"unsortedSegmentSum");const i=[],c=[],l=a.shape.length-r.shape.length;let u=r;for(let _=0;_<l;++_){const e=sk({inputs:{input:u},backend:n,attrs:{dim:_+1}});u=e,c.push(e)}for(let _=0;_<o;++_){const e=zs(_,"int32"),t=n.makeTensorInfo([],"int32",e),s=Hb({inputs:{a:t,b:u},backend:n}),r=Jv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=Bb({inputs:{a:r,b:a},backend:n}),l=Pb({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(s),c.push(r),c.push(o),c.push(l)}const m=eS({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},$C=[lx,mx,dx,hx,ax,fx,vx,xx,bx,kx,Sx,Nx,Ex,Fx,Mx,zx,Px,Wx,Ux,cx,Vx,Kx,Yx,Jx,Zx,Zv,tb,sb,Kv,ab,lb,mb,_b,db,pb,hb,fb,wb,vb,xb,bb,kb,Ib,Sb,Nb,Tb,Eb,Rb,Ab,Fb,Db,Mb,Ub,Tv,Vb,jb,$b,nk,ak,ik,wk,vk,xk,Ik,Nk,Tk,Ek,Ak,Dk,Lk,Pk,Rv,Wk,ib,Vk,Hk,Kk,Fv,Yk,Zk,eI,sI,rI,cI,uI,dI,pI,hI,wI,xI,bI,kI,II,SI,CI,NI,TI,AI,FI,OI,zI,zb,WI,VI,HI,KI,YI,QI,$I,tS,nS,rS,Lv,iS,_S,hS,xS,kS,Yv,uk,SS,zv,Wv,ox,CS,NS,TS,ES,RS,AS,DS,LS,zS,US,VS,KS,Gv,XS,QS,ZS,jx,BI,tC,nC,aC,oC,cC,lC,uC,mC,pC,hC,wC,xC,kC,SC,TC,AC,DC,pk,Wb,OC,{kernelName:Zn,backendName:"cpu",kernelFunc:LC},BC,PC,GC,HC,gx,QC,JC,ZC,ZI];for(const n of $C)vs(n);const eN={},tN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function nN(e,t){if(!(e in eN)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Q().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete eN[e]}),!1),Q().getBool("SOFTWARE_WEBGL_ENABLED")&&(tN.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",tN)||n.getContext("experimental-webgl",tN);return n.getContext("webgl2",tN)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;eN[e]=n}const n=eN[e];return null==n||n.isContextLost()?(delete eN[e],nN(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),eN[e])}var sN,aN,rN;function oN(e,t){return[t,e]}function iN(e){const t=g(e);return b(Math.ceil(t/4))}function cN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function lN(e,t){const n=e;let s,a,r,o,i,c,l,u,m,_;return 2===Q().getNumber("WEBGL_VERSION")?(s=n.R32F,a=n.R16F,r=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,m=n.HALF_FLOAT,_=n.FLOAT,c=n.RGBA8):(s=e.RGBA,a=e.RGBA,r=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,m=null!=t?t.HALF_FLOAT_OES:null,_=e.FLOAT,c=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:m,textureTypeFloat:_}}function uN(e,t){const n=t();return Q().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(sN||(sN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(aN||(aN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(rN||(rN={}));function mN(e){return!!(Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function _N(e,t){return xN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const dN=/ERROR: [0-9]+:([0-9]+):/g;function pN(e,t){const n=dN.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const s=+n[1],a=e.split("\n"),r=a.length.toString().length+2,o=a.map(((e,t)=>k((t+1).toString(),r)+e));let i=0;for(let m=0;m<o.length;m++)i=Math.max(o[m].length,i);const c=o.slice(0,s-1),l=o.slice(s-1,s),u=o.slice(s);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(k(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function hN(e,t){if(uN(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function fN(e,t,n,s,a,r,o){const i=e.getAttribLocation(t,n);return-1!==i&&(uN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),uN(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,r,o))),uN(e,(()=>e.enableVertexAttribArray(i))),!0)}function yN(e,t,n,s){uN(e,(()=>function(e,t,n){bN(e,n),uN(e,(()=>e.activeTexture(e.TEXTURE0+n))),uN(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),uN(e,(()=>e.uniform1i(n,s)))}function wN(e,t,n){uN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),uN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function gN(e,t){uN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),uN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function vN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function xN(e,t,n){const s=uN(e,(()=>t()));if(null==s)throw new Error(n);return s}function bN(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function kN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return g(e.slice(0,e.length-t))}function IN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function SN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[kN(e),...IN(e)]),t}function CN(e){return e%2===0}function NN(e,t){if(v(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s)return!0;if(CN(n)&&CN(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&CN(e[0])&&CN(t[0])}let TN,EN;function RN(e,t){return null!=e.getExtension(t)}function AN(e){try{if(null!=nN(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function FN(e){if(0===e)return!1;const t=nN(e);if(1!==e){if(RN(t,"EXT_color_buffer_float"))return DN(t);const e="EXT_color_buffer_half_float";if(RN(t,e)){const n=t.getExtension(e);return function(e,t){const n=lN(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const a=1,r=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,r,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!RN(t,"OES_texture_float"))return!1;if(!RN(t,"WEBGL_color_buffer_float"))return!1;return DN(t)}function DN(e){const t=lN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),a}function MN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&f("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const ON=Q();function LN(){let e,t,n,s,a,r,o,i,c,l;return 2===Q().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",r="outputColor",o="out vec4 outputColor;",i=Q().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",r="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:r,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function BN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const s=B(t);return s.map(((t,a)=>{const r="int ".concat(e[a]," = ").concat(n," / ").concat(t),o=a===s.length-1?"int ".concat(e[a+1]," = ").concat(n," - ").concat(e[a]," * ").concat(t):"index -= ".concat(e[a]," * ").concat(t);return"".concat(r,"; ").concat(o,";")})).join("")}function zN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const s=B(t);return s.map(((t,a)=>{const r="int ".concat(e[a]," = ").concat(n," / outShapeStrides[").concat(a,"]"),o=a===s.length-1?"int ".concat(e[a+1]," = ").concat(n," - ").concat(e[a]," * outShapeStrides[").concat(a,"]"):"index -= ".concat(e[a]," * outShapeStrides[").concat(a,"]");return"".concat(r,"; ").concat(o,";")})).join("")}function PN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const s=function(e,t){const n=e.length,s=e.map((e=>"".concat(t,"[").concat(e,"]"))),a=new Array(n-1);a[n-2]=s[n-1];for(let r=n-3;r>=0;--r)a[r]="(".concat(a[r+1]," * ").concat(s[r+1],")");return a}(e.map(((e,t)=>t)),t);return s.map(((t,a)=>{const r="int ".concat(e[a]," = ").concat(n," / ").concat(s[a]),o=a===s.length-1?"int ".concat(e[a+1]," = ").concat(n," - ").concat(e[a]," * ").concat(s[a]):"index -= ".concat(e[a]," * ").concat(s[a]);return"".concat(r,"; ").concat(o,";")})).join("")}function WN(e){const t=B(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}ON.registerFlag("HAS_WEBGL",(()=>ON.getNumber("WEBGL_VERSION")>0)),ON.registerFlag("WEBGL_VERSION",(()=>AN(2)?2:AN(1)?1:0)),ON.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),ON.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===ON.get("WEBGL_VERSION"))),ON.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),ON.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),ON.registerFlag("WEBGL_PACK",(()=>ON.getBool("HAS_WEBGL"))),ON.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_CLIP",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_REDUCE",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_LAZILY_UNPACK",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_CONV_IM2COL",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>ON.getBool("WEBGL_PACK"))),ON.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==TN){const t=nN(e);TN=t.getParameter(t.MAX_TEXTURE_SIZE)}return TN}(ON.getNumber("WEBGL_VERSION")))),ON.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==EN){const t=nN(e);EN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,EN)}(ON.getNumber("WEBGL_VERSION")))),ON.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=ON.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=nN(e);return t=RN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:RN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),ON.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>ON.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ra())),ON.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=nN(e);if(1===e){if(!RN(t,"OES_texture_float"))return!1}else if(!RN(t,"EXT_color_buffer_float"))return!1;return DN(t)}(ON.getNumber("WEBGL_VERSION")))),ON.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!ON.getBool("WEBGL_FORCE_F16_TEXTURES")&&ON.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),ON.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>FN(ON.getNumber("WEBGL_VERSION")))),ON.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=ON.getNumber("WEBGL_VERSION"))&&null!=nN(e).fenceSync;var e})),ON.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>ON.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),ON.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),ON.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ra()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),ON.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),ON.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),ON.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),ON.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),ON.registerFlag("WEBGL_EXP_CONV",(()=>!1)),ON.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>ON.getBool("IS_TEST"))),ON.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),ON.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),ON.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),ON.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const UN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:VN}=s;function GN(e,t,n){const s=[];if(e.forEach((e=>{const t=g(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(s.push("uniform sampler2D ".concat(e.name,";")),s.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=$N(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push("uniform int ".concat(e.name,"Shape;"));break;case 2:s.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:s.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:s.push("uniform ivec4 ".concat(e.name,"Shape;"))}s.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const a=s.join("\n"),r=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3?arguments[3]:void 0,a="";a+=n?jN(e,s):HN(e,s);const r=e.shapeInfo.logicalShape,o=t.logicalShape;r.length<=o.length&&(a+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=VN(e.shapeInfo.logicalShape,t.logicalShape),c=ZN(o),l=o-r;let u;const m=["x","y","z","w","u","v"];u=0===r?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(m[e+l]," = 0;"))).join("\n");let _="";_=o<2&&r>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(m[t+l]))).join(", ");let d="return outputValue;";const p=1===g(e.shapeInfo.logicalShape),h=g(t.logicalShape),f=1===h;if(1!==r||p||f){if(p&&!f)d=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=r-2,t=r-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?d="return vec4(outputValue.x);":i.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(a,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(s,"(").concat(_,");\n      ").concat(d,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&v(o,r))return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=ZN(c),u=VN(e.shapeInfo.logicalShape,t.logicalShape),m=c-i;let _;const d=["x","y","z","w","u","v"];_=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(d[e+m]," = 0;"))).join("\n");let p="";p=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(d[t+m]))).join(", ");return"\n    float ".concat(a,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(_,"\n      return get").concat(s,"(").concat(p,");\n    }\n  ")}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=LN(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,m=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(KN,"\n    ").concat(qN,"\n    ").concat(XN,"\n  ");return t}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===s[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(s[1],".0);\n      }\n    ");if(1===s[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(s[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(s[0],", ").concat(s[1],"));\n      return 2 * (resTexRC.x * ").concat(s[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(s[0],", ").concat(s[1],"));\n      }\n    ");const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(s[0],", ").concat(s[1],"));\n\n      int index = resTexRC.x * ").concat(s[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),r=a*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(s[0],", ").concat(s[1],"));\n      int index = resTexRC.x * ").concat(s[1]," + resTexRC.y;\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),r=a*Math.ceil(e[e.length-2]/2);let o=r,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(s[0],", ").concat(s[1],"));\n      int index = resTexRC.x * ").concat(s[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(v(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=zN(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const s=BN(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(s,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=zN(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const s=BN(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(s,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=BN(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=BN(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(m+=YN);return[m,c,u,a,l,r,n.userCode].join("\n")}function HN(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(s,"() {return ").concat(n,";}");const[a,r]=e.shapeInfo.texShape;if(1===a&&1===r)return"\n      float ".concat(s,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=QN(n);if(t)return"\n    float ".concat(s,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(s,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int index) {\n        ").concat(JN(e),"\n      }\n    ");const a=e.shapeInfo.texShape,r=a[0],o=a[1];if(1===o&&1===r)return"\n      float ".concat(s,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=QN(n);if(1===o)return t?"\n      float ".concat(s,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(s,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(r,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===r)return t?"\n      float ".concat(s,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(s,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(s,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(s,"(int index) {\n      vec2 uv = uvFromFlat(").concat(r,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e.shapeInfo.texShape;if(null!=r&&v(n,r)){if(t)return"\n      float ".concat(a,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(s,"TexShape[1], ").concat(s,"TexShape[0]);\n        return sampleTexture(").concat(s,", uv);\n      }\n    ");const e=r[0],n=r[1];return"\n    float ".concat(a,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(s,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=N(n),c=o;if(c.length<n.length){const n=eT(e,c),s=["row","col"];return"\n      ".concat(HN(n,t),"\n      float ").concat(a,"(int row, int col) {\n        return ").concat(a,"(").concat(tT(s,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(JN(e),"\n      }\n    ");const l=r[0],u=r[1],m=QN(s);if(1===u)return t?"\n      float ".concat(a,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(m,"), vec3(").concat(s,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(s,"TexShape[0]));\n        return sampleTexture(").concat(s,", uv);\n      }\n    "):"\n    float ".concat(a,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(m,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(s,", uv);\n    }\n  ");if(1===l)return t?"\n      float ".concat(a,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(m,"), vec3(").concat(s,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(s,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(s,", uv);\n      }\n    "):"\n    float ".concat(a,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(m,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(s,", uv);\n    }\n  ");if(t)return"\n      float ".concat(a,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s,"Shape[1] + col + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(s,"TexShape[0], ").concat(s,"TexShape[1], index);\n        return sampleTexture(").concat(s,", uv);\n      }\n    ");return"\n  float ".concat(a,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(m,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(s,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=N(n),l=i;if(l.length<n.length){const n=eT(e,l),s=["row","col","depth"];return"\n        ".concat(HN(n,t),"\n        float ").concat(a,"(int row, int col, int depth) {\n          return ").concat(a,"(").concat(tT(s,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(r,", ").concat(o,", 1)));\n        ").concat(JN(e),"\n      }\n    ");const u=e.shapeInfo.texShape,m=u[0],_=u[1],d=e.shapeInfo.flatOffset;if(_===r&&null==d)return t?"\n      float ".concat(a,"(int row, int col, int depth) {\n        int stride1 = ").concat(s,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(s,"TexShape[1], ").concat(s,"TexShape[0]);\n        return sampleTexture(").concat(s,", uv);\n      }\n    "):"\n        float ".concat(a,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(_,".0, ").concat(m,".0);\n          return sampleTexture(").concat(s,", uv);\n        }\n      ");if(_===o&&null==d)return t?"\n      float ".concat(a,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(s,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(s,"TexShape[1], ").concat(s,"TexShape[0]);\n        return sampleTexture(").concat(s,", uv);\n      }\n    "):"\n    float ".concat(a,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(_,".0, ").concat(m,".0);\n      return sampleTexture(").concat(s,", uv);\n    }\n  ");const p=QN(s);if(t)return"\n    float ".concat(a,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(s,"Shape[1] * ").concat(s,"Shape[2];\n      int stride1 = ").concat(s,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(p,";\n      vec2 uv = uvFromFlat(").concat(s,"TexShape[0], ").concat(s,"TexShape[1], index);\n      return sampleTexture(").concat(s,", uv);\n    }\n    ");return"\n      float ".concat(a,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(r," + col * ").concat(o," + depth + ").concat(p,";\n        vec2 uv = uvFromFlat(").concat(m,", ").concat(_,", index);\n        return sampleTexture(").concat(s,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[3],o=n[2]*r,i=n[1]*o,{newShape:c,keptDims:l}=N(n);if(c.length<n.length){const n=eT(e,c),s=["row","col","depth","depth2"];return"\n      ".concat(HN(n,t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2) {\n        return ").concat(a,"(").concat(tT(s,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(r,", 1)));\n        ").concat(JN(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,m=e.shapeInfo.texShape,_=m[0],d=m[1],p="int stride2 = ".concat(s,"Shape[3];"),h="int stride1 = ".concat(s,"Shape[2] * stride2;"),f="int stride0 = ".concat(s,"Shape[1] * stride1;");if(d===i&&null==u)return t?"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        ").concat(p,"\n        ").concat(h,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(s,"TexShape[1], ").concat(s,"TexShape[0]);\n        return sampleTexture(").concat(s,", uv);\n      }\n    "):"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(d,".0, ").concat(_,".0);\n        return sampleTexture(").concat(s,", uv);\n      }\n    ");if(d===r&&null==u)return t?"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(s,"Shape[1] * ").concat(s,"Shape[2], ").concat(s,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(s,"TexShape[1], ").concat(s,"TexShape[0]);\n        return sampleTexture(").concat(s,", uv);\n      }\n    "):"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(d,".0, ").concat(_,".0);\n        return sampleTexture(").concat(s,", uv);\n      }\n    ");const y=QN(s);if(t)return"\n    float ".concat(a,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(p,"\n      ").concat(h,"\n      ").concat(f,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(s,"TexShape[0], ").concat(s,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(s,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(r," + depth2;\n      vec2 uv = uvFromFlat(").concat(_,", ").concat(d,", index + ").concat(y,");\n      return sampleTexture(").concat(s,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],r=t[3]*a,o=t[2]*r,i=t[1]*o,{newShape:c,keptDims:l}=N(t);if(c.length<t.length){const t=eT(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(HN(t),"\n      float ").concat(s,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(s,"(").concat(tT(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(r,", ").concat(a,")) +\n          depth3;\n        ").concat(JN(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,m=e.shapeInfo.texShape,_=m[0],d=m[1];if(d===i&&null==u)return"\n      float ".concat(s,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(r,", ").concat(a,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(d,".0, ").concat(_,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(d===a&&null==u)return"\n      float ".concat(s,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(d,".0, ").concat(_,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const p=QN(n);return"\n    float ".concat(s,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(r," +\n          depth2 * ").concat(a," + depth3 + ").concat(p,";\n      vec2 uv = uvFromFlat(").concat(_,", ").concat(d,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:r}=N(t);if(a.length<t.length){const t=eT(e,a),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(HN(t),"\n      float ").concat(s,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(s,"(").concat(tT(n,r),");\n      }\n    ")}const o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(s,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(JN(e),"\n      }\n    ");const m=e.shapeInfo.flatOffset,_=e.shapeInfo.texShape,d=_[0],p=_[1];if(p===u&&null==m)return"\n      float ".concat(s,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===o&&null==m)return"\n      float ".concat(s,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const h=QN(n);return"\n    float ".concat(s,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(h,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function jN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=LN();return"\n    vec4 ".concat(n,"() {\n      return ").concat(s.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,r=LN();if(t)return"\n    vec4 ".concat(s,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return"\n    vec4 ".concat(s,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e.shapeInfo.texShape,o=r[0],i=r[1],c=LN();if(null!=r&&v(n,r))return t?"\n      vec4 ".concat(a,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(s,"TexShape[1], ").concat(s,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(s,", uv);\n      }\n    "):"\n      vec4 ".concat(a,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(s,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(a,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(s,"TexShape[0]) / 2.0), ceil(float(").concat(s,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(s,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(s,", uv);\n    }\n  ");const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(a,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(s,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const s=[1,2],r=eT(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(jN(r,t),"\n        vec4 ").concat(a,"(int b, int row, int col) {\n          return ").concat(a,"(").concat(tT(o,s),");\n        }\n      ")}const i=LN();if(t)return"\n    vec4 ".concat(a,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(s,"TexShape[0]) / 2.0), ceil(float(").concat(s,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(s,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(s,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(s,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),m=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(a,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(m,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(s,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=LN();if(t)return"\n    vec4 ".concat(s,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(a.texture2D,"(").concat(n,", uv);\n    }\n  ");const r=e.shapeInfo.logicalShape,o=r.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],m=Math.ceil(r[o-1]/2);let _=m*Math.ceil(r[o-2]/2),d="int b, int row, int col",p="b * ".concat(_," + (row / 2) * ").concat(m," + (col / 2)");for(let h=2;h<o-1;h++)d="int b".concat(h,", ")+d,_*=r[o-h-1],p="b".concat(h," * ").concat(_," + ")+p;return"\n    vec4 ".concat(s,"(").concat(d,") {\n      int index = ").concat(p,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(a.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const KN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",qN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",XN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function QN(e){return"offset".concat(e)}function JN(e){const t=e.name,n=g(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function ZN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function $N(e,t,n){const{newShape:s,keptDims:a}=N(t),r=t.length,o=e&&3===r&&1===t[0],i=o?t.slice(1):s,c=!e&&r>1&&!v(t,n)&&s.length<r||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:a}}function eT(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function tT(e,t){return t.map((t=>e[t])).join(", ")}function nT(e,t,n,s){const a=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),r=a.map((e=>e.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=GN(a,o,t),c=function(e,t){const n=xN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(uN(e,(()=>e.shaderSource(n,t))),uN(e,(()=>e.compileShader(n))),Q().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw pN(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return Q().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:r,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:r,outShapeInfo:o},sT(e,t,l)))}function sT(e,t,n){const s=[],a=[];let r,o,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===Q().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const m of t.variableNames){const a={name:m,uniform:e.getUniformLocation(n,m,u),offset:e.getUniformLocation(n,"offset".concat(m),u)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,"".concat(m,"Shape"),u),a.texShape=e.getUniformLocation(n,"".concat(m,"TexShape"),u)),s.push(a)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),o=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const m of t.customUniforms)a.push(e.getUniformLocation(n,m.name,u));return{variablesLocations:s,customUniformLocations:a,infLoc:c,nanLoc:l,outShapeLocation:r,outShapeStridesLocation:i,outTexShapeLocation:o}}function aT(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],r=a.shape;if(!v(s,r))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(s," and ").concat(r," must match"));if(e.isUniform&&a.isUniform)return;const o=e.texShape,i=a.isUniform?null:a.texData.texShape;if(!v(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function rT(e){return Q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class oT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=LN();this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?zN(["r","c","d"],e):BN(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class iT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=LN();this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?zN(["r","c","d"],e):BN(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class cT{constructor(e){this.variableNames=["A"],this.outTexUsage=aN.DOWNLOAD;const t=LN();this.outputShape=e,this.userCode="\n      ".concat(UN,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class lT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aN.DOWNLOAD;const t=LN();this.outputShape=e,this.userCode="\n      ".concat(UN,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const uT={R:0,G:1,B:2,A:3};class mT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=LN();this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let r="";for(let o=0;o<n.length;o++){const e=n[o];r+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(uT[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WN(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(s.texture2D,"(A, uv);\n          ").concat(r,"\n        }\n        ").concat(s.output," = vec4(").concat(a,", 0., 0., 0.);\n      }\n    ")}}class _T{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=LN();this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length);let s="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let t=0;t<=1;t++){const a=2*r+t;s+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(r," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(r,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(a,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(a,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(a,"] = values[2];\n            } else {\n              result[").concat(a,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WN(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(s,"\n\n          ").concat(n.output," = ").concat(a,";\n        }\n    ")}}function dT(e){const t=LN();return function(e,t){const n=xN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(uN(e,(()=>e.shaderSource(n,t))),uN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function pT(e){return function(e,t){const n=xN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return uN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),uN(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function hT(e){return function(e,t){const n=xN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return uN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),uN(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function fT(e,t,n,s,a,r){!function(e,t){const n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const s="[".concat(e,"x").concat(t,"]"),a="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}(t,n);const o=function(e){return xN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return uN(e,(()=>e.bindTexture(i,o))),uN(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),uN(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),uN(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),uN(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Q().getNumber("WEBGL_VERSION")?uN(e,(()=>e.texImage2D(i,0,s,t,n,0,a,r,null))):uN(e,(()=>e.texStorage2D(i,1,s,t,n))),uN(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function yT(e){return e.internalFormatFloat}function wT(e){return e.internalFormatHalfFloat}function gT(e){return e.downloadTextureFormat}function vT(e){return e.internalFormatPackedFloat}function xT(e){return e.internalFormatPackedHalfFloat}function bT(e,t,n,s,a,r,o,i){const c=e,l=new Float32Array(function(e,t){const[n,s]=cN(e,t);return n*s*4}(r,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class kT{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Q().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){eN[e]=t}(t,e)):this.gl=nN(t),e=this.gl,2===Q().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>uN(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>uN(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>uN(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>uN(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>uN(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>uN(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>uN(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>uN(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Q().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=_N(this.gl,e),RN(this.gl,t))this.textureHalfFloatExtension=_N(this.gl,t);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),RN(this.gl,s))this.colorBufferHalfFloatExtension=_N(this.gl,s);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",RN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!RN(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=pT(this.gl),this.indexBuffer=hT(this.gl),this.framebuffer=function(e){return xN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=lN(this.gl,this.textureHalfFloatExtension)}get debug(){return Q().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;uN(e,(()=>e.finish())),uN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),uN(e,(()=>e.deleteFramebuffer(this.framebuffer))),uN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),uN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),uN(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[a,r]=oN(t,n);return fT(e,a,r,yT(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[a,r]=oN(t,n);return fT(e,a,r,wT(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[a,r]=oN(t,n);return fT(e,a,r,gT(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){uN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Q().getNumber("WEBGL_VERSION")?uN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):uN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Q().getNumber("WEBGL_VERSION")?uN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):uN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),uN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,a,r){let o,i,c;uN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,c=r.internalFormatPackedFloat),o.set(a),2===Q().getNumber("WEBGL_VERSION")?uN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o))):uN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,s,0,e.RGBA,i,o))),uN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[a,r]=cN(t,n);return fT(e,a,r,xT(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[a,r]=cN(t,n);return fT(e,a,r,vT(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gN(this.gl,this.framebuffer),this.outputTexture=null),uN(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[a,r]=oN(t,n),o=new Uint8Array(t*n*4);return uN(e,(()=>e.readPixels(0,0,a,r,s.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,a,r){return bT(this.gl,e,0,0,0,a,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,a=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const a=e.createBuffer();uN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return uN(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),uN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),uN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Q().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,a=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(a,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=a}else Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return uN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=dT(t));const n=function(e){return xN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);uN(t,(()=>t.attachShader(n,this.vertexShader))),uN(t,(()=>t.attachShader(n,e))),function(e,t){if(uN(e,(()=>e.linkProgram(t))),!Q().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&hN(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;uN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){uN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),fN(e,t,"clipSpacePos",n,3,20,0)&&fN(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(uN(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&hN(this.gl,this.program),uN(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return xN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),uN(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,a]=cN(t,n);this.setOutputMatrixTextureDriver(e,s,a)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&hN(this.gl,this.program),vN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}uN(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),uN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=_N(this.gl,2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await I((()=>this.disposed||this.isQueryAvailable(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Q().platform&&(n=Q().platform.setTimeoutCustom.bind(Q().platform)),I((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),wN(this.gl,e,this.framebuffer),this.debug&&vN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(wN(this.gl,this.outputTexture,this.framebuffer),this.debug&&vN(this.gl)):gN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;wN(s,e,this.framebuffer),this.debug&&vN(s),this.outputTexture=e,uN(s,(()=>s.viewport(0,0,t,n))),uN(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),uN(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:IT,bincountImpl:ST,bincountReduceImpl:CT,bitwiseAndImpl:NT,castImpl:TT,ceilImpl:ET,concatImpl:RT,equalImpl:AT,expImpl:FT,expm1Impl:DT,floorImpl:MT,gatherNdImpl:OT,gatherV2Impl:LT,greaterImpl:BT,greaterEqualImpl:zT,lessImpl:PT,lessEqualImpl:WT,linSpaceImpl:UT,logImpl:VT,maxImpl:GT,maximumImpl:HT,minimumImpl:jT,multiplyImpl:KT,negImpl:qT,notEqualImpl:XT,prodImpl:YT,raggedGatherImpl:QT,raggedRangeImpl:JT,raggedTensorToTensorImpl:ZT,rangeImpl:$T,rsqrtImpl:eE,scatterImpl:tE,sigmoidImpl:nE,simpleAbsImpl:sE,sliceImpl:aE,sparseFillEmptyRowsImpl:rE,sparseReshapeImpl:oE,sparseSegmentReductionImpl:iE,sqrtImpl:cE,staticRegexReplaceImpl:lE,stridedSliceImpl:uE,stringNGramsImpl:mE,stringSplitImpl:_E,stringToHashBucketFastImpl:dE,subImpl:pE,tileImpl:hE,topKImpl:fE,transposeImpl:yE,uniqueImpl:wE}=a;function gE(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function vE(e,t){return 1===t?[e]:gE(e,t)}class xE{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=rT(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=vE("rc",this.rank),t=ZN(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),a=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(s,"\n\n            setOutput(vec4(").concat(a,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let a="".concat(0===n?"r":"rp1",", ").concat(0===s?"c":"cp1");for(let t=2;t<this.rank;t++)a="".concat(e[e.length-1-t],",")+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],s=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(s,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class bE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(s>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(s,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(s>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?PN(["r","c","d"],"inputShape"):BN(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WN(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class kE{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=SE(t,n),a=CE(e,s,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const r=IE(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let o;return s===rN.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===rN.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===rN.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===rN.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===rN.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),o}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=SE(n,s),r=CE(t,a,s);r in this.freeTextures||(this.freeTextures[r]=[]);const o=IE(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Q().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[r].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[r],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function IE(e,t,n,s,a){const r=function(e,t){switch(e){case rN.PACKED_2X2_FLOAT32:return vT(t);case rN.PACKED_2X2_FLOAT16:return xT(t);case rN.UNPACKED_FLOAT32:return yT(t);case rN.UNPACKED_FLOAT16:return wT(t);case rN.PACKED_4X1_UNSIGNED_BYTE:return gT(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,s);let o;if(a){const[t,n]=cN(e[0],e[1]);o=t*n}else{const[t,n]=oN(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,r);return o*i}function SE(e,t){if(e===aN.UPLOAD)return rN.PACKED_2X2_FLOAT32;if(e===aN.RENDER||null==e)return function(e){return Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?rN.PACKED_2X2_FLOAT32:rN.UNPACKED_FLOAT32:e?rN.PACKED_2X2_FLOAT16:rN.UNPACKED_FLOAT16}(t);if(e===aN.DOWNLOAD||e===aN.PIXELS)return rN.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function CE(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class NE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const TE="if (isnan(x)) return x;",EE="return x;",RE="return abs(x);";const AE="return (x >= 0.0) ? x : (exp(x) - 1.0);",FE=TE+"\n  return (x < 0.0) ? 0.0 : x;\n",DE=TE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ME="return x;",OE="return 1.0 / (1.0 + exp(-1.0 * x));",LE="return x;",BE="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",zE="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",PE="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",WE="return 1.0 / (1.0 + exp(-1.0 * x));";class UE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class VE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length);const t=e.length,n=vE("rc",t),s=ZN(t),a=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),r=n.slice(-2),o=t<=1?"rc":"vec2(".concat(r.join(","),")");this.userCode="\n      void main() {\n        ".concat(s," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(a,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const GE=um,HE={};const jE=Q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class KE extends u{nextDataId(){return KE.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof kT)t=e;else{const n=nN(Q().getNumber("WEBGL_VERSION"),e);t=new kT(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=nN(Q().getNumber("WEBGL_VERSION"));t=new kT(e),this.binaryCache=((n=Q().getNumber("WEBGL_VERSION"))in HE||(HE[n]={}),HE[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new kE(this.gpgpu),this.numMBBeforeWarning=null==Q().global.screen?1024:Q().global.screen.height*Q().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new l(this,Ha())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,a,r){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[s,a]},i.texShape=[s,a];const c=SN(t),l=new mT(c,!1,r),u=this.runWebGLProgram(l,[o],n,[[s,a]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if((Q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Q().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:aN.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,s,a){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:aN.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:r,shape:o,isPacked:i}=t;if(null!=r){let t;t=i?new UE(o,ME):new NE(o,ME);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=Ws()),"complex64"===s){u=Tu(this.readSync(a.real.dataId),this.readSync(a.imag.dataId))}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Ws()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:r,complexTensorInfos:o,isPacked:i}=t;if(null!=a){let t;t=i?new UE(s,ME):new NE(s,ME);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Q().getBool("DEBUG")&&!Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==r&&Q().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...iN(s))}if(this.pendingRead.set(e,[]),"complex64"!==r&&await this.gpgpu.createAndWaitForFence(),"complex64"===r){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Tu(e[0],e[1])}else if(null==u)l=this.getValuesFromTexture(e);else{const e=g(s);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;uN(e,(()=>e.deleteBuffer(u)))}const m=this.convertAndCacheOnCPU(e,l),_=this.pendingRead.get(e);return this.pendingRead.delete(e),_.forEach((e=>e(m))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ha().removeDataId(e,this),this.pendingDeletes--),m}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:s,shape:a,slice:r,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=r){let n;n=i?new UE(a,ME):new NE(a,ME);const s=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:o}],o),r=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),r}if(null==c)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=Ha().makeTensorFromTensorInfo(l),m=this.texData.get(l.dataId);return Object.assign({tensorRef:u},m.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Vs(e)));return Br(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Br(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!mN(n)){if(Q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=g(t);if(Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...iN(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),r}const r=Q().getBool("WEBGL_PACK")&&!0===s,o=r?SN(t):t,i=r?new lT(o):new cT(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=Hs(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),r=Hs(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:r[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ws(),endMs:null}}endTimer(e){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ws(),e)}async getQueryTime(e){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:a,isPacked:r,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,a,r)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:jE;return Q().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&g(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ds("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return GE(e.shape,t)}packedUnaryOp(e,t,n){const s=new UE(e.shape,t),a=this.compileAndRun(s,[e],n);return Ha().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=sE(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,RE,e.dtype);const t=new NE(e.shape,RE),n=this.compileAndRun(t,[e]);return Ha().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&F(n[0])){const a=n.map((e=>Us(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return Ha().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new VE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new xE(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[kN(e.shape),...IN(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},a=[kN(t),...IN(t)],r=new bE(a,n),o=[n],i=this.runWebGLProgram(r,[s],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:a,dtype:r}=n;if(null!=t){f(g(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=SN(a);let i;i=s?new iT(o):new oT(o);const c=[null!=t?t:iN(o)];return{dtype:r,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:r,dataId:e}],r,c,!0,t).dataId}}runWebGLProgram(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===sN.DENSE){const t=null!=r?r:iN(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===g(o.shape))return i.values=T(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&g(t.shape)<=Q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!NN(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),c.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},m=function(e,t,n){let s="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const r=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=$N(e.packedInputs,t.shape,r);let l="",u="",m="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=B(i);m="".concat(e[0]===r[1],"_").concat(e[e.length-1]===r[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const _=t.shape.length,d=2===i.length&&v(t.shape,r),p=1===g(t.shape),h=co(t.shape,n.shape),f=!e.packedInputs&&_===n.shape.length&&v(r,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(r[0]>1,"_").concat(r[1]>1);s+="".concat(_,"_").concat(f,"_").concat(o?c:"","_").concat(i.length,"_").concat(p,"_").concat(h,"_").concat(d,"_").concat(l,"_").concat(u,"_").concat(m,"_").concat(y,"_").concat(a)}else{const e=t.isUniform?"uniform":t.texData.texShape;s+="".concat(t.shape,"_").concat(e,"_").concat(a)}}));const a=e.userCode;let r=e.constructor.name;return r+="_"+s+"_"+a+"".concat(Q().getNumber("WEBGL_VERSION")),r}(e,l,u),_=this.getAndSaveBinary(m,(()=>nT(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),Q().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,a){t.program.enableShapeUniforms||(aT(t.inShapeInfos,n),aT([t.outShapeInfo],[s]));const r=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):e.setOutputMatrixTexture(r.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Q().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const s=n[c],{uniform:a,offset:r,shape:o,texShape:i}=t.variablesLocations[c];if(o){const{uniformShape:n}=$N(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(g(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=r&&e.gl.uniform1i(r,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,c)}const i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=B(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],s=t.customUniformLocations[c],r=a[c];if("float"===n.type)e.gl.uniform1fv(s,r);else if("vec2"===n.type)e.gl.uniform2fv(s,r);else if("vec3"===n.type)e.gl.uniform3fv(s,r);else if("vec4"===n.type)e.gl.uniform4fv(s,r);else if("int"===n.type)e.gl.uniform1iv(s,r);else if("ivec2"===n.type)e.gl.uniform2iv(s,r);else if("ivec3"===n.type)e.gl.uniform3iv(s,r);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(s,r)}}e.executeProgram()}(this.gpgpu,_,l,u,s),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const h=Q().getNumber("WEBGL_FLUSH_THRESHOLD");if(h>0){const e=Ws();e-this.lastGlFlushTime>h&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Q().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,s){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,s,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Q().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ka((()=>{if(!Q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Q().getBool("DEBUG");Q().set("DEBUG",!1);const t=this.abs(Xr(1e-8)).dataSync()[0];if(Q().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:r,usage:o,isPacked:i}=t;if(null!=r)return;const c=null!=this.activeTimers;let l;c&&(l=Ws());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=Q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&Q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?p(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=N(e);e=t.newShape}let a=g(e),r=null;e.length<=1&&a<=n?r=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?r=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?r=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?r=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?r=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(r=[e[0],e[1]*e[2]*e[3]]);const o=null!=r&&Math.max(...r)>s&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(null==r||o)if(t){const t=kN(e);let n=2,s=2;e.length&&([n,s]=IN(e)),a=t*(n/2)*(s/2),r=b(a).map((e=>2*e))}else r=b(a);return r}(n,i),t.texShape=u),null!=a){const e=SN(n);let r,o=u[1],m=u[0];const _=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!i&&_||([o,m]=cN(u[0],u[1])),r=i?new _T(e,_):new mT(e,_);const d=_?[m,o]:u,p=this.makeTensorInfo(d,s),h=this.texData.get(p.dataId);h.usage=_?aN.PIXELS:aN.UPLOAD,h.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),o,m,a);const f=[[m,o]],y=!0,w=this.runWebGLProgram(r,[p],s,f,y),g=this.texData.get(w.dataId);t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,Q().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=g.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(p),c&&(this.uploadWaitMs+=Ws()-l)}else{const e=this.acquireTexture(u,o,s,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*A(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await eu(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw pN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:a,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}=sT(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=a,e.outShapeLocation=r,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:a,width:r,channels:o}=e,i=Ha().backend;if(!i.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(s,t,n,a,r,o);return Ha().makeTensorFromDataId(c,t,n,i)}}KE.nextDataId=0;Aa()&&Ya("webgl",(()=>new KE),2);const qE="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class XE{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=uo(t,n),this.enableShapeUniforms=rT(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const YE="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class QE{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=uo(t,n);const a=this.outputShape.length;this.enableShapeUniforms=rT(a);let r="";if(s)if(0===a||1===g(this.outputShape))r="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=ZN(a);if(r="\n          ".concat(e," coords = getOutputCoords();\n        "),1===a)this.enableShapeUniforms?r+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":r+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=vE("coords",a);this.enableShapeUniforms?r+="\n            bool nextRowOutOfBounds =\n              (".concat(e[a-2]," + 1) >= outShape[").concat(a," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[a-1]," + 1) >= outShape[").concat(a," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):r+="\n            bool nextRowOutOfBounds =\n              (".concat(e[a-2]," + 1) >= ").concat(this.outputShape[a-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[a-1]," + 1) >= ").concat(this.outputShape[a-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(r,"\n\n        setOutput(result);\n      }\n    ")}}function JE(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const ZE={kernelName:ft,backendName:"webgl",kernelFunc:JE};function $E(e){const{inputs:t,backend:n}=e,{real:s,imag:a}=t,r=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(r.dataId),i=JE({inputs:{x:s},backend:n}),c=JE({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:c},r}const eR={kernelName:Ne,backendName:"webgl",kernelFunc:$E},tR="return (a < 0.) ? b * a : a;",nR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const sR={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:r}=s,o=n.makeTensorInfo([],"float32",zs(r,"float32")),i=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QE(nR,a.shape,o.shape):new XE(tR,a.shape,o.shape),c=n.runWebGLProgram(i,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},aR="return (a < 0.) ? b * a : a;",rR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const oR={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t,r=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QE(rR,s.shape,a.shape):new XE(aR,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],"float32")}},iR="if (isnan(x)) return x;";function cR(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:s,dtype:a}=e;return e=>{let{inputs:r,backend:o}=e;const{x:i}=r,c=o,l=a||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=s){const e=c.texData.get(i.dataId),t=s(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new UE(i.shape,n):new NE(i.shape,t),c.runWebGLProgram(u,[i],l)}}function lR(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:s=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:o}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,m=c;if(a&&"complex64"===l.dtype){const e=m.texData.get(l.dataId),n=m.texData.get(u.dataId),[s,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},r={dataId:s.dataId,dtype:s.dtype,shape:u.shape},o=new XE(t,l.shape,u.shape);return m.runWebGLProgram(o,[a,r],ha(n.dtype,s.dtype))})),r=$E({inputs:{real:s,imag:a},backend:m});return m.disposeIntermediateTensorInfo(s),m.disposeIntermediateTensorInfo(a),r}const _=o||ha(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||m.shouldExecuteOnCPU([l,u]))&&null!=r){const e=m.texData.get(l.dataId).values,t=m.texData.get(u.dataId).values,n="string"===l.dtype?cm(e):e,s="string"===l.dtype?cm(t):t,[a,o]=r(l.shape,u.shape,n,s,_),i=m.makeTensorInfo(o,_);return m.texData.get(i.dataId).values=a,i}let d;return d=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new QE(n,l.shape,u.shape,s):new XE(t,l.shape,u.shape),m.runWebGLProgram(d,[l,u],_)}}function uR(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?LE:EE;if("relu"===e)return t?zE:FE;if("elu"===e)return t?BE:AE;if("relu6"===e)return t?PE:DE;if("prelu"===e)return t?rR:aR;if("leakyrelu"===e)return t?nR:tR;if("sigmoid"===e)return t?WE:OE;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class mR{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=rT(this.outputShape.length);const l=s?e[1]:e[2],u=Math.ceil(l/2),m=s?"i * 2, rc.y":"rc.y, i * 2",_=a?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let h="",f="";o&&(h=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),f="result = activation(result);");const y=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",g="rc.x";e[0]<t[0]?w="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(g="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(h,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(w,";\n        int batchB = ").concat(g,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(m,");\n          vec4 b = getMatrixB(batchB, ").concat(_,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(d[0]," * ").concat(p[0],");\n          result += (").concat(d[1]," * ").concat(p[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(f,"\n\n        setOutput(result);\n      }\n    ")}}const _R={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class dR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=uo(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const pR="return a * b;";function hR(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,r=ha(s.dtype,a.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),r=new dR(_R.REAL,s.shape,a.shape),o=new dR(_R.IMAG,s.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],c=n.runWebGLProgram(r,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=$E({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([s,a])){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),[o,i]=KT(s.shape,a.shape,e.values,t.values,r),c=n.makeTensorInfo(i,r);return n.texData.get(c.dataId).values=o,c}let o;return o=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QE(pR,s.shape,a.shape):new XE(pR,s.shape,a.shape),n.runWebGLProgram(o,[s,a],r)}const fR={kernelName:Kt,backendName:"webgl",kernelFunc:hR};function yR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:r}=s,o=n,i=g(a.shape),c=S(r,i),l=g(c);f(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(a.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(a.dataId);return!u.isPacked||NN(a.shape,c)||null!==u.texture&&NN(u.shape,c)?(o.incRef(a.dataId),{dataId:a.dataId,shape:c,dtype:a.dtype}):function(e,t,n){const s=[kN(e.shape),...IN(e.shape)],a={dtype:e.dtype,shape:s,dataId:e.dataId},r=[kN(t),...IN(t)],o=new bE(r,s),i=[s],c=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(a,c,o)}const wR={kernelName:dn,backendName:"webgl",kernelFunc:yR};class gR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:r}=e;this.outputShape=[s,r];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(x(e)?e.toPrecision(2):e,", ones);")}let l="";a%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class vR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:r}=e;this.outputShape=[s,r];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let m="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),_="vec4";"all"===t?(o="1.0",m="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",_="bvec4"):"any"===t&&(o="0.0",m="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",_="bvec4");let d="";a%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(d,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(_," values = ").concat(_,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(m,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(_," values = ").concat(_,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(m,"\n        } else if (").concat(2===u,") {\n          ").concat(_," values = ").concat(_,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(m,"\n        } else if (").concat(3===u,") {\n          ").concat(_," values = ").concat(_,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(m,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function xR(e,t,n,s){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=lu(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let r=e;for(let o=0;o<a.length;o++){const{inSize:i,windowSize:c,outSize:l}=a[o];let u,m;u="mean"===n?0===o?new gR({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new gR({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new vR({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),m=r,r=s.runWebGLProgram(u,[r],t),m.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(m)}return r}class bR{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const s=ZN(this.rank),a=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let a=0;a<e.length;a++)s[e[a]]=n[a];return s.join()}(t);this.userCode="\n    void main() {\n      ".concat(s," resRC = getOutputCoords();\n      setOutput(getA(").concat(a,"));\n    }\n    ")}}class kR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const s=ZN(this.rank),a=gE("rc",this.rank),r=new Array(this.rank);for(let l=0;l<t.length;l++)r[t[l]]=a[l];const o="vec2(".concat(r.slice(-2).join(),")"),i="++".concat(a[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(r.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(s," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(a[this.rank-1],";\n      if(++").concat(a[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function IR(e,t,n){const s=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kR(e.shape,t):new bR(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function SR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s;return function(e,t,n,s){const a=t,r=e.shape.length,o=C(a,e.shape);let i=o;const c=ec(i,r),l=null!=c;let u=e;l&&(u=IR(e,c,s),i=nc(i.length,r)),$i("sum",i,r);const[m,_]=Ji(u.shape,i);let d=m;n&&(d=Zi(m,o));const p=g(_),h=yR({inputs:{x:u},attrs:{shape:[g(e.shape)/p,p]},backend:s}),f=xR(h,fa(e.dtype),"sum",s),y=yR({inputs:{x:f},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),l&&s.disposeIntermediateTensorInfo(u),y}(a,r,o,n)}const CR={kernelName:Mn,backendName:"webgl",kernelFunc:SR};function NR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{perm:r}=s,o=n,i=a.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=a.shape[r[u]];let l;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=yE(e,a.shape,a.dtype,r,c);l=o.makeTensorInfo(c,a.dtype);o.texData.get(l.dataId).values=t}else l=IR(a,r,o);return l}const TR={kernelName:ns,backendName:"webgl",kernelFunc:NR},ER=1e3;function RR(e){let{a:t,b:n,transposeA:s,transposeB:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,m=n.shape.length,_=s?t.shape[u-2]:t.shape[u-1],d=a?n.shape[m-1]:n.shape[m-2],p=s?t.shape[u-1]:t.shape[u-2],h=a?n.shape[m-2]:n.shape[m-1],y=t.shape.slice(0,-2),w=n.shape.slice(0,-2),v=g(y),x=g(w),b=uo(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([p,h]);f(_===d,(()=>"Error in matMul: inner shapes (".concat(_,") and (")+"".concat(d,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(s)+" and transposeB=".concat(a," must match.")));const k=s?[v,_,p]:[v,p,_],I=a?[x,h,d]:[x,d,h],S=yR({inputs:{x:t},backend:r,attrs:{shape:k}}),C=yR({inputs:{x:n},backend:r,attrs:{shape:I}}),N=[S,C],T=Math.max(v,x),E=s?S.shape[1]:S.shape[2],R=null!=o,A=null!=i,F="leakyrelu"===l,D=null!=l?uR(l,!0):null;let M;if((1===p||1===h)&&E>ER&&!1===(R||A||F||null!=D)){let e=S,t=C;s&&(e=NR({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=NR({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===h;let o=e;1!==h&&(o=yR({inputs:{x:e},backend:r,attrs:{shape:[T,E,1]}}),N.push(o));const i=1===h?2:1;let c=t;n&&(c=yR({inputs:{x:t},backend:r,attrs:{shape:[T,1,E]}}),N.push(c));const l=hR({inputs:{a:o,b:c},backend:r});M=SR({inputs:{x:l},backend:r,attrs:{axis:i,keepDims:!0}}),N.push(l)}else{const e=ha(t.dtype,n.dtype),l=new mR(k,I,[T,p,h],s,a,R,D,A,F),u=[S,C];if(null!=o&&u.push(o),A&&u.push(i),F){const e=r.makeTensorInfo([],"float32",zs(c,"float32"));u.push(e),N.push(e)}M=r.runWebGLProgram(l,u,e)}const O=yR({inputs:{x:M},backend:r,attrs:{shape:b}});N.push(M);for(const f of N)r.disposeIntermediateTensorInfo(f);return O}const AR={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:m}=s;return RR({a:a,b:r,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:m,activation:u})}},FR="return abs(x);";const DR={kernelName:te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=sE(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let a;return a=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new UE(s.shape,FR):new NE(s.shape,FR),n.runWebGLProgram(a,[s],s.dtype)}},MR=cR({opSnippet:TE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),OR={kernelName:ne,backendName:"webgl",kernelFunc:MR},LR=cR({opSnippet:TE+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),BR={kernelName:se,backendName:"webgl",kernelFunc:LR},zR="return a + b;",PR=lR({opSnippet:zR,packedOpSnippet:zR,supportsComplex:!0,cpuKernelImpl:IT}),WR={kernelName:ae,backendName:"webgl",kernelFunc:PR};class UR{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const s=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(s,";\n        setOutput(result);\n      }\n    ")}}class VR{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const s=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(s,";\n        setOutput(result);\n      }\n    ")}}const GR={kernelName:re,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,a=n;if(1===a.length)return JE({inputs:{x:a[0]},backend:s});if(a.length>Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:s}),r=e({inputs:a.slice(t),backend:s});return e({inputs:[n,r],backend:s})}const r=a.map((e=>e.dtype)).reduce(((e,t)=>ha(e,t))),o=a.map((e=>e.shape)),i=Q().getBool("WEBGL_PACK")?new VR(a[0].shape,o):new UR(a[0].shape,o);return s.runWebGLProgram(i,a,r)}};const HR={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s,i=a.shape.length,c=C(r,a.shape);let l=c;const u=ec(l,i);let m=a;null!=u&&(m=NR({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nc(l.length,i)),$i("all",l,i);const[_,d]=Ji(m.shape,l),p=yR({inputs:{x:m},backend:n,attrs:{shape:[-1,g(d)]}}),h=xR(p,p.dtype,"all",n);let f;if(o){f=yR({inputs:{x:h},backend:n,attrs:{shape:Zi(_,c)}})}else f=yR({inputs:{x:h},backend:n,attrs:{shape:_}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),null!=u&&n.disposeIntermediateTensorInfo(m),f}};const jR={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s,i=a.shape.length,c=C(r,a.shape);let l=c;const u=ec(l,i);let m=a;null!=u&&(m=NR({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nc(l.length,i)),$i("any",l,i);const[_,d]=Ji(m.shape,l),p=yR({inputs:{x:m},backend:n,attrs:{shape:[-1,g(d)]}}),h=xR(p,p.dtype,"any",n);let f;if(o){f=yR({inputs:{x:h},backend:n,attrs:{shape:Zi(_,c)}})}else f=yR({inputs:{x:h},backend:n,attrs:{shape:_}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),null!=u&&n.disposeIntermediateTensorInfo(m),f}};class KR{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:a,outSize:r}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,r];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(s,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(s,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class qR{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const a=e[e.length-1],r=Math.ceil(a/t);this.outputShape=e.slice(0,-1),r>1&&this.outputShape.push(r),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=ZN(i),l=vE("coords",i);let u,m;if(1===r){m=i+1;const e=ZN(m);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else m=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const _=["x","y","z","w","u","v"].slice(0,m),d="."+_[m-1],p=_.map((e=>"int "+e)),h=vE("sourceLocR",m-1).concat("inIdx.r"),y=vE("sourceLocG",m-1).concat("inIdx.g"),w=vE("sourceLocB",m-1).concat("inIdx.b"),g=vE("sourceLocA",m-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=s?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(h.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(w.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),")));"),b="vec4(\n            getAChannel(".concat(h.join(),"),\n            hasNextCol ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(w.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(g.join(),") : 0.)"),k=s?"":"\n      float getBestIndicesAChannel(".concat(p.join(),") {\n        return getChannel(getBestIndicesA(").concat(_.join(),"),\n                                          vec2(").concat(_.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(p.join(),") {\n        return getChannel(getA(").concat(_.join(),"),\n                               vec2(").concat(_.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(d,", sourceLocG").concat(d,",\n          sourceLocB").concat(d,", sourceLocA").concat(d,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(b,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(x,"\n          vec4 candidate = ").concat(b,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function XR(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],r=t.shape[1];null!=s&&(a=s.shape[0],r=s.shape[1]);const o=lu(r),i={windowSize:o,inSize:r,batchSize:a,outSize:Math.ceil(r/o)},c=new KR(i,n,null==s),l=[t];null!=s&&l.push(s);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const m=XR(e,t,n,u);return e.disposeIntermediateTensorInfo(u),m}function YR(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const a=null!=s?s.shape:t.shape,r=lu(a[a.length-1]),o=new qR(a,r,n,null==s),i=null==s?[t]:[t,s],c=e.runWebGLProgram(o,i,"int32");if(c.shape.length===t.shape.length){const s=YR(e,t,n,c);return e.disposeIntermediateTensorInfo(c),s}return c}function QR(e,t,n,s){const a=[n];if($i("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!Q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],r=e.texData.get(t.dataId);let o=t;null!==r&&r.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,c]=Ji(o.shape,a),l=g(c),u=yR({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(u);const m=XR(e,u,s);n.push(m);const _=yR({inputs:{x:m},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),_}return YR(e,t,s)}const JR={kernelName:ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;let o=C(r,a.shape);const i=ec(o,a.shape.length);let c=a;const l=[];null!=i&&(c=NR({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(c),o=nc(o.length,c.shape.length)),$i("argMax",[o[0]],c.shape.length);const u=QR(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const ZR={kernelName:le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;let o=C(r,a.shape);const i=ec(o,a.shape.length);let c=a;const l=[];null!=i&&(c=NR({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(c),o=nc(o.length,c.shape.length)),$i("argMin",[o[0]],c.shape.length);const u=QR(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},$R=cR({opSnippet:TE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),eA={kernelName:ue,backendName:"webgl",kernelFunc:$R},tA=cR({opSnippet:TE+"return log(x + sqrt(x * x + 1.0));"}),nA={kernelName:me,backendName:"webgl",kernelFunc:tA},sA=cR({opSnippet:TE+"\n  return atan(x);\n"}),aA={kernelName:_e,backendName:"webgl",kernelFunc:sA},rA=lR({opSnippet:qE+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+YE+"\n  return result;\n"}),oA={kernelName:pe,backendName:"webgl",kernelFunc:rA},iA=cR({opSnippet:TE+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),cA={kernelName:de,backendName:"webgl",kernelFunc:iA};class lA{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,m=e.effectiveFilterWidth,_=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const p="avg"===t,h="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),f="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(p||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(_,", ").concat(d,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(m,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(s?a?h:f:"wR * ".concat(m," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let w="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(w="avgValue / max(count, 1.0)");const g=4*Math.floor(r/4),v=r%4,x="\n      if (".concat(p,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(_,", ").concat(d,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(g,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(x,"\n          }\n\n          int xC = xCCorner + ").concat(g,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(x,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(x,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(x,"\n          }\n        }\n        setOutput(").concat(w,");\n      }\n    ")}}class uA{constructor(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,m=e.dilationWidth,_=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.front,f=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const w="avg"===t;let g="0.0";if(w||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(h,", ").concat(f,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(_,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(d,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(p,";\n                  wC += ").concat(m,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(s?a?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(d," * ").concat(p," +\n                      wR * ").concat(p," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(v="avgValue / max(count, 1.0)");const x=4*Math.floor(r/4),b=r%4,k="\n      if (".concat(w,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(h,", ").concat(f,", ").concat(y,");\n      const float initializationValue = ").concat(g,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(g,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(_,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(m,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(m,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(m,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(m,", ch)\n              );\n\n              ").concat(k,"\n            }\n\n            int xC = xCCorner + ").concat(x,";\n            if (").concat(1===b,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(2===b,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(m,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(3===b,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(m,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(m,", ch),\n                initializationValue\n              );\n\n              ").concat(k,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const mA={kernelName:he,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;MN(a,"avgPool");const{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=s;f(ri(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Yo(a.shape,r,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&v(l.inShape,l.outShape))return JE({inputs:{x:a},backend:n});const u=new lA(l,"avg",!1);return n.runWebGLProgram(u,[a],"float32")}};const _A={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=s,u=Qo(a.shape,r,o,[1,1,1],i,c,l),m=new uA(u,"avg",!1);return n.runWebGLProgram(m,[a],"float32")}};class dA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,a=e.strideWidth,r=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,m=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(m,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class pA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,a=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,m=e.effectiveFilterHeight,_=e.effectiveFilterWidth,d=u-1-e.padInfo.front,p=m-1-e.padInfo.top,h=_-1-e.padInfo.left,f=1/(t*n*s);this.userCode="\n      const ivec3 pads = ivec3(".concat(d,", ").concat(p,", ").concat(h,");\n      const float avgMultiplier = float(").concat(f,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(a,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(m,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(_,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const hA={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,o=r,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s,m=Qo(o.shape,i,c,[1,1,1],l,u),_=new pA(m);return n.runWebGLProgram(_,[a],o.dtype)}};const fA={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,o=r;MN([a,r],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=s,u=Yo(o.shape,i,c,1,l),m=new dA(u);return n.runWebGLProgram(m,[a],o.dtype)}};const yA={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r}=t,{transposeA:o,transposeB:i}=s;return RR({a:a,b:r,transposeA:o,transposeB:i,backend:n})}};class wA{constructor(e,t,n,s,a,r){this.outputShape=[],this.variableNames=["x","mean","variance"],uo(e,t),uo(e,n);let o="0.0";null!=s&&(uo(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=a&&(uo(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(r,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class gA{constructor(e,t,n,s,a,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],uo(e,t),uo(e,n);let o="vec4(0.0)";null!=s&&(uo(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=a&&(uo(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(r,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const vA={kernelName:mt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:a,mean:r,variance:o,offset:i,scale:c}=t;f(r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==c||r.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=s;null==l&&(l=.001);const u=[a,r,o];let m=null;null!=i&&(m=i.shape,u.push(i));let _=null;null!=c&&(_=c.shape,u.push(c));const d=Q().getBool("WEBGL_PACK_NORMALIZATION")?new gA(a.shape,r.shape,o.shape,m,_,l):new wA(a.shape,r.shape,o.shape,m,_,l);return n.runWebGLProgram(d,u,u[0].dtype)}};class xA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ZN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return bA.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let s;const a=e.map(((e,t)=>"sourceLoc.".concat(bA[t]," = start[").concat(t,"] + coords.").concat(bA[t],";")));s="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(a.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(s,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const bA=["x","y","z","w","u","v"];class kA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ZN(this.rank),n=vE("coords",this.rank),s=vE("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2(".concat(s.slice(-2).join(),")"),r="getChannel(getSource(".concat(s.join(),"), ").concat(a,")"),o="\n      result.x = ".concat(r,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(s[this.rank-1],";\n        result.y = ").concat(r,";\n        --").concat(s[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(s[this.rank-2],";\n        result.z = ").concat(r,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(s[this.rank-1],";\n          result.w = ").concat(r,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(s[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function IA(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,size:o}=s,[i,c]=Vo(a,r,o);if(To(a,i,c),0===g(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=aE(e.values,i,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),u=Wo(a.shape,i,c);if(l||!u){const e=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kA(c):new xA(c),t=[i];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),r=s.makeTensorInfo(n,e.dtype),o=s.texData.get(r.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Uo(t,B(e.shape));a.slice&&(i+=a.slice.flatOffset),o.slice={flatOffset:i,origDataId:a.slice&&a.slice.origDataId||e.dataId};const c=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,c+1),r}(a,i,c,n)}const SA={kernelName:Nn,backendName:"webgl",kernelFunc:IA},CA={kernelName:ve,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,crops:o}=s;f(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=r.reduce(((e,t)=>e*t)),c=mu(a.shape,r,i),l=_u(c.length,r.length),u=du(a.shape,r,i),m=pu(o,r.length),_=hu(u,o,r.length),d=[],p=yR({inputs:{x:a},backend:n,attrs:{shape:c}}),h=NR({inputs:{x:p},backend:n,attrs:{perm:l}}),y=yR({inputs:{x:h},backend:n,attrs:{shape:u}}),w=IA({inputs:{x:y},backend:n,attrs:{begin:m,size:_}});return d.push(p),d.push(h),d.push(y),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}};const NA={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:o}=s,i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=ST(i,c,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,l)}};const TA={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,r=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Q().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,a])||1===o){const e=n.texData.get(s.dataId).values,t=n.texData.get(a.dataId).values,[r,o]=NT(s.shape,a.shape,e,t,s.dtype),i=n.makeTensorInfo(o,s.dtype);return n.texData.get(i.dataId).values=r,i}let i;return i=r?new QE("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,a.shape,!1):new XE("\n  return float(int(a.r) & int(b.r));\n",s.shape,a.shape),n.runWebGLProgram(i,[s,a],s.dtype)}};const EA={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,r=n.readSync(s.dataId),o=n.readSync(a.dataId),i=uo(Array.from(r),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},RA=lR({opSnippet:"return float(a != b);",cpuKernelImpl:XT,dtype:"bool"}),AA={kernelName:Xt,backendName:"webgl",kernelFunc:RA};function FA(e){const{inputs:t,backend:n}=e,{input:s}=t;return JE({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const DA={kernelName:un,backendName:"webgl",kernelFunc:FA},MA="return float(int(x));";const OA={kernelName:Ie,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:r}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===r.dtype)return JE({inputs:{x:r},backend:s});const t=hc(r.shape),n=e({inputs:{x:r},backend:s,attrs:{dtype:"float32"}}),a=$E({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),a}if("complex64"===r.dtype){const t=FA({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!R(r.dtype,o)){const e=JE({inputs:{x:r},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(s.shouldExecuteOnCPU([r])){const e=s.texData.get(r.dataId).values,[t,n,a]=TT(e,r.shape,r.dtype,o);return s.makeTensorInfo(t,n,a)}if("int32"===o)return function(e,t){const n=new NE(e.shape,MA),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(r,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",T("bool",1)),t=RA({inputs:{a:r,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(r.dtype," to ").concat(o))}},LA="return ceil(x);",BA=cR({opSnippet:LA,packedOpSnippet:LA,cpuKernelImpl:ET}),zA={kernelName:Se,backendName:"webgl",kernelFunc:BA};class PA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class WA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const UA={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{clipValueMin:r,clipValueMax:o}=s;let i;i=Q().getBool("WEBGL_PACK_CLIP")?new WA(a.shape):new PA(a.shape);const c=[[r],[o]];return n.runWebGLProgram(i,[a],a.dtype,c)}};class VA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function GA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const HA={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=n.texData.get(s.dataId),r=new VA(s.shape),o=[GA(s,a.complexTensorInfos.real),GA(s,a.complexTensorInfos.imag)];return n.runWebGLProgram(r,o,o[0].dtype)}};class jA{constructor(e){this.outputShape=[],this.outputShape=nu(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let r=1;r<t.length;r++){const e=t[r-1];n.push("else if (yC < ".concat(t[r],") ")+"setOutput(getT".concat(r,"(yR, yC-").concat(e,"));"))}const s=t.length,a=t[t.length-1];n.push("else setOutput(getT".concat(s,"(yR, yC-").concat(a,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class KA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=nu(e,t);const n=this.outputShape,s=n.length,a=ZN(s),r=vE("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let p=1;p<i.length;p++)i[p]=i[p-1]+e[p][t];const c=o[t],l=o.slice(-2),u=o.join();let m="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let p=1;p<i.length;p++){const e=i[p-1];m+="\n        if (".concat(c," < ").concat(i[p],"  && ").concat(c," >= ").concat(i[p-1],") {\n          return getChannel(\n            getT").concat(p,"(").concat(qA(o,c,e),"),\n            vec2(").concat(qA(l,c,e),"));\n        }")}const _=i.length,d=i[i.length-1];m+="\n        return getChannel(\n          getT".concat(_,"(").concat(qA(o,c,d),"),\n          vec2(").concat(qA(l,c,d),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(m,"\n      }\n\n      void main() {\n        ").concat(a," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(r,"), 0., 0., 0.);\n\n        ").concat(r[s-1]," = ").concat(r[s-1]," + 1;\n        if (").concat(r[s-1]," < ").concat(n[s-1],") {\n          result.g = getValue(").concat(r,");\n        }\n\n        ").concat(r[s-2]," = ").concat(r[s-2]," + 1;\n        if (").concat(r[s-2]," < ").concat(n[s-2],") {\n          result.a = getValue(").concat(r,");\n        }\n\n        ").concat(r[s-1]," = ").concat(r[s-1]," - 1;\n        if (").concat(r[s-2]," < ").concat(n[s-2]," &&\n            ").concat(r[s-1]," < ").concat(n[s-1],") {\n          result.b = getValue(").concat(r,");\n        }\n        setOutput(result);\n      }\n    ")}}function qA(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?"".concat(e," - ").concat(n):e)).join()}function XA(e){const{inputs:t,backend:n}=e,{input:s}=t;return JE({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const YA={kernelName:wt,backendName:"webgl",kernelFunc:XA};function QA(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>FA({inputs:{input:e},backend:n}))),a=e.map((e=>XA({inputs:{input:e},backend:n}))),r=QA(s,t,n),o=QA(a,t,n),i=$E({inputs:{real:r,imag:o},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),i}let a=n.shouldExecuteOnCPU(e);if("string"===s&&(a=!0),a){const a=e.map((e=>{const s=g(e.shape.slice(t));return yR({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),r=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=nu(a.map((e=>e.shape)),1),i=1===a[0].shape[0],c=RT(r,o,s,i),l=nu(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,s,c);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const r=e.filter((e=>g(e.shape)>0)),o=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(1===r.length){const t=o?new NE(e[0].shape,ME):new UE(e[0].shape,ME);return n.runWebGLProgram(t,e,s)}const i=Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>i){const e=[];for(let a=0;a<r.length;a+=i){const s=r.slice(a,a+i);e.push(QA(s,t,n))}const s=QA(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(o){const e=new KA(r.map((e=>e.shape)),t);return n.runWebGLProgram(e,r,s)}const{tensors2D:c,outShape:l}=function(e,t,n){const s=nu(e.map((e=>e.shape)),t),a=e.map((e=>yR({inputs:{x:e},attrs:{shape:[-1,g(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:s}}(r,t,n),u=new jA(c.map((e=>e.shape))),m=n.runWebGLProgram(u,c,s);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const _=yR({inputs:{x:m},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(m),_}function JA(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,r=C(a,t[0].shape)[0];tu(t.map((e=>e.shape)),r);const o=nu(t.map((e=>e.shape)),r);if(0===g(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>g(e.shape)>0));return 1===i.length?JE({inputs:{x:i[0]},backend:n}):QA(i,r,n)}const ZA={kernelName:Ee,backendName:"webgl",kernelFunc:JA};class $A{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,m=e.filterHeight,_=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4,h="channelsLast"===e.dataFormat,f=h?1:2,y=h?2:3,w=h?3:1;let g="",v="";n&&(g=s?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(g,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(r,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(w,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(f,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(m,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(_,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(d,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(h,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===p,") {\n\n              if (").concat(h,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(d,") *\n                    getW(wR, wC, ").concat(d,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(d,", xR, xC) *\n                    getW(wR, wC, ").concat(d,", d2);\n              }\n\n            } else if (").concat(2===p,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(d,", d2),\n                getW(wR, wC, ").concat(d," + 1, d2)\n              );\n\n              if (").concat(h,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(d,"),\n                  getX(batch, xR, xC, ").concat(d," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(d,", xR, xC),\n                  getX(batch, ").concat(d," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===p,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(d,", d2),\n                getW(wR, wC, ").concat(d," + 1, d2),\n                getW(wR, wC, ").concat(d," + 2, d2)\n              );\n\n              if (").concat(h,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(d,"),\n                  getX(batch, xR, xC, ").concat(d," + 1),\n                  getX(batch, xR, xC, ").concat(d," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(d,", xR, xC),\n                  getX(batch, ").concat(d," + 1, xR, xC),\n                  getX(batch, ").concat(d," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(x,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class eF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,a=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,m=e.filterHeight,_=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(a,", ").concat(r,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(s,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(m,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(_,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(d,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===p,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(d,") *\n                  getW(wF, wR, wC, ").concat(d,", d2);\n              } else if (").concat(2===p,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(d,"),\n                  getX(batch, xF, xR, xC, ").concat(d," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(d,", d2),\n                  getW(wF, wR, wC, ").concat(d," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===p,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(d,"),\n                  getX(batch, xF, xR, xC, ").concat(d," + 1),\n                  getX(batch, xF, xR, xC, ").concat(d," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(d,", d2),\n                  getW(wF, wR, wC, ").concat(d," + 1, d2),\n                  getW(wF, wR, wC, ").concat(d," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class tF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rT(this.outputShape.length);const r=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let m="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let p=0;p<l;p++)m+="\n           vec4 xTexelC".concat(2*p,";\n           int xTexelC").concat(2*p,"Ready;\n           vec4 xTexelC").concat(2*p+1,";\n           int xTexelC").concat(2*p+1,"Ready;\n           vec4 xC").concat(p,";");m+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let p=0;p<l;p++)m+="\n           xTexelC".concat(2*p," = vec4(0.0);\n           xTexelC").concat(2*p,"Ready = 0;\n           xTexelC").concat(2*p+1," = vec4(0.0);\n           xTexelC").concat(2*p+1,"Ready = 0;\n           xC").concat(p," = vec4(0.0);");m+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let f=0;f<(u+1)/2;f++){const t=2*f;if(m+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<l&&(r%2===1?(m+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),m+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):m+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=r%2===0?p(i):i;i%2===0&&r%2===1||i%2!==0&&r%2!==1?(m+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),m+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):m+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(r%2===1?(m+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(m+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(m+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(m+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(m+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(m+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}m+="\n     }\n   ",m+="\n     }\n   ",m+="\n     }\n   ";let _="",d="";n&&(_=s?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):a?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),d="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(_,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(m,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(h,"\n         ").concat(d,"\n         setOutput(result);\n       }\n     ")}}class nF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=rT(this.outputShape.length);const{dataFormat:n}=t,s=LN(),a="channelsLast"===n,r=a?1:2,o=a?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(r,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(a,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(s.output," = result;\n      }\n    ")}}function sF(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function aF(e){let{x:t,filter:n,convInfo:s,backend:a,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=a.texData.get(t.dataId),m=s.inChannels,_=l[0]*l[1]*l[2],d=s.outChannels,p="channelsLast"===s.dataFormat,h=!1;let y;const w=[];if(null!=o){const e=sF(o.shape,p);null!=e&&(o=yR({inputs:{x:o},backend:a,attrs:{shape:e}}),w.push(o))}if(null!=r){const e=sF(r.shape,p);null!=e&&(r=yR({inputs:{x:r},backend:a,attrs:{shape:e}}),w.push(r))}if(!((1===_||1===d)&&m>ER)&&u.isPacked&&p&&null!=u.texture&&l[2]%2!==0&&v(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),m={dataId:t.dataId,shape:[1,e,s.inChannels],dtype:t.dtype},_=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,f(NN(u.shape,m.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(m.shape," isn't free")));const d=yR({inputs:{x:n},backend:a,attrs:{shape:[1,s.inChannels,s.outChannels]}});w.push(d);const p=RR({a:m,b:d,backend:a,transposeA:false,transposeB:h,bias:r,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),g=a.texData.get(p.dataId);f(g.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=_,g.shape=s.outShape,y=JE({inputs:{x:p},backend:a}),y.shape=s.outShape,w.push(p)}else{const e=s.outHeight*s.outWidth,l=yR({inputs:{x:t},backend:a,attrs:{shape:p?[s.batchSize,e,s.inChannels]:[s.batchSize,s.inChannels,e]}}),u=yR({inputs:{x:n},backend:a,attrs:{shape:[1,s.inChannels,s.outChannels]}}),m=RR({a:p?l:u,b:p?u:l,transposeA:!p,transposeB:h,backend:a,bias:r,activation:c,preluActivationWeights:o,leakyreluAlpha:i});y=yR({inputs:{x:m},backend:a,attrs:{shape:s.outShape}}),w.push(l),w.push(u),w.push(m)}for(const f of w)a.disposeIntermediateTensorInfo(f);return y}function rF(e){let{x:t,filter:n,convInfo:s,backend:a,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:m,outWidth:_,outHeight:d,dataFormat:p}=s,h="channelsLast"===p,f=l*u*m,y=d*_,w=[s.batchSize,f,y],v=[];if(null!=o){const e=sF(o.shape,h);null!=e&&(o=yR({inputs:{x:o},backend:a,attrs:{shape:e}}),v.push(o))}if(null!=r){const e=sF(r.shape,h);null!=e&&(r=yR({inputs:{x:r},backend:a,attrs:{shape:e}}),v.push(r))}const x=yR({inputs:{x:n},backend:a,attrs:{shape:[1,f,g(n.shape)/f]}});v.push(x);const b=new nF(w,s),k=[t.shape,[s.padInfo.top,s.padInfo.left],[s.strideHeight,s.strideWidth],[s.dilationHeight,s.dilationWidth],[s.inChannels],[s.filterWidth*s.inChannels],[s.outWidth]],I=a.runWebGLProgram(b,[t],"float32",k),S=yR({inputs:{x:I},backend:a,attrs:{shape:w}});v.push(I),v.push(S);const C=null!=r,N=null!=o,T="leakyrelu"===c,E=c?uR(c,!0):null,R=new mR(h?S.shape:x.shape,h?x.shape:S.shape,h?[s.batchSize,y,s.outChannels]:[s.batchSize,s.outChannels,y],!0,!1,C,E,N,T),A=h?[S,x]:[x,S];if(r&&A.push(r),N&&A.push(o),T){const e=a.makeTensorInfo([],"float32",zs(i,"float32"));A.push(e),v.push(e)}const F=a.runWebGLProgram(R,A,"float32"),D=yR({inputs:{x:F},backend:a,attrs:{shape:s.outShape}});v.push(F);for(const g of v)a.disposeIntermediateTensorInfo(g);return D}const oF={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=s,m=ii(c),_=Jo(a.shape,r.shape,o,l,i,u,!1,m);let d;if(1!==_.filterHeight||1!==_.filterWidth||1!==_.dilationHeight||1!==_.dilationWidth||1!==_.strideHeight||1!==_.strideWidth||"SAME"!==_.padInfo.type&&"VALID"!==_.padInfo.type)if(_.strideWidth<=2&&"channelsLast"===m&&Q().getBool("WEBGL_EXP_CONV")){const e=new tF(_),t=[[_.padInfo.top,_.padInfo.left],[_.strideHeight,_.strideWidth],[_.dilationHeight,_.dilationWidth],[_.inHeight,_.inWidth]];d=n.runWebGLProgram(e,[a,r],"float32",t)}else if(Q().getBool("WEBGL_CONV_IM2COL"))d=rF({x:a,filter:r,convInfo:_,backend:n});else{const e=new $A(_);d=n.runWebGLProgram(e,[a,r],"float32")}else d=aF({x:a,filter:r,convInfo:_,backend:n});const p=yR({inputs:{x:d},backend:n,attrs:{shape:_.outShape}});return n.disposeIntermediateTensorInfo(d),p}};class iF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,a=e.padInfo.left,r="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(s,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(r?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class cF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,a=e.strideWidth,r="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=r?1:2,l=r?2:3,u=r?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(r,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class lF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,a=e.padInfo.front,r=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(a,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(r,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(s," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class uF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,a=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(a,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(s,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(s," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const mF={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=s,m=ii(c),_=Jo(a.shape,u,o,1,i,l,!1,m),d=new iF(_);return n.runWebGLProgram(d,[a,r],"float32")}};class _F{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=rT(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(a,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const dF={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=s,m=ii(l),_=Jo(o,r.shape,i,1,c,u,!1,m);if(Q().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===m){const e=[[_.strideHeight,_.strideWidth]],t=new _F(_);return n.runWebGLProgram(t,[a,r],"float32",e)}{const e=new cF(_);return n.runWebGLProgram(e,[a,r],"float32")}}};const pF={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dilations:c}=s,l=Zo(a.shape,r.shape,o,c,i),u=new eF(l);return n.runWebGLProgram(u,[a,r],"float32")}};const hF={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:o,pad:i,filterShape:c}=s,l=Zo(a.shape,c,o,1,i),u=new lF(l);return n.runWebGLProgram(u,[a,r],"float32")}};const fF={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{pad:o,strides:i,inputShape:c}=s,l=Zo(c,r.shape,i,1,o),u=new uF(l);return n.runWebGLProgram(u,[a,r],"float32")}},yF=cR({opSnippet:iR+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(YE,"\n  return result;\n")}),wF={kernelName:Le,backendName:"webgl",kernelFunc:yF},gF=cR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),vF={kernelName:Be,backendName:"webgl",kernelFunc:gF};class xF{constructor(e,t,n,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,o,i,c]=e,[l]=t,[u,m]=n;this.outputShape=[l,u,m,c];const _="bilinear"===s?1:0,[d,p]=["".concat(o-1,".0"),"".concat(i-1,".0")],[h,f,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(d," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(d)],[w,g,v]=m>1?["".concat((i-1)/(m-1)),"(x2-x1) * width_ratio","x1*".concat(p," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(p)];this.userCode="\n      const float height_ratio = float(".concat(h,");\n      const float width_ratio = float(").concat(w,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(r,") {\n          return;\n        }\n\n        float height_scale = ").concat(f,";\n        float width_scale = ").concat(g,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(d," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(p," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(_," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const bF={kernelName:We,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:r,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=s,u=new xF(a.shape,r.shape,i,c,l);return n.runWebGLProgram(u,[a,r,o],"float32")}};var kF;!function(e){e.Prod="*",e.Sum="+"}(kF||(kF={}));class IF{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,r=this.op===kF.Prod?"1.0":"0.0",o=n?r:"getX(".concat(SF(a,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=s?"end != ".concat(i-1):"end != 0",l=s?"end + 1":"end - 1"):(c=s?"end + pow2 < ".concat(i):"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(ZN(a)," coords = getOutputCoords();\n        int end = ").concat(CF(a,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(CF(a,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(SF(a,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function SF(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function CF(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function NF(e,t,n,s,a,r){const o=t.shape.length,i=ec([s],o);let c=t;null!=i&&(c=NR({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=nc(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(s));const u=c.shape[l];let m=JE({inputs:{x:c},backend:n});for(let _=0;_<=Math.ceil(Math.log2(u))-1;_++){const t=new IF(e,c.shape,!1,r),s=[[_]],a=m;m=n.runWebGLProgram(t,[m],m.dtype,s),n.disposeIntermediateTensorInfo(a)}if(a){const t=new IF(e,c.shape,a,r),s=m;m=n.runWebGLProgram(t,[m],m.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=i){const e=NR({inputs:{x:m},backend:n,attrs:{perm:tc(i)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(c),e}return m}const TF={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:o,reverse:i}=s;return NF(kF.Prod,a,n,r,o,i)}};const EF={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:o,reverse:i}=s;return NF(kF.Sum,a,n,r,o,i)}};const RF={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:o,binaryOutput:i}=s;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(r.dataId),s=ST(e,t,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,s)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(r),s=CT(e,t,o,i);return n.makeTensorInfo(s.shape,r.dtype,s.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};class AF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const FF={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:r,dataFormat:o}=s,i=a.shape[0],c=("NHWC"===o?a.shape[1]:a.shape[2])*r,l=("NHWC"===o?a.shape[2]:a.shape[3])*r,u=("NHWC"===o?a.shape[3]:a.shape[1])/(r*r),m=new AF("NHWC"===o?[i,c,l,u]:[i,u,c,l],r,o);return n.runWebGLProgram(m,[a],a.dtype)}};class DF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rT(this.outputShape.length);const r=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=s?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(r,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class MF{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rT(this.outputShape.length);const r=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,m=u;let _="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let p=0;p<u;p++)_+="\n          vec4 xTexelC".concat(2*p,";\n          int xTexelC").concat(2*p,"Ready;\n          vec4 xTexelC").concat(2*p+1,";\n          int xTexelC").concat(2*p+1,"Ready;\n          vec4 xC").concat(p,";");_+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let p=0;p<u;p++)_+="\n          xTexelC".concat(2*p," = vec4(0.0);\n          xTexelC").concat(2*p,"Ready = 0;\n          xTexelC").concat(2*p+1," = vec4(0.0);\n          xTexelC").concat(2*p+1,"Ready = 0;\n          xC").concat(p," = vec4(0.0);");_+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(m+1)/2;y++){const e=2*y;if(_+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(o%2===1?(_+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),_+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):_+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=o%2===0?p(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(_+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),_+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):_+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(o%2===1?(_+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(_+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(_+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(_+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(_+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(_+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}_+="\n    }\n  ",_+="\n      }\n    ";let d="",h="";n&&(d=s?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),h="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(d,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(r,";\n        int q = d2 - d1 * ").concat(r,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(_,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(f,"\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const OF={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=s;let u=c;null==u&&(u=[1,1]),f(ri(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const m=Jo(a.shape,r.shape,o,u,i,l,!0);let _;_=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?new MF(m):new DF(m);const d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return n.runWebGLProgram(_,[a,r],"float32",d)}};class LF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,a=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(r," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(s,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class BF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,a=e.strideWidth,r=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const zF={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=s,m=Jo(a.shape,u,o,i,c,l,!0),_=new LF(m);return n.runWebGLProgram(_,[a,r],"float32")}};const PF={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=s,m=Jo(u,r.shape,o,i,c,l,!0),_=new BF(m);return n.runWebGLProgram(_,[a,r],"float32")}};class WF{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const UF={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],r=g(s.shape),o=yR({inputs:{x:s},backend:n,attrs:{shape:[r]}}),i=new WF(r),c=n.runWebGLProgram(i,[o],o.dtype),l=yR({inputs:{x:c},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class VF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:a,strideWidth:r,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:m}=s;this.userCode="\n      const ivec2 strides = ivec2(".concat(a,", ").concat(r,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(m,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const GF={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:o,pad:i,dilations:c}=s,l=Xo(a.shape,r.shape,o,i,"NHWC",c);let u;const m=new VF(l);u=n.runWebGLProgram(m,[a,r],"float32");const _=yR({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),_}};const HF={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,r=t,{allDims:o,summedDims:i,idDims:c}=Wu(a,r.length);Vu(o.length,c,r);const{path:l,steps:u}=Gu(i,c),m=u.length;let _=null,d=o.length;const p=[];for(let h=0;h<m;++h){for(const e of u[h]){const{permutationIndices:t,expandDims:s}=Uu(d,c[e]);let a;Hu(t)?a=r[e]:(a=NR({inputs:{x:r[e]},backend:n,attrs:{perm:t}}),p.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);v(a.shape,o)||(a=yR({inputs:{x:a},backend:n,attrs:{shape:o}}),p.push(a)),null===_?_=a:(_=hR({inputs:{a:a,b:_},backend:n}),p.push(_))}h<m-1&&(l[h]>=0&&(_=SR({inputs:{x:_},backend:n,attrs:{axis:l[h]-(o.length-d),keepDims:!1}}),p.push(_)),d--)}for(const h of p)h!==_&&n.disposeIntermediateTensorInfo(h);return _}},jF=cR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),KF={kernelName:$e,backendName:"webgl",kernelFunc:jF},qF={kernelName:et,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:a}=t,r=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QE("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,a.shape):new XE("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,a.shape);return n.runWebGLProgram(r,[s,a],s.dtype)}},XF=lR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:AT}),YF={kernelName:nt,backendName:"webgl",kernelFunc:XF},QF=cR({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(bu,";\n  float a1 = ").concat(ku,";\n  float a2 = ").concat(Iu,";\n  float a3 = ").concat(Su,";\n  float a4 = ").concat(Cu,";\n  float a5 = ").concat(Nu,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),JF={kernelName:tt,backendName:"webgl",kernelFunc:QF},ZF=cR({opSnippet:iR+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:FT,dtype:"float32"}),$F={kernelName:st,backendName:"webgl",kernelFunc:ZF};function eD(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:r}=t,o=r.shape.length,i=r.shape.slice();let c=a;return a<0&&(f(-(o+1)<=a,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+a+1),i.splice(c,0,1),yR({inputs:{x:r},backend:s,attrs:{shape:i}})}const tD={kernelName:at,backendName:"webgl",kernelFunc:eD},nD="return exp(x) - 1.0;",sD=cR({opSnippet:nD,packedOpSnippet:nD,cpuKernelImpl:DT}),aD={kernelName:rt,backendName:"webgl",kernelFunc:sD};class rD{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const a=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),r=n?"".concat(s,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(a,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(s,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(s,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(r,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function oD(e,t,n){const s=n.texData.get(e.dataId),a=g(e.shape),r=e.shape[e.shape.length-1],o=yR({inputs:{x:e},backend:n,attrs:{shape:[a/r,r]}}),i=o.shape,c=new rD("real",i,t),l=new rD("imag",i,t),u=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:i},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:i}],m=n.runWebGLProgram(c,u,"float32"),_=n.runWebGLProgram(l,u,"float32"),d=$E({inputs:{real:m,imag:_},backend:n});n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(_);const p=yR({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),p}const iD={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return oD(s,!1,n)}};class cD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function lD(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:r}=n;if(r=r||M(a),"string"===r){const e=E(r,g(s));return e.fill(a),t.makeTensorInfo(s,r,e)}{const e=new cD(s,a),n=[[a]];return t.runWebGLProgram(e,[],r,n)}}const uD={kernelName:it,backendName:"webgl",kernelFunc:lD};class mD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const _D={kernelName:ct,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:s}=t,a=n,r=new mD(s.shape);return a.runWebGLProgram(r,[s],s.dtype)}},dD="return floor(x);",pD=cR({opSnippet:dD,packedOpSnippet:dD,cpuKernelImpl:MT}),hD={kernelName:lt,backendName:"webgl",kernelFunc:pD},fD=lR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),yD={kernelName:ut,backendName:"webgl",kernelFunc:fD};class wD{constructor(e){this.variableNames=["A"];const t=LN(),[n,s]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(s,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class gD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=LN(),[n,s]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(s,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const vD={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:a}=t;const{numChannels:r}=s,o="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,l]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],u=[l,c],m=[l,c,r];if(i||o){const e=Q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=xD&&e===bD||(bD=e,xD=document.createElement("canvas").getContext("2d",{willReadFrequently:bD})),xD.canvas.width=c,xD.canvas.height=l,xD.drawImage(a,0,0,c,l),a=xD.canvas}const _=n.makeTensorInfo(u,"int32");n.texData.get(_.dataId).usage=aN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(_.dataId),a);const d=Q().getBool("WEBGL_PACK")?new gD(m):new wD(m),p=n.runWebGLProgram(d,[_],"int32");return n.disposeData(_.dataId),p}};let xD,bD=Q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const kD={kernelName:ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:m,dimRoundingMode:_,activation:d,leakyreluAlpha:p}=s,h=ii(u),f=Jo(a.shape,r.shape,c,m,l,_,!1,h);let y;const w=[],g=null!=o,v=null!=i,x="leakyrelu"===d,b=()=>{const e=[a,r],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=yR({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return w.push(t),t}return e};if(g&&e.push(t(o,u)),v&&e.push(t(i,u)),x){const t=n.makeTensorInfo([],"float32",zs(p,"float32"));e.push(t),w.push(t)}return e};if(1!==f.filterHeight||1!==f.filterWidth||1!==f.dilationHeight||1!==f.dilationWidth||1!==f.strideHeight||1!==f.strideWidth||"SAME"!==f.padInfo.type&&"VALID"!==f.padInfo.type)if(f.strideWidth<=2&&"channelsLast"===h&&Q().getBool("WEBGL_EXP_CONV")){const e=d?uR(d,!0):null,t=new tF(f,g,e,v,x),s=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]],a=b();y=n.runWebGLProgram(t,a,"float32",s)}else if(Q().getBool("WEBGL_CONV_IM2COL"))y=rF({x:a,filter:r,convInfo:f,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:p});else{const e=d?uR(d,!1):null,t=new $A(f,g,e,v,x),s=b();y=n.runWebGLProgram(t,s,"float32")}else y=aF({x:a,filter:r,convInfo:f,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:p});const k=yR({inputs:{x:y},backend:n,attrs:{shape:f.outShape}});return w.push(y),w.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}};const ID={kernelName:_s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:m,activation:_,leakyreluAlpha:d}=s,p=[];let h=u;null==h&&(h=[1,1]),f(ri(c,h),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(h,"'")));const y=Jo(a.shape,r.shape,c,h,l,m,!0),w=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,g=_?uR(_,w):null,v=[a,r],x=null!=o,b=null!=i,k="leakyrelu"===_;if(x&&v.push(o),b&&v.push(i),k){const e=n.makeTensorInfo([],"float32",zs(d,"float32"));v.push(e),p.push(e)}let I;I=w?new MF(y,x,g,b,k):new DF(y,x,g,b,k);const S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],C=n.runWebGLProgram(I,v,"float32",S);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class SD{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const a=ZN(n.length);let r="\n    int index;";for(let o=0;o<this.sliceDim;o++)r+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(a," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(r,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const CD={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,r=a.shape,o=r[r.length-1],i=g(s.shape),[c,l,u,m]=fu(s,a),_=yR({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),d=yR({inputs:{x:s},backend:n,attrs:{shape:[g(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(s),r=OT(e,t,s.dtype,l,o,u,m,s.shape,i);return n.makeTensorInfo(c,s.dtype,r.values)}const p=new SD(o,m,[l,u],s.shape),h=n.runWebGLProgram(p,[d,_],d.dtype),f=yR({inputs:{x:h},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(_),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}};class ND{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=ZN(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<e.length;a++)2===a?s.push("index"):s.push("".concat(n[a]));return s.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(s,"));\n      }\n    ")}}function TD(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:r}=t,{axis:o,batchDims:i}=s,c=C(o,a.shape)[0];if(Q().get("DEBUG")){const e=n.readSync(r.dataId),t=a.shape[c];for(let n=0;n<e.length;++n){const s=e[n];f(s<=t-1&&s>=0,(()=>"GatherV2: the index value ".concat(s," is not in [0, ").concat(t-1,"]")))}}const l=im(a,r,c,i),u=g(r.shape),m=[],_=yR({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=yR({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});m.push(_),m.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.bufferSync(d),t=n.bufferSync(_),s=LT(t,e,p);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const h=new ND(_.shape,p),y=n.runWebGLProgram(h,[_,d],_.dtype);m.push(y);const w=yR({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}const ED={kernelName:_t,backendName:"webgl",kernelFunc:TD},RD=lR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:BT,dtype:"bool"}),AD={kernelName:pt,backendName:"webgl",kernelFunc:RD},FD=lR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:zT}),DD={kernelName:ht,backendName:"webgl",kernelFunc:FD};const MD={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return oD(s,!0,n)}},OD=cR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),LD={kernelName:gt,backendName:"webgl",kernelFunc:OD},BD=cR({opSnippet:"return float(isinf(x));",dtype:"bool"}),zD={kernelName:vt,backendName:"webgl",kernelFunc:BD},PD=cR({opSnippet:"return float(isnan(x));",dtype:"bool"}),WD={kernelName:xt,backendName:"webgl",kernelFunc:PD},UD=lR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:PT,dtype:"bool"}),VD={kernelName:kt,backendName:"webgl",kernelFunc:UD},GD=lR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:WT,dtype:"bool"}),HD={kernelName:It,backendName:"webgl",kernelFunc:GD};const jD={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:a,num:r}=n,o=UT(s,a,r);return t.makeTensorInfo([o.length],"float32",o)}},KD=cR({opSnippet:iR+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:VT}),qD={kernelName:Ct,backendName:"webgl",kernelFunc:KD},XD=cR({opSnippet:iR+"\n  return log(1.0 + x);\n"}),YD={kernelName:Nt,backendName:"webgl",kernelFunc:XD},QD=lR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),JD={kernelName:Tt,backendName:"webgl",kernelFunc:QD},ZD=cR({opSnippet:"return float(!(x >= 1.0));"}),$D={kernelName:Et,backendName:"webgl",kernelFunc:ZD},eM=lR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),tM={kernelName:Rt,backendName:"webgl",kernelFunc:eM};class nM{constructor(e,t,n,s,a){this.variableNames=["x"],this.outputShape=[];const r=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(s,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(r,"; j <= ").concat(r,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class sM{constructor(e,t,n,s,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(s,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(r,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(r,"; j <= ").concat(r,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const aM={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:r,bias:o,alpha:i,beta:c}=s,l=Q().getBool("WEBGL_PACK_NORMALIZATION")?new sM(a.shape,r,o,i,c):new nM(a.shape,r,o,i,c);return n.runWebGLProgram(l,[a],a.dtype)}};class rM{constructor(e,t,n,s,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(s,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(s,")\n                * float(").concat(a,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(a,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const oM={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a,y:r,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=s,m=new rM(a.shape,i,c,l,u);return n.runWebGLProgram(m,[a,r,o],a.dtype)}};function iM(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:r,keepDims:o}=s,i=a.shape.length,c=C(r,a.shape);let l=c;const u=ec(l,i),m=null!=u,_=n.shouldExecuteOnCPU([a]);let d=a;if(m){if(_){const e=n.texData.get(d.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=a.shape[u[n]];const s=yE(e,a.shape,a.dtype,u,t);d=n.makeTensorInfo(t,a.dtype);n.texData.get(d.dataId).values=s}else d=IR(a,u,n);l=nc(l.length,i)}$i("max",l,i);const[p,h]=Ji(d.shape,l);let f,y=p;if(o&&(y=Zi(p,c)),_){const e=n.texData.get(d.dataId).values,t=GT(e,g(h),y,a.dtype);f=n.makeTensorInfo(y,a.dtype);n.texData.get(f.dataId).values=t}else f=function(e,t,n,s){const a=g(t),r=yR({inputs:{x:e},attrs:{shape:[g(e.shape)/a,a]},backend:s}),o=xR(r,e.dtype,"max",s),i=yR({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(r),s.disposeIntermediateTensorInfo(o),i}(d,h,y,n);return m&&n.disposeIntermediateTensorInfo(d),f}const cM={kernelName:Dt,backendName:"webgl",kernelFunc:iM},lM=lR({opSnippet:qE+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+YE+"\n  return result;\n",cpuKernelImpl:HT}),uM={kernelName:Mt,backendName:"webgl",kernelFunc:lM};const mM={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;MN(a,"maxPool");const{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=s;f(ri(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Yo(a.shape,r,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&v(l.inShape,l.outShape))return JE({inputs:{x:a},backend:n});const u=new lA(l,"max",!1);return n.runWebGLProgram(u,[a],a.dtype)}};const _M={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=s,u=Qo(a.shape,r,o,[1,1,1],i,l,c),m=new uA(u,"max",!1);return n.runWebGLProgram(m,[a],a.dtype)}};class dM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,a=e.effectiveFilterHeight,r=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=r-1-e.padInfo.left,c=a*r-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(a,";\n          wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(r,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(r," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class pM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,r=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,m=c-1-e.padInfo.top,_=l-1-e.padInfo.left,d=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(m,", ").concat(_,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(a,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(r,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(d," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const hM={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,o=r,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s,m=Qo(o.shape,i,c,[1,1,1],l,u),_=new uA(m,"max",!0),d=n.runWebGLProgram(_,[o],o.dtype),p=new pM(m),h=n.runWebGLProgram(p,[a,d],o.dtype);return n.disposeIntermediateTensorInfo(d),h}};const fM={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r,output:o}=t,i=r;MN([r,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:m}=s,_=Yo(i.shape,c,l,1,u,m),d=new lA(_,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),h=new dM(_),f=n.runWebGLProgram(h,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),f}};const yM={kernelName:Pt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:a}=t,{filterSize:r,strides:o,pad:i,includeBatchInIndex:c}=n,l=s;f(4===a.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(a.shape.length,".")));const u=[1,1];f(ri(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const m=Yo(a.shape,r,o,u,i),[_,d]=function(e,t,n,s){let a=new lA(n,"max",!1);const r=s.runWebGLProgram(a,[e],"float32");return a=new lA(n,"max",!0,!0,t),[r,s.runWebGLProgram(a,[e],"float32")]}(a,c,m,l);return[_,d]}};const wM={kernelName:Wt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:a}=t,{keepDims:r,axis:o}=n,i=s,c=a.shape.length,l=C(o,a.shape);let u=l;const m=ec(u,c),_=null!=m,d=i.shouldExecuteOnCPU([a]),p=[];let h=a;if(_){if(d){const e=i.texData.get(h.dataId).values,t=new Array(c);for(let s=0;s<t.length;s++)t[s]=a.shape[m[s]];const n=yE(e,a.shape,a.dtype,m,t);h=i.makeTensorInfo(t,a.dtype);i.texData.get(h.dataId).values=n}else h=IR(a,m,i);p.push(h),u=nc(u.length,c)}$i("sum",u,c);const[f,y]=Ji(h.shape,u);let w=f;r&&(w=Zi(f,l));const v=function(e,t,n,s){const a=g(t),r=yR({inputs:{x:e},attrs:{shape:[g(e.shape)/a,a]},backend:s}),o=xR(r,"float32","mean",s),i=yR({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(r),s.disposeIntermediateTensorInfo(o),i}(h,y,w,i);for(const g of p)i.disposeIntermediateTensorInfo(g);return v}};const gM={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s,i=a.shape.length,c=C(r,a.shape);let l=c;const u=ec(l,i);let m=a;null!=u&&(m=NR({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nc(l.length,a.shape.length)),$i("min",l,i);const[_,d]=Ji(m.shape,l),p=yR({inputs:{x:m},backend:n,attrs:{shape:[-1,g(d)]}}),h=xR(p,p.dtype,"min",n);let f;if(o){f=yR({inputs:{x:h},backend:n,attrs:{shape:Zi(_,c)}})}else f=yR({inputs:{x:h},backend:n,attrs:{shape:_}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),null!=u&&n.disposeIntermediateTensorInfo(m),f}},vM=lR({opSnippet:qE+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+YE+"\n  return result;\n",cpuKernelImpl:jT}),xM={kernelName:Vt,backendName:"webgl",kernelFunc:vM};class bM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=ZN(s),r=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c="reflect"===n?0:1;this.userCode=1!==s?"\n      ".concat(a," start = ").concat(a,"(").concat(r,");\n      ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(s,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(a," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class kM{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=ZN(s),r=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=vE("rc",s),c=vE("source",s),l="".concat(i[s-1]," < ").concat(this.outputShape[s-1]),u=1===s?"source":"vec2(".concat(c.slice(-2).join(),")"),m="reflect"===n?0:1;let _="";if(1===s){const e="\n        ".concat(a," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(m,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(m,";\n        }\n        source -= start;\n      ");_="\n        ".concat(a," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[s-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(a," source = rc;\n        ").concat(a," lt = ").concat(a,"(lessThan(source, start));\n        ").concat(a," gte = ").concat(a,"(greaterThanEqual(source, end));\n        ").concat(a," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(m,") +\n                gte * ((end - 1) * 2 - source + ").concat(m,");\n        source -= start;\n      ");_="\n        ".concat(a," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[s-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[s-2]," += 1;\n        if(").concat(i[s-2]," < ").concat(this.outputShape[s-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[s-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(r,");\n      const ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(_,"\n        setOutput(result);\n      }\n    ")}}const IM={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:s}=e;const{x:a}=t,{paddings:r,mode:o}=s,i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kM(a.shape,r,o):new bM(a.shape,r,o);return n.runWebGLProgram(i,[a],a.dtype)}},SM=lR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+YE+"\n  return result;\n"}),CM={kernelName:Ht,backendName:"webgl",kernelFunc:SM};class NM{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const TM=lR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),EM={kernelName:Je,backendName:"webgl",kernelFunc:TM},RM="return a - b;",AM=lR({opSnippet:RM,packedOpSnippet:RM,supportsComplex:!0,cpuKernelImpl:pE}),FM={kernelName:Qn,backendName:"webgl",kernelFunc:AM};function DM(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:r}=s,o=C([r],a.shape),i=iM({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=Zi(i.shape,o),l=yR({inputs:{x:i},backend:n,attrs:{shape:c}}),u=AM({inputs:{a:a,b:l},backend:n}),m=ZF({inputs:{x:u},backend:n}),_=SR({inputs:{x:m},backend:n,attrs:{axis:o,keepDims:!1}}),d=yR({inputs:{x:_},backend:n,attrs:{shape:c}}),p=TM({inputs:{a:m,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(_),n.disposeIntermediateTensorInfo(d),p}const MM={kernelName:Bn,backendName:"webgl",kernelFunc:DM};const OM={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:r,seed:o,normalized:i}=s,c=i?a:DM({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=c.shape[0],u=c.shape[1],m=new NM(l,u,r),_=[[o]],d=n.runWebGLProgram(m,[c],"int32",_);return i||n.disposeIntermediateTensorInfo(c),d}},LM=TE+"\n  return -x;\n";const BM={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,a]=qT(e.values,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,t)}let a;return a=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new UE(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new NE(s.shape,LM),n.runWebGLProgram(a,[s],s.dtype)}},zM=bl;const PM={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=s,l=n.readSync(a.dataId),u=n.readSync(r.dataId),{selectedIndices:m}=zM(l,u,o,i,c);return n.makeTensorInfo([m.length],"int32",new Int32Array(m))}},WM=kl;const UM={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=s,u=n.readSync(a.dataId),m=n.readSync(r.dataId),{selectedIndices:_,validOutputs:d}=WM(u,m,o,i,c,l);return[n.makeTensorInfo([_.length],"int32",new Int32Array(_)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},VM=Il;const GM={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=s,u=n.readSync(a.dataId),m=n.readSync(r.dataId),_=o,d=i,p=c,h=l,{selectedIndices:f,selectedScores:y}=VM(u,m,_,d,p,h);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class HM{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(s,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const jM={kernelName:$t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:r,depth:o,onValue:i,offValue:c}=s,l=g(a.shape),u=new HM(l,o,i,c),m=yR({inputs:{x:a},backend:n,attrs:{shape:[l]}}),_=n.runWebGLProgram(u,[m],r);n.disposeIntermediateTensorInfo(m);const d=yR({inputs:{x:_},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(_),d}};function KM(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=FA({inputs:{input:s},backend:n}),t=KM({inputs:{x:e},backend:n}),a=XA({inputs:{input:s},backend:n}),r=KM({inputs:{x:a},backend:n}),o=$E({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}return lD({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const qM={kernelName:os,backendName:"webgl",kernelFunc:KM};const XM={kernelName:Zt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=FA({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s}),r=XA({inputs:{input:a},backend:s}),o=KM({inputs:{x:r},backend:s}),i=$E({inputs:{real:n,imag:o},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(r),s.disposeIntermediateTensorInfo(o),i}return lD({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:s})}};const YM={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return eD({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const r=t[0].shape,o=t[0].dtype;t.forEach((e=>{y(r,e.shape,"All tensors passed to stack must have matching shapes"),f(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=JA({inputs:t.map((e=>{const t=eD({inputs:{input:e},backend:n,attrs:{dim:a}});return i.push(t),t})),backend:n,attrs:{axis:a}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class QM{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=ZN(s),r=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?"\n      ".concat(a," start = ").concat(a,"(").concat(r,");\n      ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(a," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class JM{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=ZN(s),r=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=vE("rc",s),c=vE("source",s),l="".concat(i[s-1]," < ").concat(this.outputShape[s-1]),u=1===s?"source":"vec2(".concat(c.slice(-2).join(),")"),m=["".concat(a," rc = outputLoc;"),"".concat(i[s-1]," += 1;\n       if(").concat(l,") {\n      "),1===s?"":"}\n       rc = outputLoc;\n       ".concat(i[s-2]," += 1;\n       if(").concat(i[s-2]," < ").concat(this.outputShape[s-2],") {"),1===s?"":"  ".concat(i[s-1]," += 1;\n         if(").concat(l,") {")],_=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let p=0,h=1===s?2:4;p<h;p++)d+="\n        ".concat(m[p],"\n        if (").concat(_,") {\n          result[").concat(p,"] = float(value);\n        } else {\n          ").concat(a," source = rc - start;\n          result[").concat(p,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");d+=1===s?"} ":"}}",this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(r,");\n      const ").concat(a," end = ").concat(a,"(").concat(o,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const ZM=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:r,constantValue:o}=s;if(0===g(a.shape)){const e=r.map(((e,t)=>e[0]+a.shape[t]+e[1]));return lD({backend:n,attrs:{shape:e,value:o,dtype:a.dtype}})}const i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JM(a.shape,r,o):new QM(a.shape,r,o),c=[[o]];return n.runWebGLProgram(i,[a],a.dtype,c)},$M={kernelName:tn,backendName:"webgl",kernelFunc:ZM},eO=lR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+YE+"\n  return result;\n"}),tO={kernelName:nn,backendName:"webgl",kernelFunc:eO};const nO={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:o}=s,i=a.shape.length,c=[],l=C(r,a.shape);let u=l;const m=ec(u,i);let _,d=a;if(null!=m&&(d=NR({inputs:{x:a},backend:n,attrs:{perm:m}}),u=nc(u.length,i),c.push(d)),$i("prod",u,i),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:s,outDtype:a}=YT(d.shape,d.dtype,e,u);_=n.makeTensorInfo(s,a,t)}else{const[e,t]=Ji(d.shape,u),s=g(t),r=yR({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),o=xR(r,fa(a.dtype),"prod",n);_=yR({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(r),c.push(o)}if(o){c.push(_);const e=Zi(_.shape,l);_=yR({inputs:{x:_},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),_}};const sO={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:a,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:i}=s,c=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),u=n.readSync(r.dataId),m=n.readSync(o.dataId),[_,d,p]=QT(c,l,u,r.shape,r.dtype,m,o.shape,i),h=_.map((e=>n.makeTensorInfo([e.length],"int32",e))),f=n.makeTensorInfo(p,r.dtype,d);return h.concat([f])}};const aO={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:a,deltas:r}=t,o=n.readSync(s.dataId),i=n.readSync(a.dataId),c=n.readSync(r.dataId),[l,u]=JT(o,s.shape,s.dtype,i,a.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],s.dtype,u)]}};const rO={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:a,values:r,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=s,l=n.readSync(a.dataId),u=n.readSync(r.dataId),m=n.readSync(o.dataId),_=i.map((e=>n.readSync(e.dataId))),d=i.map((e=>e.shape)),[p,h]=ZT(l,a.shape,u,r.shape,r.dtype,m,o.shape,_,d,c);return n.makeTensorInfo(p,r.dtype,h)}},oO=e=>{const{backend:t,attrs:n}=e,{start:s,stop:a,step:r,dtype:o}=n,i=$T(s,a,r,o);return t.makeTensorInfo([i.length],o,i)},iO={kernelName:ln,backendName:"webgl",kernelFunc:oO},cO=cR({opSnippet:"return 1.0 / x;"}),lO={kernelName:mn,backendName:"webgl",kernelFunc:cO},uO=cR({opSnippet:TE+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mO={kernelName:_n,backendName:"webgl",kernelFunc:uO},_O=cR({opSnippet:TE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),dO={kernelName:wn,backendName:"webgl",kernelFunc:_O};class pO{constructor(e,t,n,s,a){this.variableNames=["A"],this.outputShape=[];const[r,o,i,c]=e;this.outputShape=[r,t,n,c];const l=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n];let m;m=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(m,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class hO{constructor(e,t,n,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,o,i,c]=e;this.outputShape=[r,t,n,c];const l=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n];let m;m=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(m,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const fO={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:o,size:i}=s,[c,l]=i,u=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hO(a.shape,c,l,r,o):new pO(a.shape,c,l,r,o);return n.runWebGLProgram(u,[a],"float32")}};class yO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,a]=t,[,r,o]=e,i=[n&&r>1?s-1:s,n&&o>1?a-1:a],c=[n&&r>1?r-1:r,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],m=1/l,_=1/u,d=2*Math.ceil(m)+2,p=2*Math.ceil(_)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(m,");\n        const float invWidthScale = float(").concat(_,");\n\n        const int winHeight = int(").concat(d,");\n        const int winWidth = int(").concat(p,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(s-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(a-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const wO={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:o}=s,i=new yO(r.shape,a.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}};class gO{constructor(e,t,n,s,a){this.variableNames=["A"],this.outputShape=[];const[r,o,i,c]=e;this.outputShape=[r,t,n,c];const l=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],m=s?"0.5":"0.0";let _;_=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(_,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(m,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class vO{constructor(e,t,n,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,o,i,c]=e;this.outputShape=[r,t,n,c];const l=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],m=s?"0.5":"0.0";let _;_=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(_,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(m,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const xO={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:o,size:i}=s,[c,l]=i,u=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vO(a.shape,c,l,r,o):new gO(a.shape,c,l,r,o);return n.runWebGLProgram(u,[a],a.dtype)}};class bO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,a]=t,[,r,o]=e,i=[n&&r>1?s-1:s,n&&o>1?a-1:a],c=[n&&r>1?r-1:r,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],m=1/l,_=1/u,d=2*Math.ceil(m)+2,p=2*Math.ceil(_)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(m,");\n        const float invWidthScale = float(").concat(_,");\n\n        const int winHeight = int(").concat(d,");\n        const int winWidth = int(").concat(p,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(s,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const kO={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:o}=s,i=new bO(r.shape,a.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}};class IO{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(s))).join(","),a=ZN(n);this.userCode="\n      void main() {\n        ".concat(a," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}class SO{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const s=vE("rc",n),a="".concat(s[n-1]," + 1 < ").concat(this.outputShape[n-1]),r="".concat(s[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=ZN(n);function i(n){const s=e.map(((s,a)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(s[n]," - 1"):"".concat(s[n])}(a,n))),a=s.join(","),r=s.slice(-2).join(",");return"getChannel(getX(".concat(a,"), vec2(").concat(r,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(a,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(s.slice()),";\n          if(").concat(a,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(s.slice()),";\n          }\n          if(").concat(r,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(s.slice()),";\n            if(").concat(a,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(s.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const CO={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:r}=s,o=a.shape.length,i=C(r,a.shape);if(0===o)return JE({inputs:{x:a},backend:n});const c=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SO(a.shape,i):new IO(a.shape,i);return n.runWebGLProgram(c,[a],a.dtype)}};class NO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let a="";a="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(a,"\n          if(coordX >= 0 && coordX < ").concat(s," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const TO={kernelName:ls,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{image:a}=t,{radians:r,fillValue:o,center:i}=n,c=s,l=new NO(a.shape,o),[u,m]=uu(i,a.shape[1],a.shape[2]),_=[[u,m,Math.sin(r),Math.cos(r)]];return c.runWebGLProgram(l,[a],a.dtype,_)}},EO=cR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),RO={kernelName:vn,backendName:"webgl",kernelFunc:EO},AO=cR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:eE}),FO={kernelName:xn,backendName:"webgl",kernelFunc:AO};class DO{constructor(e,t,n,s,a,r){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const i=ZN(a.length),c=ZN(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let m="";1===s?m="i":2===s&&(m="i, coords[1]");const _="getUpdates(".concat(m,")");let d="";o&&(d="coords[0], coords[1]");const p="getDefaultValue(".concat(d,")"),h=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(a,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(h,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(_,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(p,", sum, float(found)));\n        }\n      ")}}class MO{constructor(e,t,n,s,a,r){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const i=ZN(a.length),c=ZN(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let m="";1===s?m="i":2===s&&(m="i, coords[1]");const _="getUpdates(".concat(m,")");let d="";o&&(d="coords[0], coords[1]");const p="getDefaultValue(".concat(d,")"),h=t>1?"strides[j]":"strides",f=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(a,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(h,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(f,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(_,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(p,", sum, found));\n        }\n      ")}}const OO={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:r}=t,{shape:o}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:m}=gu(0,a,o),_=[m/l,l];if(0===m)return n.makeTensorInfo(o,a.dtype);const d=yR({inputs:{x:a},backend:n,attrs:{shape:[c,i]}}),p=yR({inputs:{x:r},backend:n,attrs:{shape:[c,l]}}),h=n.makeTensorInfo([],"float32",new Float32Array([0]));let f;f=Q().getBool("WEBGL_PACK")?new MO(c,i,d.shape.length,p.shape.length,u,_):new DO(c,i,d.shape.length,p.shape.length,u,_);const y=n.runWebGLProgram(f,[p,d,h],p.dtype),w=yR({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(h),w}};class LO{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),r=2===Q().getNumber("WEBGL_VERSION")?"while (left < right) {":a,o="left"===s?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(r,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const BO={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:a,values:r}=t,{side:o}=s,i=new LO(a.shape[0],a.shape[1],r.shape[1],o),c=[[a.shape[1]]];return n.runWebGLProgram(i,[a,r],"int32",c)}};class zO{constructor(e,t,n){let s,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)a="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],o=[];for(let s=0;s<t.length;s++)o.push("".concat(n[s])),s<e&&r.push("".concat(n[s]));s=r.join(),a=o.join()}const r=ZN(n);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        float cVal = getC(").concat(s,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(a,"));\n        } else {\n          setOutput(getB(").concat(a,"));\n        }\n      }\n    ")}}const PO={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:r}=t,o=new zO(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[s,a,r],ha(a.dtype,r.dtype))}},WO=cR({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(vu,";\n  float scale = ").concat(xu,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),UO={kernelName:Cn,backendName:"webgl",kernelFunc:WO},VO=cR({opSnippet:iR+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:nE}),GO={kernelName:An,backendName:"webgl",kernelFunc:VO},HO=cR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),jO={kernelName:Rn,backendName:"webgl",kernelFunc:HO},KO=cR({opSnippet:iR+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(YE,"\n  return result;\n")}),qO={kernelName:Tn,backendName:"webgl",kernelFunc:KO},XO=cR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),YO={kernelName:En,backendName:"webgl",kernelFunc:XO},QO=cR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),JO={kernelName:Fn,backendName:"webgl",kernelFunc:QO},ZO={kernelName:On,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,paddings:o}=s;f(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=r.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let f=1+r.length;f<a.shape.length;++f)c.push([0,0]);const l=[],u=ZM({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),m=mu(u.shape,r,i,!1),_=_u(m.length,r.length,!1),d=du(u.shape,r,i,!1),p=yR({inputs:{x:u},backend:n,attrs:{shape:m}}),h=NR({inputs:{x:p},backend:n,attrs:{perm:_}}),y=yR({inputs:{x:h},backend:n,attrs:{shape:d}});return l.push(u),l.push(p),l.push(h),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const $O={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:a,denseShape:r,defaultValue:o}=t;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(r.shape));if(2!==s.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(s.shape));if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(a.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(o.dataId)[0],[m,_,d,p,h]=rE(i,s.shape,s.dtype,c,a.dtype,l,u);return[n.makeTensorInfo(_,s.dtype,m),n.makeTensorInfo([_[0]],a.dtype,d),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map((e=>Number(e))))),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const eL={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:a,newShape:r}=t;if(2!==s.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(s.shape));if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const o=Array.from(n.readSync(a.dataId)),i=n.readSync(s.dataId),c=Array.from(n.readSync(r.dataId)),[l,u,m]=oE(i,s.shape,s.dtype,o,c);return[n.makeTensorInfo(u,s.dtype,l),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const tL={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(a.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(r.shape));const o=n.readSync(s.dataId),i=n.readSync(a.dataId),c=n.readSync(r.dataId),[l,u]=iE(o,s.shape,s.dtype,i,c,!0);return n.makeTensorInfo(u,s.dtype,l)}};const nL={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(a.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(r.shape));const o=n.readSync(s.dataId),i=n.readSync(a.dataId),c=n.readSync(r.dataId),[l,u]=iE(o,s.shape,s.dtype,i,c);return n.makeTensorInfo(u,s.dtype,l)}};const sL={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:r,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:m,outputSize:_}=gu(0,a,i),d=!1;if("string"===r.dtype){const e=n.bufferSync(a),t=n.bufferSync(r),s=Vs(n.readSync(o.dataId)[0]),p=tE(e,t,i,_,u,l,c,m,s,d);return n.makeTensorInfo(i,p.dtype,p.values)}const p=new DO(l,c,a.shape.length,r.shape.length,m,[_,1],d),h=n.runWebGLProgram(p,[r,a,o],r.dtype),f=yR({inputs:{x:h},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),f}};const aL={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:r,axis:o}=s,i=C(o,a.shape)[0],c=Ku(a,r,i),l=a.shape.length,u=new Array(l).fill(0),m=a.shape.slice();return c.map((e=>{const t=[...m];t[i]=e;const s=IA({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,s}))}},rL="return sqrt(x);",oL=cR({opSnippet:rL,packedOpSnippet:rL,cpuKernelImpl:cE}),iL={kernelName:Dn,backendName:"webgl",kernelFunc:oL},cL={kernelName:Hn,backendName:"webgl",kernelFunc:cR({opSnippet:"return x * x;"})},lL="return (a - b) * (a - b);",uL=lR({opSnippet:lL,packedOpSnippet:lL}),mL={kernelName:Gn,backendName:"webgl",kernelFunc:uL};const _L={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const r=cm(n.readSync(a.dataId)),o=lE(r,"string",s);return n.makeTensorInfo(a.shape,"string",o)}};const dL={kernelName:is,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:s}=e;const{x:a}=t,r=TE+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new NE(a.shape,r);return s.runWebGLProgram(o,[a],a.dtype)}};class pL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,a=ZN(n.length),r=ZN(n.length);let o="";if(1===s)o="coords * strides + begin";else{let e=0;o=n.map(((t,s)=>(e++,1===n.length?"coords * strides[".concat(s,"] + begin[").concat(s,"]"):"coords[".concat(e-1,"] * strides[").concat(s,"] + begin[").concat(s,"]")))).join(",")}this.userCode="\n      ".concat(a," begin = ").concat(a,"(").concat(e,");\n      ").concat(a," strides = ").concat(a,"(").concat(t,");\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const hL={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:m,shrinkAxisMask:_}=s,{finalShapeSparse:d,finalShape:p,isIdentity:h,sliceDim0:y,isSimpleSlice:w,begin:g,end:v,strides:x}=Go(a.shape,r,o,i,c,l,u,m,_);let b;if(h)b=yR({inputs:{x:a},backend:n,attrs:{shape:p}});else if(y||w){f(a.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(a.shape.length)));const e=Ro(g,v,x),t=IA({inputs:{x:a},backend:n,attrs:{begin:g,size:e}});b=yR({inputs:{x:t},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Br(a.shape,a.dtype,e),s=uE(d,t,x,g);b=n.makeTensorInfo(p,a.dtype,s.values)}else{const e=new pL(g,x,d);b=n.runWebGLProgram(e,[a],a.dtype)}}const k=yR({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(b),k}};const fL={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:a,nGramWidths:r,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=s,{data:u,dataSplits:m}=t,_=n.readSync(u.dataId),d=n.readSync(m.dataId),[p,h]=mE(_,d,a,r,o,i,c,l);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(m.shape,"int32",h)]}};const yL={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:a}=s,{input:r,delimiter:o}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(r.dataId),c=n.readSync(o.dataId)[0],[l,u,m]=_E(i,c,a),_=u.length;return[n.makeTensorInfo([_,2],"int32",l),n.makeTensorInfo([_],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(m))]}};const wL={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:a}=s,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(r.dataId),i=dE(o,a);return n.makeTensorInfo(r.shape,"int32",i)}},gL=cR({opSnippet:"return tan(x);"}),vL={kernelName:Jn,backendName:"webgl",kernelFunc:gL},xL=cR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),bL={kernelName:Zn,backendName:"webgl",kernelFunc:xL};const kL={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:a,indices:r,updates:o}=t,{}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:m}=gu(0,r,a.shape),_=[m/l,l];if(0===m)return n.makeTensorInfo(a.shape,r.dtype);const d=yR({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),p=yR({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),h=yR({inputs:{x:a},backend:n,attrs:{shape:_}}),f=new DO(c,i,d.shape.length,p.shape.length,u,_,!1,!0),y=n.runWebGLProgram(f,[p,d,h],h.dtype),w=yR({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(y),w}};class IL{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const s=ZN(this.rank),a=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<e.length;a++)s.push("imod(".concat(n[a],", ").concat(e[a],")"));return s.join()}(e);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")}}function SL(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:r}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Vs(e))):e,s=Br(a.shape,a.dtype,t),o=hE(s,r);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new IL(a.shape,r);return n.runWebGLProgram(o,[a],a.dtype)}const CL={kernelName:$n,backendName:"webgl",kernelFunc:SL};class NL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class TL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function EL(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function RL(e){let t=1;for(;t<e;)t*=2;return t}const AL={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:r,sorted:o}=s,i=Q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([a])||u<i||r>c){const e=n.readSync(a.dataId),[t,s]=fE(e,l,a.dtype,r,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===r)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[a,lD({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const m=n.texData.get(a.dataId),_=null!==m&&m.isPacked,d=_?n.unpackTensor(a):a,p=g(l)/u,h=yR({inputs:{x:d},attrs:{shape:[p,u]},backend:n});_&&EL(n,d);const f=RL(r),y=RL(u);let w=null;const v=()=>null===w?[h,h]:[h,w],x=(e,t,s)=>{const a=v(),r=new NL(s),o=[[u],[null===w?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=w;w=n.runWebGLProgram(r,a,"int32",o),EL(n,i)};for(let g=1;g<f;g*=2){const e=2*g;for(let t=g;t>=1;t/=2)x(e,t,[p,y])}for(let g=y;g>f;g/=2){const e=v(),t=new TL([p,g/2]),s=[[u],[null===w?1:0],[f]],a=w;w=n.runWebGLProgram(t,e,"int32",s),EL(n,a);const r=f/2,o=2*r;for(let n=r;n>=1;n/=2)x(o,n,w.shape)}let b=w;w=IA({inputs:{x:w},backend:n,attrs:{begin:0,size:[p,r]}}),EL(n,b);let k=TD({inputs:{x:h,indices:w},backend:n,attrs:{axis:1,batchDims:1}});EL(n,h);const I=l.slice(0,-1);I.push(r),b=w,w=yR({inputs:{x:w},attrs:{shape:I},backend:n}),EL(n,b);const S=k;return k=yR({inputs:{x:k},attrs:{shape:I},backend:n}),EL(n,S),[k,w]}};class FL{constructor(e,t,n,s,a,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const o="nearest"===n?1:2;let i;switch(s){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(a,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(a,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const DL={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,transforms:r}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=s,[u,m,_,d]=a.shape,[p,h]=null!=l?l:[m,_],f=new FL(m,_,o,i,c,[u,p,h,d]);return n.runWebGLProgram(f,[a,r],"float32")}};const ML={kernelName:ss,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:a}=n,{x:r}=t;MN(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(r.dataId),{outputValues:i,outputShape:c,indices:l}=wE(o,a,r.shape,r.dtype);return[s.makeTensorInfo(c,r.dtype,i),s.makeTensorInfo([l.length],"int32",l)]}};const OL={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const o=a,i=o.shape.length,c=a.shape[r],l=new Array(i-1);let u=0;for(let h=0;h<i;h++)h!==r&&(l[u++]=o.shape[h]);const m=[],_=new Array(i).fill(0),d=o.shape.slice();d[r]=1;const p=new Array(c);for(let h=0;h<p.length;h++){_[r]=h;const e=IA({inputs:{x:o},backend:n,attrs:{begin:_,size:d}}),t=yR({inputs:{x:e},backend:n,attrs:{shape:l}});p[h]=t,m.push(e)}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};class LL{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,a=e.inSize,r=e.numSegments,o=r*Math.ceil(a/n);this.outputShape=[s,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";a%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      "));let m="";a%n>0&&(m="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(m,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(r,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(r,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const BL={kernelName:rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:r}=t,{numSegments:o}=s,i=a.shape.length,c=[];let l=0;const u=ec([l],i);let m=a;null!=u&&(m=NR({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(m),l=nc(1,i)[0]);const _=om(m.shape,l,o),d=g([m.shape[l]]),p=yR({inputs:{x:m},backend:n,attrs:{shape:[-1,d]}});c.push(p);const h=fa(a.dtype),f=(e,t,s,a,r)=>{const o=e.shape[0],i=e.shape[1],l=rm(i,r),u=new LL({windowSize:l,inSize:i,batchSize:o,numSegments:r},t),m=n.compileAndRun(u,[e,s],a);if(c.push(m),m.shape[1]===r)return m;const _=oO({backend:n,attrs:{start:0,stop:r,step:1,dtype:"float32"}}),d=SL({inputs:{x:_},backend:n,attrs:{reps:[i/l]}});c.push(_),c.push(d);return f(m,t,d,a,r)},y=yR({inputs:{x:f(p,"unsortedSegmentSum",r,h,o)},backend:n,attrs:{shape:_}});let w=y;if(null!=u){c.push(y);const e=tc(u);w=NR({inputs:{x:w},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},zL=[AR,DR,OR,BR,WR,GR,HR,jR,JR,ZR,eA,nA,aA,oA,cA,mA,_A,hA,fA,yA,vA,CA,NA,TA,EA,OA,zA,UA,eR,HA,ZA,oF,mF,dF,pF,hF,fF,wF,vF,bF,TF,EF,RF,FF,OF,zF,PF,UF,GF,HF,KF,qF,YF,JF,$F,tD,aD,iD,uD,_D,hD,yD,vD,kD,ID,CD,ED,AD,DD,ZE,MD,YA,LD,zD,WD,sR,VD,HD,jD,qD,YD,JD,$D,tM,aM,oM,cM,uM,mM,_M,hM,fM,yM,wM,gM,xM,IM,CM,OM,fR,BM,PM,UM,GM,AA,jM,XM,YM,$M,tO,oR,nO,sO,aO,rO,iO,DA,EM,lO,mO,dO,wR,fO,wO,xO,kO,CO,TO,RO,FO,OO,BO,PO,UO,GO,jO,qO,YO,SA,MM,JO,ZO,$O,eL,tL,nL,sL,aL,iL,cL,mL,_L,dL,hL,fL,yL,wL,FM,CR,vL,bL,kL,CL,AL,DL,TR,ML,OL,BL,qM];for(const n of zL)vs(n);const PL={train:async(e,t,n)=>{const s=WL(i),a=UL(i),r=new xy(o);var o;const c=Ug({units:64,inputShape:[30],activation:"relu"}),l=Ug({units:64,activation:"relu"}),u=Ug({units:32,activation:"relu"}),m=Ug({units:1,activation:"sigmoid"});r.add(c),r.add(l),r.add(u),r.add(m),r.compile({optimizer:Zl.adam(),loss:"binaryCrossentropy",metrics:["accuracy"]});const _=await r.fit(s,a,{batchSize:parseInt(e),epochs:parseInt(t),validationSplit:.2,callbacks:{onEpochEnd:(e,t)=>{n("Epoch ".concat(e+1,": loss = ").concat(t.loss.toFixed(4),", accuracy = ").concat(t.acc.toFixed(4)))}},verbose:0}),d=100*_.history.acc[_.history.acc.length-1],p=100*_.history.val_acc[_.history.val_acc.length-1];n("Final training accuracy: ".concat(d.toFixed(1),"%")),n("Final validation accuracy: ".concat(p.toFixed(1),"%")),await r.save("localstorage://breast-cancer-model"),n("Model saved to LocalStorage")},loadModel:async()=>{try{return!!await vy("localstorage://breast-cancer-model")||null}catch(e){return null}},predict:async e=>{try{const t=await vy("localstorage://breast-cancer-model"),n=WL(c),s=UL(c);Ka((()=>{const a=t.predict(n),r=Array.from(a.dataSync());let o=0,i=0,c=0;const l=Array.from(s.dataSync());r.forEach(((t,n)=>{c++;const s=1===l[n]?"Malignant":"Benign",a=t>.5?"Malignant":"Benign";s===a?o++:i++,e("Test data [".concat(n,"] id[").concat(l[n],"] Predict = ").concat(a,",  Test diagnosis = ").concat(s))})),e("Correct=".concat(o,", Wrong=").concat(i,", Total=").concat(c))}))}catch(t){return void e("No model breast-cancer-model was found in localStorage. Train and then save model to localStorage")}}},WL=e=>{const t=e.map((e=>[e.radius_mean,e.texture_mean,e.perimeter_mean,e.area_mean,e.smoothness_mean,e.compactness_mean,e.concavity_mean,e.concave_points_mean,e.symmetry_mean,e.fractal_dimension_mean,e.radius_se,e.texture_se,e.perimeter_se,e.area_se,e.smoothness_se,e.compactness_se,e.concavity_se,e.concave_points_se,e.symmetry_se,e.fractal_dimension_se,e.radius_worst,e.texture_worst,e.perimeter_worst,e.area_worst,e.smoothness_worst,e.compactness_worst,e.concavity_worst,e.concave_points_worst,e.symmetry_worst,e.fractal_dimension_worst]));return Gc(t,[t.length,30])},UL=e=>{const t=e.map((e=>["M"===e.diagnosis?1:0]));return Gc(t,[t.length,1])},VL=PL;var GL=n(579);const HL=e=>{let{children:t}=e;return(0,GL.jsx)("div",{className:"content",children:t})},jL=()=>(0,GL.jsx)("header",{className:"header",children:"Simple Detection of Breast Cancer using Tensorflow.js and React.js"}),KL=()=>(0,GL.jsxs)("footer",{className:"footer",children:["\xa9Epics Project ",(new Date).getFullYear()]}),qL=e=>{let{children:t}=e;return(0,GL.jsxs)("div",{className:"layout",children:[(0,GL.jsx)(jL,{}),(0,GL.jsx)("div",{className:"wrapper",children:t}),(0,GL.jsx)(KL,{})]})};function XL(e){let{value:t,setValue:n}=e;return(0,GL.jsx)("input",{value:t,onChange:e=>n(e.target.value)})}const YL=function(){const[e,t]=(0,r.useState)(32),[n,s]=(0,r.useState)(100),[a,o]=(0,r.useState)(""),i=(0,r.useRef)(null),c=e=>{o((t=>t+e+"\n"));const t=i.current;t.scrollHeight>t.clientHeight&&(t.scrollTop=t.scrollHeight+30)};return(0,GL.jsx)(qL,{children:(0,GL.jsx)(HL,{children:(0,GL.jsxs)("div",{className:"main-wrapper-content",children:[(0,GL.jsx)("textarea",{ref:i,className:"log-textarea",value:a,readOnly:!0}),(0,GL.jsxs)("div",{className:"controllers-wrapper",children:[(0,GL.jsx)("p",{children:"Batch Size"}),(0,GL.jsx)(XL,{value:e,setValue:t}),(0,GL.jsx)("p",{children:"Epochs"}),(0,GL.jsx)(XL,{value:n,setValue:s}),(0,GL.jsx)("button",{onClick:()=>{VL.train(e,n,c)},children:"Train"}),(0,GL.jsx)("button",{onClick:()=>{VL.predict(c)},children:"Predict"})]})]})})})},QL=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,453)).then((t=>{let{getCLS:n,getFID:s,getFCP:a,getLCP:r,getTTFB:o}=t;n(e),s(e),a(e),r(e),o(e)}))};o.createRoot(document.getElementById("root")).render((0,GL.jsx)(r.StrictMode,{children:(0,GL.jsx)(YL,{})})),QL()})()})();
//# sourceMappingURL=main.65b040a7.js.map